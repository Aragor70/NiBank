{"version":3,"sources":["components/PageHeader.tsx","components/PageSubTitle.tsx","components/Loader.tsx","utils/constants.ts","components/project/GlobalProjectListElement.tsx","pages/HomePageGuest.tsx","store/actions/auth/types.ts","store/actions/alert/types.ts","store/actions/alert/index.ts","utils/setAuthToken.ts","store/actions/auth/index.ts","components/footer/FooterLoggedIn.tsx","components/tsx/MyTsxListElement.tsx","utils/getMonthlyArry.ts","components/Approval.tsx","components/NotFound.tsx","pages/HomePageUser.tsx","components/login/EmailField.tsx","components/login/PasswordField.tsx","pages/auth/Login.tsx","pages/auth/register/Register.tsx","components/TermsContent.tsx","components/register/TermsAndConditions.tsx","components/register/CreateAccount.tsx","components/register/Confirmation.tsx","components/register/AccountSelection.tsx","components/Alert.tsx","pages/auth/register/GSA.tsx","pages/SecurityCenter.tsx","pages/auth/RecoverEmail.tsx","pages/auth/RecoverPassword.tsx","components/tsx/GlobalTsxListElement.tsx","pages/Transactions.tsx","components/PlatformOverwiev.tsx","pages/Statistics.tsx","store/actions/tsx/types.ts","utils/ValidatingMethods.ts","store/actions/tsx/index.ts","store/actions/project/types.ts","store/actions/project/index.ts","components/Menu.tsx","components/footer/FooterLoggedOut.tsx","pages/PageNotFound.tsx","pages/MyTransactions.tsx","pages/Store.tsx","pages/Profile.tsx","components/lists/AccountRow.tsx","components/form/CreateTransfer.tsx","pages/ChooseTransaction.tsx","components/form/CreateInvestment.tsx","pages/Project.tsx","components/form/CreateProject.tsx","pages/Projects.tsx","pages/Loading.tsx","components/TsxDetails.tsx","pages/Tsx.tsx","pages/MyInvestments.tsx","pages/NewProject.tsx","pages/ApprovePage.tsx","pages/Settings.tsx","pages/Wallets.tsx","pages/Wallet.tsx","pages/TermsAndConditions.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","store/reducers/alert.ts","store/reducers/auth.ts","store/reducers/users.ts","store/reducers/tsx.ts","store/reducers/account.ts","store/reducers/project.ts","store/reducers/index.ts","store/store.ts","index.tsx","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/core/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["connect","state","auth","withRouter","history","useState","isDarkMode","setIsDarkMode","handleToggle","a","document","body","classList","toggle","value","useEffect","mode","className","onClick","push","style","color","fontSize","icon","sunny","moon","slot","marginLeft","size","name","subTitles","boxShadow","map","element","index","action","path","display","itemsAlign","text","Loader","duration","URL","PROJECTS_PALETTE","ISO_COUNTRY_CODES","Object","freeze","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","str","project","isSample","position","minWidth","code","country","keys","filter","key","toLowerCase","includes","height","status","stopwatchOutline","lockClosedOutline","cardOutline","lines","textAlign","projectname","padding","description","volumetotal","currency","yieldpa","term","typeofproperty","typeofinvestment","minimuminvestment","top","left","fontWeight","opacity","volumeinvested","toFixed","bottom","images","src","onIonError","e","target","handleDefaultSrc","alt","user","user_id","project_id","tsx","users","setArryOfColors","values","arry","slice","colors","sortBy","toReturn","forEach","found","item","options","responsive","maintainAspectRatio","plugins","legend","scales","xAxes","stacked","yAxis","sortedDataset","underConsiderationProjects","length","label","openProjects","closedProjects","data","labels","datasets","backgroundColor","borderColor","borderWidth","loading","myChart","Chart","type","register","registerables","LineController","LineElement","PointElement","LinearScale","Title","destroy","projects","home","fullscreen","lineHeight","analytics","people","end","card","businessOutline","tsxs","id","width","undefined","rowGap","bookOutline","Login_Success","Login_Fail","Register_Success","Register_Fail","Load_User","Logout_User","User_Update","Load_Users_Success","Load_Users_Fail","Pre_Login_Success","Pre_Login_Fail","Create_Wallet_Success","Create_Wallet_Fail","Loading_Auth","User_Update_Fail","Set_Alert","Remove_Alert","setAlert","message","alertType","dispatch","uuidv4","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","localStorage","get","res","loadUsers","console","log","updateCredentials","formData","put","logout","err","flexDirection","statsChart","appsOutline","wallets","approved","person","logOut","extendTsx","setExtendTsx","isUp","setIsUp","detailsOn","setDetailsOn","from_id","from","setFrom","to_project_id","tsx_id","right","zIndex","trendingUp","trendingDown","marginBottom","moment","created_on","format","amount","to_user_id","first_name","dates","reduce","val","obj","comp","paddingLeft","paddingRight","paddingBottom","border","alignItems","star","NotFound","informationCircleOutline","account","slides","useRef","selectWalletView","setSelectWalletView","handleWalletChange","current","getSwiper","slideTo","prevSlide","slidePrev","nextSlide","slideNext","handleWalletSwipe","getActiveIndex","borderRadius","minHeight","last_name","pager","initialSlide","speed","centeredSlides","ref","onIonSlideDidChange","paddingTop","balance","in","out","pathname","new_wallet","addCircleOutline","returnDownBack","returnDownForward","addCircle","justifyContent","getMonthlyArry","elem","investments","preLogin","present","setStep","post","response","cssClass","header","buttons","handler","onDidDismiss","setFormData","step","email","password","emailSave","useIonAlert","checkEmail","preventDefault","onSubmit","max","onIonChange","handleChange","checked","detail","disabled","RegExp","test","class","login","setItem","removeItem","loginHandler","checkmark","termsAndConditions","accountType","preRegister","passwordConfirmation","twoFactor","registerHandler","split","close","alert","alerts","isCurrentPage","s","borderLeft","setArry","isScanning","setIsScanning","sort","b","previous_hash","current_hash","verifySecret","updateEmail","secret","emailConfirmation","handleVerify","handleSubmit","setForgotCredentials","preRecovery","formDataOne","setFormDataOne","formDataTwo","setFormDataTwo","handleUpdate","handleChangeTwo","subTitle","handleChangeOne","GlobalTsxListElement","PlatformOverwiev","Statistics","Tsx_Create_Success","Tsx_Create_Fail","Get_Balance_Success","Get_Wallets_Success","Get_Balance_Fail","Get_Wallets_Fail","Get_Tsxs_Success","Get_Tsxs_Fail","Get_My_Tsxs_Success","Get_My_Investments_Success","Get_My_Tsxs_Fail","Get_My_Investments_Fail","Get_Total_Funds_Success","Get_Total_Funds_Fail","Get_YieldPA_Success","Get_YieldPA_Fail","Tsx_Loading","Account_Loading","Get_Tsx_Success","Get_Tsx_Fail","ValidatingMethods","getValidTsxs","dataset","entries","i","toString","previous_object","current_object","previous_saved","validatingMethods","getTsx","getBalance","main_wallet","isMatch","unshift","acc","myTransactions","myTotalFunds","myYieldPA","transaction","clearTsx","Get_Projects_Success","Get_Open_Projects_Success","Get_Closed_Projects_Success","Project_Create_Success","Get_Under_Consideration_Projects_Success","Get_Project_Success","Project_Update_Success","Get_Projects_Fail","Get_Open_Projects_Fail","Get_Closed_Projects_Fail","Project_Create_Fail","Get_Under_Consideration_Projects_Fail","Get_Project_Fail","Project_Update_Fail","Project_Delete_Success","Project_Delete_Fail","Project_Loading","newProject","getProjects","resTsx","listofinvestors","project_tsxs","underconsideration","myInvestments","getProject","investedValues","projectData","location","side","menuId","contentId","isAuthenticated","postion","alertCircleOutline","Profile","AccountRow","doSearch","setDoSearch","to","public_key","CreateTransfer","React","memo","newTsx","prevTsx","accounting_date","autocomplete","investment","transfer","selectView","setSelectView","investTitles","transferTitles","CreateInvestment","newInvest","match","updateProject","deleteProject","delete","startdate","closedate","image","investors","setProjectData","isOpen","setIsOpen","getData","params","overview","update","owner_id","long_description","underConsideration","open","closed","showMore","setShowMore","newOneTitles","Loading","access","wordBreak","tsxData","setTsxData","userValue","confirm","success","codeUpdate","handleRequest","letterSpacing","maxlength","placeholder","isNaN","updateMainWallet","createWallet","updateIncome","selected","setSelected","openSecret","setOpenSecret","openAvatarInput","setOpenAvatarInput","gender_title","date_of_birth","avatar","avatarField","setAvatarField","mainWallet","setMainWallet","income","incomeValue","setIncomeValue","updateAvatar","handlePersonalData","updateForm","handleMainWallet","handleWallet","indexOf","wallet","handleIncome","passwordData","setPasswordData","handleChangePassword","lockOpen","lockClosed","private_key","autoComplete","walletDetails","setWalletDetails","clearProjects","setupIonicReact","exact","HomePageUser","MyTransactions","MyInvestments","render","HomePageGuest","Boolean","window","hostname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","role","two_factor","getItem","errors","totalFunds","yieldPA","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","webpackEmptyAsyncContext","req","Promise","resolve","Error","module","exports","webpackAsyncContext","__webpack_require__","o","ids"],"mappings":"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","file":"static/js/main.963f5543.chunk.js","sourcesContent":["\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonItem, IonToggle, IonMenuToggle } from '@ionic/react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\n\r\nimport { menuController } from '@ionic/core';\r\nimport { moon, sunny } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PageHeader: React.FC<RouteComponentProps | any> = ({ history, auth }) => {\r\n\r\n  const [ isDarkMode, setIsDarkMode ] = useState(false)\r\n\r\n  const handleToggle = async () => {\r\n\r\n    document.body.classList.toggle(\"dark\");\r\n\r\n    if (document?.body?.classList?.value === 'dark') {\r\n      setIsDarkMode(true)\r\n    } else {\r\n      setIsDarkMode(false)\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (document?.body?.classList?.value === 'dark') {\r\n      setIsDarkMode(true)\r\n    } else {\r\n      setIsDarkMode(false)\r\n    }\r\n    \r\n\r\n  }, [document?.body?.classList?.value])\r\n\r\n  return (\r\n      <IonHeader>\r\n        <IonItem mode=\"md\">\r\n          <IonTitle className=\"no-padding\"><span onClick={() => history.push(\"/\")} className=\"brand-icon\"><span style={{ color: '#3880ff' }}>Ni</span><span style={{ color: '#3dc2ff' }}>Vest</span> <span style={{ color: '#3dc2ff', fontSize: '12.5px' }}>Beta 1.1.6</span></span></IonTitle>\r\n          \r\n            <IonIcon icon={isDarkMode ? sunny : moon} onClick={() => handleToggle()} slot=\"end\"></IonIcon>\r\n            \r\n            <IonMenuToggle slot=\"end\" className=\"vertical-center\" style={{ marginLeft: '15px'}}>\r\n              <IonIcon size=\"large\" color=\"dark\" name=\"menu-outline\"></IonIcon>\r\n            </IonMenuToggle>\r\n        </IonItem>\r\n      </IonHeader>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(PageHeader));\r\n","\r\nimport { IonBreadcrumb, IonBreadcrumbs, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonIcon, IonItem, IonList, IonText } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\ninterface PageSubTitle {\r\n    subTitle: string\r\n}\r\n\r\nconst PageSubTitle: React.FC<PageSubTitle | any> = ({ subTitles, history }) => {\r\n\r\n  return (\r\n    <IonList>\r\n    <IonItem>\r\n        <IonCard style={{ boxShadow: 'none' }} className=\"no-padding no-borders\" mode=\"md\">\r\n            <IonCardHeader className=\"no-padding\">\r\n              {/* <IonCardTitle style={{ fontSize: '16px' }} >\r\n                {subTitle}\r\n              </IonCardTitle> */}\r\n              <IonBreadcrumbs>\r\n                {/* {\r\n                  values.map((element: any) => <IonBreadcrumb href=\"#\">{element}</IonBreadcrumb>)\r\n                } */}\r\n                {\r\n                  subTitles?.map((element: any, index: number) => <Fragment key={index}>\r\n                    <IonBreadcrumb className=\"inner-items-active\" onClick={ element.action ? () => element.action() : element.path ? () => history.push(element.path) : () => false} style={{ display: 'flex', itemsAlign: 'center' }}>\r\n\r\n                      {\r\n                        element.icon ? <IonIcon icon={element.icon} slot=\"start\"></IonIcon> : false\r\n                      }\r\n\r\n                      <IonText>{element.text || 'N/A'}</IonText>\r\n\r\n                    </IonBreadcrumb>\r\n                  </Fragment>)\r\n                }\r\n                \r\n                \r\n              </IonBreadcrumbs>\r\n            </IonCardHeader>\r\n        </IonCard>\r\n    </IonItem>\r\n    </IonList>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {  })(withRouter(PageSubTitle));\r\n","\r\nimport { IonItem, IonSpinner, IonTitle } from '@ionic/react';\r\n\r\nconst Loader: React.FC<any> = () => {\r\n\r\n\r\n  return (\r\n    <IonItem>\r\n        <div className=\"ion-items-center\">\r\n            <IonSpinner duration={1500} color=\"primary\"></IonSpinner>\r\n        </div>\r\n    </IonItem>\r\n  );\r\n};\r\nexport default Loader;\r\n","\r\nexport const URL: string = 'http://139.59.150.253:5000'\r\n\r\nexport const PROJECTS_PALETTE: any[] = \r\n    [\r\n        {index: 0, value: 'rgba(61, 194, 255, 1)'},\r\n        {index: 1, value: 'rgba(56, 128, 255, 1)'},\r\n        {index: 2, value: 'rgba(146, 148, 156, 1)'},\r\n    ]\r\n\r\nexport const ISO_COUNTRY_CODES: any = Object.freeze({\r\n    AF: 'Afghanistan',\r\n    AX: 'Aland Islands',\r\n    AL: 'Albania',\r\n    DZ: 'Algeria',\r\n    AS: 'American Samoa',\r\n    AD: 'Andorra',\r\n    AO: 'Angola',\r\n    AI: 'Anguilla',\r\n    AQ: 'Antarctica',\r\n    AG: 'Antigua And Barbuda',\r\n    AR: 'Argentina',\r\n    AM: 'Armenia',\r\n    AW: 'Aruba',\r\n    AU: 'Australia',\r\n    AT: 'Austria',\r\n    AZ: 'Azerbaijan',\r\n    BS: 'Bahamas',\r\n    BH: 'Bahrain',\r\n    BD: 'Bangladesh',\r\n    BB: 'Barbados',\r\n    BY: 'Belarus',\r\n    BE: 'Belgium',\r\n    BZ: 'Belize',\r\n    BJ: 'Benin',\r\n    BM: 'Bermuda',\r\n    BT: 'Bhutan',\r\n    BO: 'Bolivia',\r\n    BA: 'Bosnia And Herzegovina',\r\n    BW: 'Botswana',\r\n    BV: 'Bouvet Island',\r\n    BR: 'Brazil',\r\n    IO: 'British Indian Ocean Territory',\r\n    BN: 'Brunei Darussalam',\r\n    BG: 'Bulgaria',\r\n    BF: 'Burkina Faso',\r\n    BI: 'Burundi',\r\n    KH: 'Cambodia',\r\n    CM: 'Cameroon',\r\n    CA: 'Canada',\r\n    CV: 'Cape Verde',\r\n    KY: 'Cayman Islands',\r\n    CF: 'Central African Republic',\r\n    TD: 'Chad',\r\n    CL: 'Chile',\r\n    CN: 'China',\r\n    CX: 'Christmas Island',\r\n    CC: 'Cocos (Keeling) Islands',\r\n    CO: 'Colombia',\r\n    KM: 'Comoros',\r\n    CG: 'Congo',\r\n    CD: 'Congo, Democratic Republic',\r\n    CK: 'Cook Islands',\r\n    CR: 'Costa Rica',\r\n    CI: \"Cote D'Ivoire\",\r\n    HR: 'Croatia',\r\n    CU: 'Cuba',\r\n    CY: 'Cyprus',\r\n    CZ: 'Czech Republic',\r\n    DK: 'Denmark',\r\n    DJ: 'Djibouti',\r\n    DM: 'Dominica',\r\n    DO: 'Dominican Republic',\r\n    EC: 'Ecuador',\r\n    EG: 'Egypt',\r\n    SV: 'El Salvador',\r\n    GQ: 'Equatorial Guinea',\r\n    ER: 'Eritrea',\r\n    EE: 'Estonia',\r\n    ET: 'Ethiopia',\r\n    FK: 'Falkland Islands (Malvinas)',\r\n    FO: 'Faroe Islands',\r\n    FJ: 'Fiji',\r\n    FI: 'Finland',\r\n    FR: 'France',\r\n    GF: 'French Guiana',\r\n    PF: 'French Polynesia',\r\n    TF: 'French Southern Territories',\r\n    GA: 'Gabon',\r\n    GM: 'Gambia',\r\n    GE: 'Georgia',\r\n    DE: 'Germany',\r\n    GH: 'Ghana',\r\n    GI: 'Gibraltar',\r\n    GR: 'Greece',\r\n    GL: 'Greenland',\r\n    GD: 'Grenada',\r\n    GP: 'Guadeloupe',\r\n    GU: 'Guam',\r\n    GT: 'Guatemala',\r\n    GG: 'Guernsey',\r\n    GN: 'Guinea',\r\n    GW: 'Guinea-Bissau',\r\n    GY: 'Guyana',\r\n    HT: 'Haiti',\r\n    HM: 'Heard Island & Mcdonald Islands',\r\n    VA: 'Holy See (Vatican City State)',\r\n    HN: 'Honduras',\r\n    HK: 'Hong Kong',\r\n    HU: 'Hungary',\r\n    IS: 'Iceland',\r\n    IN: 'India',\r\n    ID: 'Indonesia',\r\n    IR: 'Iran, Islamic Republic Of',\r\n    IQ: 'Iraq',\r\n    IE: 'Ireland',\r\n    IM: 'Isle Of Man',\r\n    IL: 'Israel',\r\n    IT: 'Italy',\r\n    JM: 'Jamaica',\r\n    JP: 'Japan',\r\n    JE: 'Jersey',\r\n    JO: 'Jordan',\r\n    KZ: 'Kazakhstan',\r\n    KE: 'Kenya',\r\n    KI: 'Kiribati',\r\n    KR: 'Korea',\r\n    KW: 'Kuwait',\r\n    KG: 'Kyrgyzstan',\r\n    LA: \"Lao People's Democratic Republic\",\r\n    LV: 'Latvia',\r\n    LB: 'Lebanon',\r\n    LS: 'Lesotho',\r\n    LR: 'Liberia',\r\n    LY: 'Libyan Arab Jamahiriya',\r\n    LI: 'Liechtenstein',\r\n    LT: 'Lithuania',\r\n    LU: 'Luxembourg',\r\n    MO: 'Macao',\r\n    MK: 'Macedonia',\r\n    MG: 'Madagascar',\r\n    MW: 'Malawi',\r\n    MY: 'Malaysia',\r\n    MV: 'Maldives',\r\n    ML: 'Mali',\r\n    MT: 'Malta',\r\n    MH: 'Marshall Islands',\r\n    MQ: 'Martinique',\r\n    MR: 'Mauritania',\r\n    MU: 'Mauritius',\r\n    YT: 'Mayotte',\r\n    MX: 'Mexico',\r\n    FM: 'Micronesia, Federated States Of',\r\n    MD: 'Moldova',\r\n    MC: 'Monaco',\r\n    MN: 'Mongolia',\r\n    ME: 'Montenegro',\r\n    MS: 'Montserrat',\r\n    MA: 'Morocco',\r\n    MZ: 'Mozambique',\r\n    MM: 'Myanmar',\r\n    NA: 'Namibia',\r\n    NR: 'Nauru',\r\n    NP: 'Nepal',\r\n    NL: 'Netherlands',\r\n    AN: 'Netherlands Antilles',\r\n    NC: 'New Caledonia',\r\n    NZ: 'New Zealand',\r\n    NI: 'Nicaragua',\r\n    NE: 'Niger',\r\n    NG: 'Nigeria',\r\n    NU: 'Niue',\r\n    NF: 'Norfolk Island',\r\n    MP: 'Northern Mariana Islands',\r\n    NO: 'Norway',\r\n    OM: 'Oman',\r\n    PK: 'Pakistan',\r\n    PW: 'Palau',\r\n    PS: 'Palestinian Territory, Occupied',\r\n    PA: 'Panama',\r\n    PG: 'Papua New Guinea',\r\n    PY: 'Paraguay',\r\n    PE: 'Peru',\r\n    PH: 'Philippines',\r\n    PN: 'Pitcairn',\r\n    PL: 'Poland',\r\n    PT: 'Portugal',\r\n    PR: 'Puerto Rico',\r\n    QA: 'Qatar',\r\n    RE: 'Reunion',\r\n    RO: 'Romania',\r\n    RU: 'Russian Federation',\r\n    RW: 'Rwanda',\r\n    BL: 'Saint Barthelemy',\r\n    SH: 'Saint Helena',\r\n    KN: 'Saint Kitts And Nevis',\r\n    LC: 'Saint Lucia',\r\n    MF: 'Saint Martin',\r\n    PM: 'Saint Pierre And Miquelon',\r\n    VC: 'Saint Vincent And Grenadines',\r\n    WS: 'Samoa',\r\n    SM: 'San Marino',\r\n    ST: 'Sao Tome And Principe',\r\n    SA: 'Saudi Arabia',\r\n    SN: 'Senegal',\r\n    RS: 'Serbia',\r\n    SC: 'Seychelles',\r\n    SL: 'Sierra Leone',\r\n    SG: 'Singapore',\r\n    SK: 'Slovakia',\r\n    SI: 'Slovenia',\r\n    SB: 'Solomon Islands',\r\n    SO: 'Somalia',\r\n    ZA: 'South Africa',\r\n    GS: 'South Georgia And Sandwich Isl.',\r\n    ES: 'Spain',\r\n    LK: 'Sri Lanka',\r\n    SD: 'Sudan',\r\n    SR: 'Suriname',\r\n    SJ: 'Svalbard And Jan Mayen',\r\n    SZ: 'Swaziland',\r\n    SE: 'Sweden',\r\n    CH: 'Switzerland',\r\n    SY: 'Syrian Arab Republic',\r\n    TW: 'Taiwan',\r\n    TJ: 'Tajikistan',\r\n    TZ: 'Tanzania',\r\n    TH: 'Thailand',\r\n    TL: 'Timor-Leste',\r\n    TG: 'Togo',\r\n    TK: 'Tokelau',\r\n    TO: 'Tonga',\r\n    TT: 'Trinidad And Tobago',\r\n    TN: 'Tunisia',\r\n    TR: 'Turkey',\r\n    TM: 'Turkmenistan',\r\n    TC: 'Turks And Caicos Islands',\r\n    TV: 'Tuvalu',\r\n    UG: 'Uganda',\r\n    UA: 'Ukraine',\r\n    AE: 'United Arab Emirates',\r\n    GB: 'United Kingdom',\r\n    US: 'United States',\r\n    UM: 'United States Outlying Islands',\r\n    UY: 'Uruguay',\r\n    UZ: 'Uzbekistan',\r\n    VU: 'Vanuatu',\r\n    VE: 'Venezuela',\r\n    VN: 'Viet Nam',\r\n    VG: 'Virgin Islands, British',\r\n    VI: 'Virgin Islands, U.S.',\r\n    WF: 'Wallis And Futuna',\r\n    EH: 'Western Sahara',\r\n    YE: 'Yemen',\r\n    ZM: 'Zambia',\r\n    ZW: 'Zimbabwe',\r\n});\r\n","\r\nimport { IonAvatar, IonBadge, IonButton, IonCard, IonCardContent, IonCardHeader, IonIcon, IonImg, IonItem, IonProgressBar, IonRouterLink, IonText, IonTitle } from '@ionic/react';\r\nimport { accessibility, addCircleOutline, addOutline, businessOutline, cardOutline, lockClosed, lockClosedOutline, lockOpen, open, openOutline, peopleOutline, stopwatch, stopwatchOutline, trendingDown, trendingUp } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport Flag from \"react-world-flags\"\r\nimport { ISO_COUNTRY_CODES } from '../../utils/constants'\r\n\r\nconst GlobalProjectListElement: React.FC<any> = ({ project, auth, history, isSample = false }) => {\r\n\r\n  \r\n  const getCountryCode = (str: string) => {\r\n    if (!str) return \"\"\r\n    return Object.keys(ISO_COUNTRY_CODES).filter(function(key) {return ISO_COUNTRY_CODES[key]?.toLowerCase()?.includes(str?.toLowerCase())})[0];\r\n    \r\n  }\r\n\r\n  \r\n    const handleDefaultSrc = (e: any) => {\r\n        e.target.src = 'https://www.investopedia.com/thmb/FKP-u7NEKNODSvAkMo-9WUz0E_c=/2121x1193/smart/filters:no_upscale()/GettyImages-1169053915-76068125fc394f9691db9edaf7c76baf.jpg'\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <IonCard style={{ position: 'relative' }}>\r\n        \r\n        {/* project.status === 'UNDER_CONSIDERATION' ? '#3dc2ff' : project.status === 'OPEN' ? '#3880ff' : '#92949c' */}\r\n        <IonCardHeader>\r\n          \r\n          <IonItem>\r\n            \r\n            <IonBadge className=\"no-padding\" color=\"light\" slot=\"end\" style={{ minWidth: '45px' }}>\r\n              <Flag code={getCountryCode(project?.country || '') || \"\"} height=\"30\" />\r\n            </IonBadge>\r\n            <IonAvatar slot=\"start\">\r\n              {/* <IonIcon size=\"large\" color=\"secondary\" icon={project.status === \"OPEN\" ? lockOpen : lockClosed}></IonIcon> */}\r\n              {\r\n                project.status === \"UNDER_CONSIDERATION\" ? \r\n                <IonIcon size=\"large\" color=\"secondary\" icon={stopwatchOutline}></IonIcon>\r\n                : project.status !== \"OPEN\" ? <IonIcon size=\"large\" color=\"medium\" icon={lockClosedOutline}></IonIcon>\r\n                : <IonIcon size=\"large\" color=\"primary\" icon={cardOutline}></IonIcon>\r\n                \r\n              }\r\n            </IonAvatar>\r\n            <IonItem lines=\"none\">\r\n              <IonText>{project.status === \"UNDER_CONSIDERATION\" ? \"COMING SOON\" : project.status}</IonText>\r\n            </IonItem>\r\n          </IonItem>\r\n            \r\n          <IonItem mode=\"md\">\r\n            <IonTitle className=\"no-padding\">\r\n              <div className=\"ion-text-wrap\" style={{ textAlign: 'left' }}>\r\n                {project.projectname}\r\n              </div>\r\n            </IonTitle>\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonText style={{ padding: '7.5px 0' }}>\r\n              {project.description}\r\n            </IonText>\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonText>\r\n              Volume total\r\n            </IonText>\r\n            <IonText slot=\"end\">\r\n              {project.volumetotal} {project.currency}\r\n            </IonText>\r\n              \r\n          </IonItem>\r\n\r\n          <IonItem>\r\n            <IonText>\r\n              Yield per month\r\n            </IonText>\r\n            <IonText slot=\"end\">\r\n              {project.yieldpa}%\r\n            </IonText>\r\n              \r\n          </IonItem>\r\n          {\r\n            !isSample && \r\n            \r\n              <IonItem>\r\n                <IonText>\r\n                  Term\r\n                </IonText>\r\n                <IonText slot=\"end\">\r\n                  {\r\n                    project.term ? <Fragment>{project.term} days</Fragment> : 'N/A'\r\n                  }\r\n                  \r\n                </IonText>\r\n                  \r\n              </IonItem>\r\n          }\r\n          <IonItem>\r\n            <IonText>\r\n              Type of property\r\n            </IonText>\r\n            <IonText slot=\"end\">\r\n\r\n              {\r\n                project.typeofproperty\r\n              }\r\n              \r\n            </IonText>\r\n              \r\n          </IonItem>\r\n          <IonItem>\r\n            <IonText>\r\n              Type of investment\r\n            </IonText>\r\n            <IonText slot=\"end\">\r\n              {\r\n                project.typeofinvestment\r\n              }\r\n              \r\n            </IonText>\r\n              \r\n          </IonItem>\r\n          <IonItem>\r\n            <IonText>\r\n              Minimum investment\r\n            </IonText>\r\n            <IonText slot=\"end\">\r\n              {project.minimuminvestment} {project.currency}\r\n            </IonText>\r\n              \r\n          </IonItem>\r\n          \r\n          {\r\n            ((project.status !== \"UNDER_CONSIDERATION\") && !isSample) && <Fragment>\r\n                <IonItem style={{ position: 'relative'}}>\r\n                  <IonBadge style={{ position: 'absolute', top: '10px', left: 0, padding: 0, fontSize: '16px', fontWeight: 'normal', opacity: '1' }} color=\"none\"><IonText color=\"dark\">Invested: {project.volumeinvested} {project.currency} ({ (project.volumeinvested / project.volumetotal * 100).toFixed(3)} %)</IonText></IonBadge>\r\n                  <IonProgressBar style={{ position: 'absolute', bottom: '12px', left: 0, padding: 0 }} value={project.volumeinvested / project.volumetotal * 100}></IonProgressBar>\r\n                    \r\n                </IonItem>\r\n            </Fragment>\r\n          }\r\n          \r\n          \r\n        </IonCardHeader>\r\n        <IonCardContent>\r\n\r\n\r\n        {\r\n          project?.images && <IonImg src={project?.images[0] || \"\" } onIonError={(e) => handleDefaultSrc(e)} alt=\"property\" />\r\n        }\r\n        {\r\n          !isSample && \r\n            <IonItem>\r\n              <div className=\"ion-items-center\">\r\n                <IonButton style={{ fontWeight: 'bold', fontSize: '17px' }} onClick={auth?.user?.user_id ? () => history.push(`/projects/${project.project_id}`) : () => history.push('/logon') }>Get more</IonButton>\r\n              </div>\r\n            </IonItem>\r\n        }\r\n        \r\n        </IonCardContent>\r\n\r\n      </IonCard>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(GlobalProjectListElement));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonCardSubtitle, IonText, IonGrid, IonRow, IonCol, IonLabel, IonButtons, IonImg } from '@ionic/react';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport tsx from '../store/reducers/tsx';\r\nimport { connect } from 'react-redux';\r\nimport { registerables  } from 'chart.js';\r\nimport Chart from 'chart.js/auto';\r\n\r\nimport { ChartConfiguration, LineController, LineElement, PointElement, LinearScale, Title} from 'chart.js' \r\n\r\n\r\nimport { Fragment, useEffect } from 'react';\r\nimport { analytics, bookmarksOutline, bookOutline, businessOutline, card, extensionPuzzleOutline, home, open, people } from 'ionicons/icons';\r\nimport Loader from '../components/Loader';\r\nimport GlobalProjectListElement from '../components/project/GlobalProjectListElement';\r\n\r\n\r\n\r\nimport CountUp from 'react-countup';\r\nimport { PROJECTS_PALETTE } from '../utils/constants';\r\n\r\nconst Home: React.FC <RouteComponentProps | any> = ({ history, tsx, users, project }) => {\r\n\r\n  const setArryOfColors = (values: any[]) => {\r\n\r\n    const arry: any[] = values.slice()\r\n    \r\n    \r\n    let colors = PROJECTS_PALETTE.map((element: any, index: any) => {return { sortBy: arry[index], ...element}})\r\n\r\n    let toReturn: any[] = []\r\n\r\n    values.forEach((key: any) => {\r\n        let found = false;\r\n        colors = colors.filter(function(item: any) {\r\n            if(!found && item.sortBy == key) {\r\n                toReturn.push(item);\r\n                found = true;\r\n                return false;\r\n            } else \r\n                return true;\r\n        })\r\n    })\r\n\r\n    /* console.log(toReturn) */\r\n    return toReturn.map((element: any) => element.value)\r\n  }\r\n        \r\n  const options: any = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      }\r\n    },\r\n    scales: {\r\n      xAxes:\r\n        {\r\n          stacked: true,\r\n          display: true,\r\n        }\r\n      ,\r\n      yAxis: {\r\n        display: false,\r\n      }\r\n    }\r\n  };\r\n\r\n  const sortedDataset: any[] = [\r\n    { value: project?.underConsiderationProjects?.length || 0, label: 'COMING SOON' },\r\n    { value: project?.openProjects?.length || 0, label: 'ACTIVE' },\r\n    { value: project?.closedProjects?.length || 0, label: 'CLOSED' },\r\n  ]\r\n\r\n  const values: any[] = sortedDataset.map((element: any) => element?.value)\r\n\r\n  const labels: any[] = sortedDataset.map((element: any) => element?.label)\r\n\r\n  const data: any = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: values,\r\n        backgroundColor: setArryOfColors(values),\r\n        borderColor: setArryOfColors(values),\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n      if (!project.loading) {\r\n\r\n\r\n        \r\n      const myChart: any = new Chart('myChart', { \r\n        type: 'bar',\r\n        data: data,\r\n        options\r\n      });\r\n\r\n      Chart?.register(...registerables);\r\n\r\n      Chart?.register(LineController, LineElement, PointElement, LinearScale, Title);\r\n\r\n      return () => {\r\n        \r\n        myChart.destroy()\r\n        \r\n      }\r\n\r\n      }\r\n\r\n    }, [project.openProjects, project.underConsiderationProjects, project.closedProjects, project.projects, project.loading])\r\n\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n\r\n\r\n\r\n        <IonList>\r\n\r\n          <IonCard>\r\n\r\n            <IonCardHeader>\r\n              \r\n              <IonListHeader>\r\n                <IonTitle style={{ textAlign: 'center', fontSize: '25px', lineHeight: '1.8', fontWeight: 'bold' }} color=\"primary\">\r\n\r\n                  Welcome to <span style={{ color: '#3880ff', fontWeight: 'bold' }}>Ni</span><span style={{ color: '#3dc2ff', fontWeight: 'bold' }}>Vest</span>\r\n\r\n                </IonTitle>\r\n                \r\n              </IonListHeader>\r\n\r\n              <IonCardTitle style={{ textAlign: 'center', fontSize: '25px', lineHeight: '1.8', fontWeight: 'bold' }}>\r\n                Real Estate Crowdfunding Market Simulator\r\n              </IonCardTitle>\r\n            </IonCardHeader>\r\n\r\n            <IonCardContent>\r\n              <IonItem>\r\n                <div className=\"ion-items-center\">\r\n                  <IonIcon style={{ fontSize: '64px', padding: '7.5px' }} icon={analytics}></IonIcon>\r\n                </div>\r\n              </IonItem>\r\n              <IonItem>\r\n                \r\n                <IonText>\r\n                  Start learning how to invest with virtual money to sharpen your knowledge of how the market works and how to use an online Blockchain investment platform.\r\n                </IonText>\r\n              </IonItem>\r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n\r\n\r\n        </IonList>\r\n        <IonList>\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n              Getting started\r\n\r\n            </IonTitle>\r\n          </IonListHeader>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n              If you’re not yet an Mobile Investor:\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                Follow the instructions to register and activate your Digital Secure Key.\r\n              </IonItem>\r\n              \r\n              <IonToolbar mode=\"md\">\r\n                <IonButton onClick={() => history.push('/register')} type=\"button\" size=\"small\" color=\"secondary\" slot=\"end\">Register {\">\"}</IonButton>\r\n              </IonToolbar>\r\n              \r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n              If you’re already registered for online investing:\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                Follow the instructions of the Mobile app by entering your online log on details.\r\n\r\n              </IonItem>\r\n              \r\n              <IonToolbar mode=\"md\">\r\n                <IonButton onClick={() => history.push('/logon')} type=\"button\" size=\"small\" color=\"primary\" slot=\"end\">Log on {\">\"}</IonButton>\r\n              </IonToolbar>\r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n        </IonList>\r\n        <IonList>\r\n          <IonCard>\r\n\r\n            <IonCardHeader>\r\n              <IonCardTitle className=\"ion-text-center\">\r\n                NiVest\r\n              </IonCardTitle>\r\n              <IonCardSubtitle className=\"ion-text-center\" style={{ fontSize: '16px' }} mode={\"md\"}>\r\n              Cross-platform app. Powered by the Web.\r\n              </IonCardSubtitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                <IonText>\r\n                  NiVest simulates the real crowdfunding market with Blockchain technology. By creating an account, you join the Internet community.\r\n                </IonText>\r\n              </IonItem>\r\n            </IonCardContent>\r\n\r\n          </IonCard>\r\n\r\n        </IonList>\r\n\r\n\r\n        <IonList>\r\n            <IonListHeader>\r\n              <IonTitle style={{ textAlign: 'center' }}>\r\n                Statistics\r\n\r\n              </IonTitle>\r\n            </IonListHeader>\r\n          <IonCard>\r\n\r\n            <IonCardContent>\r\n              \r\n              <IonList>\r\n              <IonGrid>\r\n                <IonRow>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonIcon size=\"large\" icon={people}></IonIcon>\r\n                    <IonText color='dark'>Investors</IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonText style={{ fontSize: '22px' }}><CountUp end={users?.users?.length || 0} duration={1} /></IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonIcon size=\"large\" icon={card}></IonIcon>\r\n                    <IonText color='dark'>Transactions</IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonIcon size=\"large\" icon={businessOutline}></IonIcon>\r\n                    <IonText color='dark'>Projects</IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonText style={{ fontSize: '22px' }}><CountUp end={tsx?.tsxs?.length || 0} duration={1} /></IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"ion-items-center\">\r\n                    <IonText style={{ fontSize: '22px' }}><CountUp end={project?.projects?.length || 0} duration={1} /></IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n              </IonGrid>\r\n              </IonList>\r\n            </IonCardContent>\r\n          \r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n              <IonCardTitle className=\"ion-items-center\" style={{ textAlign: 'center'}}>\r\n                Investment opportunities\r\n              </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonList>\r\n                \r\n                \r\n                  {/* <Bar \r\n                    data={data}\r\n                    options={options}\r\n                    redraw={false} \r\n                  /> */}\r\n                  {\r\n                    project?.loading ? <Loader /> : <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\r\n                  }\r\n                  \r\n                  \r\n                \r\n                  <IonGrid>\r\n                    <IonRow>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        <IonText style={{ fontSize: '22px' }}>{project?.underConsiderationProjects?.length === undefined ? 'N/A' : project?.underConsiderationProjects?.length}</IonText>\r\n                      </IonCol>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        <IonText style={{ fontSize: '22px' }}>{project?.openProjects?.length === undefined ? 'N/A' : project?.openProjects?.length}</IonText>\r\n                      </IonCol>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        <IonText style={{ fontSize: '22px' }}>{project?.closedProjects?.length === undefined ? 'N/A' : project?.closedProjects?.length}</IonText>\r\n                      </IonCol>\r\n                    </IonRow>\r\n                  </IonGrid>\r\n\r\n              </IonList>\r\n\r\n            </IonCardContent>\r\n\r\n          </IonCard>\r\n          \r\n          {\r\n            project?.loading ? <Loader /> : project?.projects?.filter((element: any) => element?.images?.length ).length ? <Fragment>\r\n\r\n              <IonCard>\r\n                  <IonCardHeader>\r\n                    <IonCardTitle className=\"ion-items-center\">\r\n                      Marketplace\r\n                    </IonCardTitle>\r\n                  </IonCardHeader>\r\n                  <IonCardContent style={{ rowGap: '15px', }} className=\"ion-items-center\">\r\n                      {\r\n                        project?.projects?.filter((element: any) => element?.images?.length )?.slice(0, 2).map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />)\r\n                      }\r\n                      \r\n                  \r\n                  <IonCard>\r\n                    <IonCardContent>\r\n                      <IonItem>\r\n                      <IonIcon size=\"large\" icon={bookOutline} slot=\"start\" color=\"primary\"></IonIcon>\r\n                    \r\n                      <IonText className=\"ion-items-center no-padding\" style={{ fontSize: '16px', fontWeight: 'bold' }} color=\"primary\" onClick={() => history.push('/projects')}>Show more opportunities</IonText>\r\n                      </IonItem>\r\n                    </IonCardContent>\r\n                  </IonCard>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            </Fragment> : false\r\n          }\r\n        </IonList>\r\n        \r\n        {\r\n          users.loading ? <Loader /> : users?.users?.length ? <Fragment>\r\n\r\n            <IonList>\r\n            <IonCard>\r\n              \r\n              <IonCardHeader>\r\n                <IonCardTitle className=\"ion-items-center\">\r\n                  Join now\r\n                </IonCardTitle>\r\n              </IonCardHeader>\r\n              <IonCardContent>\r\n                \r\n                <IonText style={{ textAlign: 'center', fontSize: '20px' }} className=\"ion-items-center\">Join {users?.users?.length} other investors and make your money work for you.</IonText>\r\n                <IonItem>\r\n                  <div className=\"ion-items-center\" style={{ padding: '15px 0' }} >\r\n                    <IonButton color=\"primary\" style={{ fontWeight: 'bold', fontSize: '20px' }} onClick={() => history.push('/register')}>\r\n                      Sign up\r\n                    </IonButton>\r\n                  </div>\r\n                </IonItem>\r\n              </IonCardContent>\r\n            </IonCard>\r\n\r\n\r\n            </IonList>\r\n          </Fragment> : false\r\n        }\r\n\r\n        <IonList>\r\n\r\n          <IonListHeader>\r\n          <IonTitle style={{ textAlign: 'center' }}>\r\n            Why use the app?\r\n          </IonTitle>\r\n          </IonListHeader>\r\n          {/* <IonCard>\r\n            <IonCardHeader>\r\n              Transaction notifications\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              Get notified when money goes in or out of your account.\r\n\r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n              Chat with us\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              Chat with us at a time that’s convenient for you with 24/7 support on mobile chat. \r\n\r\n\r\n            </IonCardContent>\r\n          </IonCard> */}\r\n          <IonCard>\r\n            <IonCardHeader>\r\n              This app virtualize the market\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              You use this application for free of charge without providing any financial information. The funds are strictly simulated.\r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n              You have no other choice\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              The NiVest platform exists only as a mobile app.\r\n\r\n            </IonCardContent>\r\n          </IonCard>\r\n        </IonList>\r\n        \r\n      {/* <img src={snowman} width='100%' style={{ position: 'fixed', bottom: 0, zIndex: 1, opacity: '0.6' }} /> */}\r\n      </IonContent>\r\n      \r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  tsx: state.tsx,\r\n  users: state.users,\r\n  project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(Home));\r\n","export const Login_Success = 'Log_Success';\r\nexport const Login_Fail = 'Log_Fail';\r\nexport const Register_Success = 'Register_Success';\r\nexport const Register_Fail = 'Register_Fail';\r\nexport const Load_User = 'Load_User';\r\nexport const Logout_User = 'Logout_User';\r\nexport const User_Update = 'User_Update';\r\nexport const Load_Users_Success = 'Load_Users_Success';\r\nexport const Load_Users_Fail = 'Load_Users_Fail';\r\nexport const Pre_Login_Success = 'Pre_Login_Success';\r\nexport const Pre_Login_Fail = 'Pre_Login_Fail';\r\nexport const Pre_Register_Success = 'Pre_Register_Success';\r\nexport const Pre_Register_Fail = 'Pre_Register_Fail';\r\nexport const Create_Wallet_Success = 'Create_Wallet_Success';\r\nexport const Create_Wallet_Fail = 'Create_Wallet_Fail';\r\nexport const Loading_Auth = 'Loading_Auth';\r\nexport const User_Update_Fail = 'User_Update_Fail';\r\n\r\nexport type UserType = {\r\n    name?: string | null,\r\n    email: string | null,\r\n    password: string | null,\r\n    accountType: string | null,\r\n    avatar?: string | null,\r\n    role?: string | null,\r\n    two_factor?:boolean | null\r\n}\r\nexport type LoginUserType = {\r\n    email: string | null,\r\n    password: string | null,\r\n    emailSave?: boolean | null\r\n}\r\nexport type RegisterUserType = {\r\n    name: string | null,\r\n    email: string | null,\r\n    password: string | null,\r\n    passwordConfirmation: string | null\r\n}\r\n\r\nexport type AuthType = {\r\n    user: UserType,\r\n    loading: true | false,\r\n    token: string | null,\r\n    isAuthenticated: true | false,\r\n    errors: any\r\n}\r\n\r\nexport type LoginUser = {\r\n    type: typeof Login_Success,\r\n    payload: LoginUserType\r\n}\r\nexport type RegisterUser = {\r\n    type: typeof Register_Success,\r\n    payload: RegisterUserType\r\n}\r\nexport type LoadUser = {\r\n    type: typeof Load_User,\r\n    payload: UserType\r\n}\r\nexport type LoginFail = {\r\n    type: typeof Login_Fail\r\n}\r\nexport type RegisterFail = {\r\n    type: typeof Login_Fail\r\n}\r\nexport type LogoutUser = {\r\n    type: typeof Logout_User\r\n}\r\n\r\n\r\n\r\n// error handler function\r\nexport type ErrorHandler = any\r\n\r\n\r\nexport type AuthDispatchTypes = LoginUser | RegisterUser | ErrorHandler | LoadUser | LoginFail | RegisterFail | LogoutUser;","export const Set_Alert = 'Set_Alert';\r\nexport const Remove_Alert = 'Remove_Alert';\r\n  \r\n  export type AlertType = {\r\n    id: string,\r\n    message: string,\r\n    type: string\r\n  }\r\n\r\n  export type SetAlert = {\r\n    type: typeof Set_Alert,\r\n    payload: AlertType\r\n  }\r\n\r\n  export type RemoveAlert = {\r\n    type: typeof Remove_Alert\r\n  }\r\n  \r\n  export type AlertDispatchTypes = SetAlert | RemoveAlert","import { Dispatch } from 'redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AlertDispatchTypes, Remove_Alert, Set_Alert } from \"./types\";\r\n\r\n\r\n\r\nexport const setAlert = (message: string, alertType: string) => (dispatch: Dispatch<AlertDispatchTypes>) => {\r\n    \r\n    \r\n    const id: string = uuidv4();\r\n\r\n    dispatch({ type: Set_Alert, payload: { id, message, type: alertType } });\r\n    setTimeout(()=>dispatch({ type: Remove_Alert, payload: id }), 5000);\r\n    \r\n}","import axios from 'axios'\r\nconst setAuthToken = (token: string) => {\r\n    if ( token ) {\r\n        return axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization']\r\n    }\r\n}\r\nexport default setAuthToken;","import { AuthDispatchTypes, LoadUser, Load_User, LoginUserType, Login_Fail, Load_Users_Success, Load_Users_Fail, Login_Success, Logout_User, Pre_Login_Success, Register_Fail, Register_Success, User_Update, Pre_Login_Fail, RegisterUserType, Pre_Register_Success, Pre_Register_Fail, Loading_Auth, User_Update_Fail, Create_Wallet_Success, Create_Wallet_Fail } from \"./types\";\r\nimport { Dispatch } from 'redux';\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"../alert/\";\r\nimport setAuthToken from \"../../../utils/setAuthToken\";\r\nimport { URL } from \"../../../utils/constants\";\r\n\r\nexport const loadUser = () => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token)\r\n    }\r\n    \r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        const res: any = await axios.get(URL + '/api/auth');\r\n\r\n        dispatch({ type: Load_User, payload: { user: res.data} });\r\n\r\n    } catch(err: any) {\r\n        dispatch({ type: Login_Fail });\r\n        \r\n    }\r\n}\r\nexport const loadUsers = () => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        const res: any = await axios.get(URL + '/api/users');\r\n        console.log(res)\r\n        dispatch({ type: Load_Users_Success, payload: { users: res.data} });\r\n\r\n    } catch(err: any) {\r\n        dispatch({ type: Load_Users_Fail });\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const login = (formData: LoginUserType, history: any, present: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        const res: any = await axios.post(URL + '/api/auth', formData);\r\n        \r\n        dispatch({ type: Login_Success, payload: res.data })\r\n        \r\n        dispatch(loadUser())\r\n\r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        if (formData?.emailSave) {\r\n            localStorage.setItem('email', formData?.email || '')\r\n        } else if (!formData?.emailSave && localStorage?.email) {\r\n            localStorage.removeItem('email');\r\n        }\r\n\r\n        history.push('/')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Login_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\nexport const preLogin = (formData: LoginUserType, present: any, setStep: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n\r\n        const res: any = await axios.post(URL + '/api/auth/pre-login', formData);\r\n        \r\n        await setStep(2)\r\n        dispatch({ type: Pre_Login_Success, payload: res.data })\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Pre_Login_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const setForgotCredentials = (formData: any, setStep: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        \r\n        const res: any = await axios.post(URL + '/api/auth/recovery', formData);\r\n        \r\n        setStep(1)\r\n        \r\n        \r\n        \r\n    } catch (err: any) {\r\n\r\n        console.log(err.message)\r\n\r\n    }\r\n}\r\n\r\nexport const preRecovery = (formData: any, setStep: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        const res: any = await axios.post(URL + '/api/auth/pre_recovery', formData);\r\n        \r\n        await setStep(1)\r\n        \r\n        \r\n    } catch (err: any) {\r\n\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const verifySecret = (formData: any, setStep: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        const res: any = await axios.post(URL + '/api/auth/verify_secret', formData);\r\n        \r\n        await setStep(1)\r\n        \r\n    } catch (err: any) {\r\n\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const updateCredentials = (formData: any, history: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        const res: any = await axios.put(URL + '/api/auth/recovery', formData);\r\n        \r\n        await history.push('/')\r\n\r\n        dispatch({ type: User_Update, payload: res?.data })\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const updateEmail = (formData: any, history: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        const res: any = await axios.put(URL + '/api/auth/email_recovery', formData);\r\n        \r\n        await history.push('/')\r\n\r\n        dispatch({ type: User_Update, payload: res?.data })\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const preRegister = (formData: RegisterUserType, present: any, setStep: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        const res: any = await axios.post(URL + '/api/auth/pre-register', formData);\r\n        \r\n        await setStep(4)\r\n        dispatch({ type: Pre_Register_Success, payload: res.data })\r\n        \r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Pre_Register_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const register = (formData: LoginUserType, history: any, present: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        const res: any = await axios.post(URL + '/api/users', formData);\r\n        \r\n        dispatch({ type: Register_Success, payload: res.data })\r\n\r\n        dispatch(loadUser())\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        history.push('/')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Register_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = (history: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        dispatch({ type: Logout_User });\r\n        history.push('/')\r\n    } catch (err: any) {\r\n        dispatch(setAlert('Could not log out.', 'danger'))\r\n    }\r\n}\r\n\r\n\r\nexport const confirm = (formData: any, history: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        const res: any = await axios.post(URL + '/api/auth/approve', formData);\r\n        \r\n        dispatch({ type: User_Update, payload: res?.data })\r\n        history.push('/')\r\n        return res.data.success\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const codeUpdate = () => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: Loading_Auth })\r\n        const res: any = await axios.put(URL + '/api/auth/approve');\r\n        \r\n        dispatch({ type: User_Update, payload: res?.data })\r\n        \r\n        return res.data.success\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        console.log(err.message)\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const update = (formData: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({type: Loading_Auth })\r\n        const res: any = await axios.put(URL + '/api/auth', formData);\r\n        \r\n        dispatch({type: User_Update, payload: res?.data})\r\n        \r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\nexport const createWallet = (formData: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({type: Loading_Auth })\r\n        const res: any = await axios.put(URL + '/api/auth/wallets', formData);\r\n        \r\n        dispatch({type: User_Update, payload: res.data})\r\n        \r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n\r\nexport const updateIncome = (formData: any) => async(dispatch: Dispatch<AuthDispatchTypes>) => {\r\n    try {\r\n        dispatch({type: Loading_Auth })\r\n        const res: any = await axios.put(URL + '/api/auth/income', formData);\r\n        \r\n        dispatch({type: User_Update, payload: res.data})\r\n        \r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail })\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n    }\r\n}\r\n","\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonItem, IonFooter, IonList } from '@ionic/react';\r\nimport { appsOutline, card, home, logoAppleAppstore, logOut, person, statsChart, storefront, storefrontOutline, storefrontSharp, wallet } from 'ionicons/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { logout } from '../../store/actions/auth';\r\n\r\n\r\nconst FooterLoggedIn: React.FC<RouteComponentProps | any> = ({ auth, history, logout }) => {\r\n  return (\r\n      <IonFooter>\r\n        \r\n        <IonList className=\"ion-items-center\" style={{ flexDirection: 'row' }}>\r\n          \r\n          <IonItem className=\"inner-items-active\" onClick={() => history.push(\"/\")}><IonIcon size=\"large\" color=\"secondary\" icon={home}></IonIcon></IonItem>\r\n          <IonItem className=\"inner-items-active\" onClick={() => history.push(\"/transactions\")}><IonIcon size=\"large\" color=\"secondary\" icon={statsChart}></IonIcon></IonItem>\r\n          <IonItem className=\"inner-items-active\" onClick={() => history.push(\"/store\")}><IonIcon size=\"large\" color=\"secondary\" icon={appsOutline}></IonIcon></IonItem>\r\n          {\r\n            (!auth?.user?.wallets?.length && auth?.user?.approved) ? \r\n              <IonItem className=\"inner-items-active\" onClick={() => history.push(\"/settings\")}><IonIcon size=\"large\" color=\"warning\" icon={person}></IonIcon></IonItem> :\r\n              <IonItem className=\"inner-items-active\" onClick={() => history.push(\"/settings\")}><IonIcon size=\"large\" color=\"secondary\" icon={person}></IonIcon></IonItem>\r\n              \r\n          }\r\n          \r\n          <IonItem className=\"inner-items-active\" onClick={() => logout(history)}><IonIcon size=\"large\" color=\"secondary\" icon={logOut}></IonIcon></IonItem>\r\n          \r\n        </IonList>\r\n      </IonFooter>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(withRouter(FooterLoggedIn));\r\n","\r\nimport { IonAvatar, IonBadge, IonButton, IonButtons, IonIcon, IonItem, IonItemDivider, IonLabel, IonList, IonText } from '@ionic/react';\r\nimport { addCircleOutline, addOutline, businessOutline, people, trendingDown, trendingUp } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst MyTsxListElement: React.FC<any> = ({ tsx, auth, extendTsx, setExtendTsx, index, history, users }) => {\r\n\r\n  const [isUp, setIsUp] = useState(false);\r\n\r\n  const [detailsOn, setDetailsOn] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    if (tsx?.from_id === auth?.user?.user_id) {\r\n      setIsUp(false)\r\n    } else {\r\n      setIsUp(true)\r\n    }\r\n\r\n    return () => {\r\n      setIsUp(false)\r\n    }\r\n  }, [auth.user])\r\n\r\n\r\n  const [ from, setFrom ] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n\r\n    const value: any[] = users?.users?.filter((element: any) => element.user_id === tsx?.from_id) || []\r\n    \r\n    setFrom(value[0])\r\n\r\n  }, [users?.users, users?.loading])\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        tsx.to_project_id !== null ? <Fragment>\r\n          <IonItem style={{ position: 'relative', padding: '10px 0' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            \r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n              <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"small\" style={{ position: 'absolute', top: '-9px', right: 0, zIndex: 10 }}></IonIcon>\r\n              <IonIcon size=\"large\" color=\"secondary\" icon={isUp ? trendingUp : trendingDown}></IonIcon>\r\n            </IonAvatar>\r\n              <div style={{ textAlign: 'left' }} >\r\n              <IonLabel style={{ fontSize: '15px', marginBottom: '2px' }}>\r\n                {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n              </IonLabel>\r\n              <IonText style={{ fontWeight: 'normal', fontSize: '16px', textAlign: 'left' }}>\r\n                {tsx.projectname}\r\n              </IonText>\r\n              </div>\r\n              \r\n            \r\n            <IonBadge slot=\"end\" color={isUp ? \"success\" : \"primary\"} style={{ width: '90px', textAlign: 'center', lineHeight: '1.6' }} className=\"ion-text-wrap\" onClick={() => setDetailsOn(!detailsOn)}>{isUp ? \"+\" : \"-\"}{tsx.amount} {tsx.currency}</IonBadge>\r\n            \r\n          </IonItem>\r\n          \r\n        </Fragment> : (tsx.to_user_id === auth.user.user_id && tsx.from_id === auth.user.user_id) ? <Fragment>\r\n\r\n        <IonItem style={{ position: 'relative', padding: '10px 0' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            \r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n              <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"small\" style={{ position: 'absolute', top: '-9px', right: 0, zIndex: 10 }}></IonIcon>\r\n              <IonIcon size=\"large\" color=\"secondary\" icon={!isUp ? trendingUp : trendingDown}></IonIcon>\r\n            </IonAvatar>\r\n            <div style={{ textAlign: 'left' }}>\r\n              <IonLabel style={{ fontSize: '15px', marginBottom: '2px' }}>\r\n                {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n              </IonLabel>\r\n              <IonText style={{ fontWeight: 'normal', fontSize: '16px', textAlign: 'left'}}>\r\n                {isUp ? from?.user_id === 1 ? from?.first_name : from?.name || \"N/A\" : tsx.name }\r\n              </IonText>\r\n              </div>\r\n            <IonBadge slot=\"end\" color={!isUp ? \"success\" : \"primary\"} style={{ width: '90px', textAlign: 'center', lineHeight: '1.6' }} className=\"ion-text-wrap\" onClick={() => setDetailsOn(!detailsOn)}>{!isUp ? \"+\" : \"-\"}{tsx.amount} {tsx.currency}</IonBadge>\r\n            \r\n          </IonItem>\r\n        <IonItem style={{ position: 'relative', padding: '10px 0' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            \r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n              <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"small\" style={{ position: 'absolute', top: '-9px', right: 0, zIndex: 10 }}></IonIcon>\r\n              <IonIcon size=\"large\" color=\"secondary\" icon={isUp ? trendingUp : trendingDown}></IonIcon>\r\n            </IonAvatar>\r\n            <div style={{ textAlign: 'left' }}>\r\n              <IonLabel style={{ fontSize: '15px', marginBottom: '2px' }}>\r\n                {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n              </IonLabel>\r\n              <IonText style={{ fontWeight: 'normal', fontSize: '16px', textAlign: 'left'}}>\r\n                {isUp ? from?.user_id === 1 ? from?.first_name : from?.name || \"N/A\" : tsx.name }\r\n              </IonText>\r\n              </div>\r\n            <IonBadge slot=\"end\" color={isUp ? \"success\" : \"primary\"} style={{ width: '90px', textAlign: 'center', lineHeight: '1.6' }} className=\"ion-text-wrap\" onClick={() => setDetailsOn(!detailsOn)}>{isUp ? \"+\" : \"-\"}{tsx.amount} {tsx.currency}</IonBadge>\r\n            \r\n          </IonItem>\r\n          \r\n        </Fragment> : <Fragment>\r\n\r\n          \r\n        <IonItem style={{ position: 'relative', padding: '10px 0' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            \r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n              <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"small\" style={{ position: 'absolute', top: '-9px', right: 0, zIndex: 10 }}></IonIcon>\r\n              <IonIcon size=\"large\" color=\"secondary\" icon={isUp ? trendingUp : trendingDown}></IonIcon>\r\n            </IonAvatar>\r\n            <div style={{ textAlign: 'left' }}>\r\n              <IonLabel style={{ fontSize: '15px', marginBottom: '2px' }}>\r\n                {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n              </IonLabel>\r\n              <IonText style={{ fontWeight: 'normal', fontSize: '16px', textAlign: 'left'}}>\r\n                {isUp ? from?.user_id === 1 ? from?.first_name : from?.name || \"N/A\" : tsx.name }\r\n              </IonText>\r\n              </div>\r\n            <IonBadge slot=\"end\" color={isUp ? \"success\" : \"primary\"} style={{ width: '90px', textAlign: 'center', lineHeight: '1.6' }} className=\"ion-text-wrap\" onClick={() => setDetailsOn(!detailsOn)}>{isUp ? \"+\" : \"-\"}{tsx.amount} {tsx.currency}</IonBadge>\r\n            \r\n          </IonItem>\r\n\r\n        </Fragment>\r\n      }\r\n\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth,\r\n  users: state.users\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(MyTsxListElement));\r\n","import moment from \"moment\";\r\n\r\nexport default (dates: any, token: any) => {\r\n  return dates.reduce(function(val: any, obj: any) {\r\n    let comp: any = moment(obj.created_on).format(token) || \"\";\r\n    \r\n    (val[comp] = val[comp] || []).push(obj);\r\n    return val;\r\n  }, {});\r\n}\r\n","\r\nimport { IonAvatar, IonCard, IonCardContent, IonIcon, IonItem, IonText } from '@ionic/react';\r\nimport { alert, star } from 'ionicons/icons';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst Approval: React.FC<any> = ({ auth, history }) => {\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <IonCard style={{ boxShadow: 'none' }} className=\"no-borders\">\r\n        <IonCardContent style={{ paddingLeft: '0', paddingRight: '0', paddingBottom: '0' }}>\r\n        <IonItem lines=\"none\" className=\"ion-items-center inner-text-active\" style={{ border: '2px solid #3880ff', fontWeight: 'bold' }} onClick={() => history.push('/account_approvement')}>\r\n            <IonAvatar slot=\"start\" className=\"no-margin vertical-center\" style={{ alignItems: 'center' }}>\r\n              <IonIcon color=\"primary\" size=\"large\" icon={star}></IonIcon>\r\n            </IonAvatar>\r\n            <IonText color=\"primary\" className=\"ion-items-center\">Upgrade the account to Approved</IonText>\r\n        </IonItem>\r\n        </IonCardContent>\r\n      </IonCard>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { })(withRouter(Approval));\r\n","\r\nimport { IonIcon, IonItem, IonSpinner, IonText, IonTitle } from '@ionic/react';\r\nimport { informationCircleOutline } from 'ionicons/icons';\r\nimport { Fragment } from 'react';\r\n\r\nconst NotFound: React.FC<any> = ({ message }) => {\r\n\r\n\r\n  return (\r\n        <Fragment>\r\n            <IonItem>\r\n\r\n                <IonIcon size=\"large\" slot=\"start\" color=\"secondary\" icon={informationCircleOutline}></IonIcon>\r\n                \r\n                <IonText>\r\n                    {message}\r\n                </IonText>\r\n\r\n            </IonItem>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default NotFound;\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonText, IonGrid, IonRow, IonCol, IonBadge, IonRouterLink, IonAvatar, IonSlides, IonSlide, IonLabel, IonButtons, IonImg, IonCardSubtitle } from '@ionic/react';\r\nimport { add, addCircle, addCircleOutline, alert, businessOutline, card, cardOutline, home, informationCircleOutline, person, pinOutline, returnDownBack, returnDownForward, returnUpForward } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport Flag from 'react-world-flags';\r\nimport Balance from '../components/Balance';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport MyTsxListElement from '../components/tsx/MyTsxListElement';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { logout } from '../store/actions/auth';\r\nimport { ISO_COUNTRY_CODES } from '../utils/constants';\r\nimport getMonthlyArry from '../utils/getMonthlyArry';\r\nimport Approval from '../components/Approval';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst Home: React.FC<RouteComponentProps | any> = ({ history, logout, account, project, auth, tsx }) => {\r\n\r\n  const slides: any = useRef(null)\r\n\r\n  const getCountryCode = (str: string) => {\r\n\r\n    return Object.keys(ISO_COUNTRY_CODES).filter(function(key) {return ISO_COUNTRY_CODES[key]?.toLowerCase()?.includes(str?.toLowerCase())})[0];\r\n    \r\n  }\r\n  const [extendTsx, setExtendTsx] = useState(0)\r\n\r\n  const [selectWalletView, setSelectWalletView] = useState(0)\r\n  \r\n  const handleWalletChange = async (id: number) => {\r\n\r\n    if (slides.current) {\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slideTo(id)\r\n\r\n    }\r\n\r\n  }  \r\n  \r\n  const prevSlide = async () => {\r\n\r\n    if (slides.current) {\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slidePrev()\r\n\r\n    }\r\n\r\n  }\r\n  const nextSlide = async () => {\r\n\r\n    if (slides.current) {\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slideNext()\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleWalletSwipe = async () => {\r\n\r\n    const value = await slides.current.getActiveIndex()\r\n    setSelectWalletView(value)\r\n  }\r\n\r\n  \r\n    const handleDefaultSrc = (e: any) => {\r\n        e.target.src = 'https://www.investopedia.com/thmb/FKP-u7NEKNODSvAkMo-9WUz0E_c=/2121x1193/smart/filters:no_upscale()/GettyImages-1169053915-76068125fc394f9691db9edaf7c76baf.jpg'\r\n    }\r\n\r\n  const walletOptions = {\r\n    initialSlide: 0,\r\n    speed: 400,\r\n    centeredSlides: true,\r\n  }\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n\r\n      \r\n      <IonList>\r\n        <IonCard style={{ boxShadow: 'none' }} className=\"no-borders\">\r\n        <IonCardHeader color=\"primary\" className=\"vertical-center\" style={{ borderRadius: '7.5px', minHeight: '120px', lineHeight: '2' }}>\r\n          \r\n          <IonCardTitle style={{ fontSize: '22px' }}>\r\n            Welcome { (auth?.user?.first_name && auth?.user?.last_name) ? (auth?.user?.first_name + ' ' + auth?.user?.last_name) : auth?.user?.name || \"N/A\"}\r\n            \r\n          </IonCardTitle>\r\n          <IonCardSubtitle style={{ fontSize: '16px' }} mode={\"md\"}>\r\n            Here is a quick look at your accounts.\r\n          </IonCardSubtitle>\r\n        </IonCardHeader>\r\n\r\n        </IonCard>\r\n        \r\n        {\r\n          auth?.user?.approved === false && <Fragment>\r\n            <Approval />\r\n          </Fragment>\r\n        }\r\n        <section style={{ position: 'relative' }}>\r\n\r\n          {\r\n            auth?.user?.approved ? account?.wallets?.length ? \r\n\r\n              <IonSlides data-interception=\"off\" pager={false} options={walletOptions} ref={slides} onIonSlideDidChange={() => handleWalletSwipe()}>\r\n                \r\n                \r\n                {account?.wallets?.map((element: any, index: number) => <Fragment key={index}>\r\n                    \r\n                    <IonSlide>\r\n\r\n\r\n                      <IonCard style={{ width: '100%'}}>\r\n                        <IonCardHeader>\r\n                          <IonGrid style={{ padding: '0 10px'}}>\r\n                            <IonItem style={{ paddingTop: '10px', paddingBottom: '10px' }}>\r\n                                \r\n                              <IonCol>\r\n                                <IonText className=\"ion-items-center\" style={{ fontSize: '18px' }}>\r\n                                  Pay account\r\n                                </IonText>\r\n                              </IonCol>\r\n                              <IonCol>\r\n                                \r\n                                    <IonText style={{ fontSize: '24px', textAlign: 'center' }} className=\"ion-items-center\">\r\n                                        { element ? element.balance : 'N/A' } { element ? element.currency : 'N/A' }\r\n                                    </IonText>\r\n                                \r\n                              </IonCol>\r\n                                \r\n                              \r\n                            </IonItem>\r\n                        </IonGrid>\r\n                        </IonCardHeader>\r\n                        <IonCardContent>\r\n                          <IonGrid>\r\n                            <IonRow>    \r\n                              <IonCol>\r\n                                <IonItem >\r\n                                  <IonText className=\"ion-items-center\" color='dark' style={{ fontWeight: 'bold' }}>\r\n                                      In\r\n                                  </IonText>\r\n                                </IonItem>\r\n                              </IonCol>\r\n                              <IonCol>\r\n                                <IonItem >\r\n                                \r\n                                      <IonText className=\"ion-items-center\" color='dark' style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                                          { element ? element.in : 'N/A' } { element ? element.currency : 'N/A' }\r\n                                      </IonText>\r\n\r\n                                </IonItem>\r\n                              </IonCol>\r\n                            </IonRow>\r\n\r\n                            \r\n                            <IonRow>\r\n                              <IonCol>\r\n                                <IonItem >\r\n                                  <IonText className=\"ion-items-center\" color='dark' style={{  fontWeight: 'bold' }}>\r\n                                      Out\r\n                                  </IonText>\r\n                                </IonItem>\r\n                              </IonCol>\r\n                              <IonCol>\r\n                                <IonItem >\r\n                                \r\n                                  <IonText className=\"ion-items-center\" color='dark' style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                                      { element ? element.out > 0 ? '-' + element.out : element.out : 'N/A' } { element ? element.currency : 'N/A' }\r\n                                  </IonText>\r\n\r\n                                </IonItem>\r\n                              </IonCol>\r\n                            </IonRow>\r\n\r\n                          </IonGrid>\r\n                        </IonCardContent>\r\n                      </IonCard>\r\n\r\n                    </IonSlide>\r\n\r\n                    \r\n                  </Fragment>)} \r\n                  \r\n                  {\r\n                    account?.wallets?.length < 4 && \r\n\r\n\r\n                      <IonSlide>\r\n\r\n\r\n                        <IonCard style={{ width: '100%'}}>\r\n                          <IonCardHeader>\r\n                          <IonItem className=\"inner-text-active\" style={{ padding: '10px 0'}} onClick={() => history.push({\r\n                            \r\n                              pathname: '/settings',\r\n                              state: { new_wallet: true }\r\n                          \r\n                          })}>\r\n                              \r\n                            <IonCol>\r\n                              <IonText className=\"ion-items-center\" style={{ fontSize: '18px' }}>\r\n                                Create a new wallet\r\n                              </IonText>\r\n                              \r\n                                  <IonText style={{ fontSize: '24px' }} className=\"ion-items-center\">\r\n                                      <IonIcon icon={addCircleOutline}></IonIcon>\r\n                                  </IonText>\r\n                              \r\n                            </IonCol>\r\n                              \r\n                            \r\n                          </IonItem>\r\n                          </IonCardHeader>\r\n                          \r\n                        </IonCard>\r\n\r\n                      </IonSlide>\r\n\r\n                  }\r\n                  \r\n\r\n              </IonSlides> : \r\n\r\n\r\n                  <IonCard>\r\n                    <IonCardHeader>\r\n                    <IonItem className=\"inner-text-active\" style={{ padding: '10px 0'}} onClick={() => history.push({\r\n                        \r\n                        pathname: '/settings',\r\n                        state: { new_wallet: true }\r\n                    \r\n                    })}>\r\n                        \r\n                      <IonCol>\r\n                        <IonText className=\"ion-items-center\" style={{ fontSize: '18px' }}>\r\n                          Create a new wallet\r\n                        </IonText>\r\n                        \r\n                            <IonText style={{ fontSize: '24px' }} className=\"ion-items-center\">\r\n                                <IonIcon icon={addCircleOutline}></IonIcon>\r\n                            </IonText>\r\n                        \r\n                      </IonCol>\r\n                        \r\n                      \r\n                    </IonItem>\r\n                    </IonCardHeader>\r\n                    \r\n                  </IonCard>\r\n\r\n              : false\r\n          }\r\n\r\n          {\r\n            selectWalletView > 0 && auth?.user?.approved && <IonLabel className=\"inner-items-active\" onClick={() => prevSlide()} style={{ position: 'absolute', bottom: 0, left: 0, zIndex: 10 }}><IonIcon icon={returnDownBack} size=\"large\" color=\"dark\" ></IonIcon></IonLabel>\r\n          }\r\n          {\r\n            (selectWalletView < account?.wallets?.length) && auth?.user?.approved && <IonLabel className=\"inner-items-active\" onClick={() => nextSlide()} style={{ position: 'absolute', bottom: 0, right: 0, zIndex: 10 }}><IonIcon icon={returnDownForward} size=\"large\" color=\"dark\"></IonIcon></IonLabel>\r\n          }\r\n          </section>\r\n              {\r\n                auth?.user?.approved ? <Fragment>\r\n\r\n                <IonCard>\r\n                          \r\n                    <IonCardContent>\r\n\r\n                      <IonList className=\"ion-items-center\" style={{ flexDirection: 'row', display: 'flex' }} >\r\n                        {\r\n                          account?.wallets?.length === 4 ? \r\n                          <Fragment>{account?.wallets?.map((element: any, index: number) => <IonCol key={index}><IonItem><div className=\"ion-items-center inner-items-active\" onClick={() => handleWalletChange(index)}><IonIcon color={selectWalletView === index ? 'primary' : ''} icon={card} size=\"small\"></IonIcon><IonText color={selectWalletView === index ? 'primary' : ''}>{element.currency}</IonText></div></IonItem></IonCol>)}</Fragment> : account?.wallets?.length ? \r\n                          <Fragment>{account?.wallets?.map((element: any, index: number) => <IonCol key={index}><IonItem><div className=\"ion-items-center inner-items-active\" onClick={() => handleWalletChange(index)}><IonIcon color={selectWalletView === index ? 'primary' : ''} icon={card} size=\"small\"></IonIcon><IonText color={selectWalletView === index ? 'primary' : ''}>{element.currency}</IonText></div></IonItem></IonCol>)}<IonCol><IonItem><div className=\"ion-items-center\" onClick={() => handleWalletChange(account?.wallets?.length || 0)}><IonIcon color={selectWalletView === (account?.wallets?.length || 0) ? 'primary' : ''} icon={addCircle} size=\"small\"></IonIcon><IonText color={selectWalletView === (account?.wallets?.length || 0) ? 'primary' : ''}>NEW</IonText></div></IonItem></IonCol></Fragment> : \r\n                          <Fragment>\r\n                            <IonCol>\r\n                              <IonItem>\r\n                                <div className=\"ion-items-center inner-items-active\">\r\n                                  <IonIcon color=\"primary\" icon={addCircle} size=\"small\"></IonIcon>\r\n                                  <IonText color=\"primary\">NEW</IonText>\r\n                                </div>\r\n                              </IonItem>\r\n                            </IonCol>\r\n                          </Fragment>\r\n                        }\r\n                      </IonList>\r\n\r\n                    </IonCardContent>\r\n                </IonCard>\r\n            \r\n                </Fragment> : false\r\n              }\r\n          \r\n          </IonList>\r\n\r\n          {\r\n            auth?.user?.approved && <Fragment>\r\n\r\n                \r\n              <IonList>\r\n                <IonCard>\r\n                  {/* <IonCardHeader>\r\n                  <IonGrid>\r\n                    <IonRow>\r\n                      <IonCol>\r\n                        <IonText style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                          Where do you want to invest today?\r\n                        </IonText>\r\n                      </IonCol>\r\n                    </IonRow>\r\n                  </IonGrid>\r\n                  </IonCardHeader> */}\r\n                  <IonCardContent>\r\n\r\n                    <IonGrid>\r\n                      <IonRow>\r\n                        <IonCol>\r\n                          <IonItem className=\"inner-items-active\" onClick={() => history.push('/new_transaction')}>\r\n                            <IonAvatar slot=\"start\">\r\n                              <IonIcon size=\"large\" icon={cardOutline}></IonIcon>\r\n                            </IonAvatar>\r\n                            <IonText>+ Transfer</IonText>\r\n                          </IonItem>\r\n                        </IonCol>\r\n                        <IonCol>\r\n                          <IonItem className=\"inner-items-active\" onClick={() => history.push('/new_project')}>\r\n                            <IonAvatar slot=\"start\">\r\n                              <IonIcon size=\"large\" icon={businessOutline}></IonIcon>\r\n                            </IonAvatar>\r\n                            <IonText>+ Project</IonText>\r\n                          </IonItem>\r\n                        </IonCol>\r\n                      </IonRow>\r\n                    </IonGrid>\r\n\r\n\r\n\r\n                  {/* <IonList>\r\n                    <IonItem >\r\n                      <IonIcon icon={add} slot=\"start\" onClick={() => history.push('/new_transaction')}></IonIcon>\r\n                      <IonRouterLink onClick={() => history.push('/new_transaction')}>\r\n                        New transaction\r\n                      </IonRouterLink>\r\n                    </IonItem>\r\n                    \r\n                  \r\n                    <IonItem>\r\n                      <IonIcon icon={add} slot=\"start\" onClick={() => history.push('/new_project')}></IonIcon>\r\n                      <IonRouterLink onClick={() => history.push('/new_project')}>\r\n                        New project\r\n                      </IonRouterLink>\r\n                    </IonItem>\r\n                  </IonList> */}\r\n                  </IonCardContent>\r\n                </IonCard>\r\n              </IonList>\r\n\r\n\r\n\r\n            </Fragment>\r\n          }\r\n\r\n      <IonList>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n          <IonGrid>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonText style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                   Recent transactions\r\n                </IonText>\r\n              </IonCol>\r\n              <IonCol style={{ justifyContent: 'flex-end', display: 'flex', alignItems: 'center' }}>\r\n                <IonRouterLink onClick={() => history.push('/my_transactions')}>\r\n                  Show more\r\n                </IonRouterLink>\r\n              </IonCol>\r\n            </IonRow>\r\n          </IonGrid>\r\n        </IonCardHeader>\r\n        <IonCardContent className=\"no-padding\">\r\n        <IonGrid>\r\n        <IonCard style={{ boxShadow: 'none' }}>\r\n            <IonCardContent>\r\n            <IonList>\r\n              {\r\n                account?.loading ? <Loader /> : account?.tsxs?.length > 0 ? Object.values(getMonthlyArry(account?.tsxs.slice(0, 3), 'DD-MM-YYYY')).map((elem: any, index: number) => <Fragment key={index}><IonList className=\"no-padding\"><IonListHeader className=\"no-padding ion-items-center\">{moment(elem[0].created_on).format('DD-MM-YYYY') === moment().format('DD-MM-YYYY') ? \"Today\" : moment(elem[0].created_on).format('DD-MM-YYYY')}</IonListHeader>{elem.map((element: any, index: any) => <MyTsxListElement key={element?.tsx_id} tsx={element} index={index} extendTsx={extendTsx} setExtendTsx={setExtendTsx} />)}</IonList></Fragment> ) : \r\n                <NotFound message=\"No available transactions.\" />\r\n              }\r\n            {/* {\r\n              account?.tsxs?.length > 0 ? account?.tsxs?.slice(0, 3).map((element: any, index: number) => <MyTsxListElement key={element?.tsx_id || index} tsx={element} index={index} extendTsx={extendTsx} setExtendTsx={setExtendTsx} />) : <IonItem>\r\n              <IonAvatar slot=\"start\">\r\n                  <IonIcon size=\"large\" color=\"secondary\" icon={informationCircleOutline}></IonIcon>\r\n              </IonAvatar>\r\n              <IonText>\r\n              No available transactions.\r\n              </IonText>\r\n              </IonItem>\r\n            } */}\r\n            </IonList>\r\n            </IonCardContent>\r\n        </IonCard>\r\n        </IonGrid>\r\n        </IonCardContent>\r\n        </IonCard>\r\n      </IonList>\r\n\r\n\r\n      <IonList>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n          <IonGrid>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonText style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                  Recent Investments\r\n                </IonText>\r\n              </IonCol>\r\n              <IonCol style={{ justifyContent: 'flex-end', display: 'flex', alignItems: 'center' }}>\r\n                <IonRouterLink onClick={() => history.push('/my_investments')}>\r\n                  Show more\r\n                </IonRouterLink>\r\n              </IonCol>\r\n            </IonRow>\r\n          </IonGrid>\r\n        </IonCardHeader>\r\n        <IonCardContent className=\"no-padding\">\r\n        <IonGrid>\r\n        <IonCard style={{ boxShadow: 'none' }}>\r\n            <IonCardContent>\r\n            <IonList>\r\n          {\r\n            /* project.projects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]) */account?.loading ? <Loader /> : account?.investments?.length > 0 ? account?.investments?.slice(0, 3).map((element: any) => <Fragment key={element.project_id}>\r\n              \r\n              <IonRow>\r\n                <IonItem>\r\n                <IonCol style={{ display: 'flex', alignItems: 'left', justifyContent: 'center', flexDirection: 'column', lineHeight: '2' }}>\r\n                  <IonText style={{ textAlign: 'left' }}>{element.projectname}</IonText>\r\n                  <IonRouterLink style={{ fontWeight: 'bold' }} onClick={() => history.push(`/projects/${element.project_id}`)}>Get more</IonRouterLink>\r\n                </IonCol>\r\n                <IonCol style={{ position: 'relative', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  {\r\n                    element.images ? <IonImg onIonError={(e: any) => handleDefaultSrc(e)} src={element.images[0]} alt=\"property\" /> : <IonImg onIonError={(e: any) => handleDefaultSrc(e)} src=\"https://www.investopedia.com/thmb/FKP-u7NEKNODSvAkMo-9WUz0E_c=/2121x1193/smart/filters:no_upscale()/GettyImages-1169053915-76068125fc394f9691db9edaf7c76baf.jpg\" alt=\"property\" />\r\n                  }\r\n                  \r\n                  <IonBadge color=\"light\" style={{ position: 'absolute', top: '10px', right: '10px', zIndex: 10 }}>\r\n                    <Flag code={getCountryCode(element.country) || \"\"} height=\"20px\" />\r\n                  </IonBadge>\r\n                </IonCol>\r\n                </IonItem>\r\n\r\n              </IonRow>\r\n              \r\n              </Fragment>) : <Fragment>\r\n                \r\n                  <NotFound message=\"No available investments.\" />\r\n\r\n              </Fragment>\r\n          }\r\n          </IonList>\r\n          </IonCardContent>\r\n        </IonCard>\r\n        </IonGrid>\r\n        </IonCardContent>\r\n        </IonCard>\r\n      </IonList>\r\n\r\n      </IonContent>\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  account: state.account,\r\n  project: state.project,\r\n  auth: state.auth,\r\n  tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, { logout })(withRouter(Home));\r\n","\r\nimport { present } from '@ionic/core/dist/types/utils/overlays';\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonCard, IonItem, IonButton, IonInput, IonList, IonLabel, IonListHeader, IonCardHeader, IonCardContent, IonCardTitle, IonRouterLink, IonCheckbox, useIonAlert } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { preLogin } from '../../store/actions/auth';\r\n\r\n\r\nconst EmailField: React.FC<RouteComponentProps | any> = ({ formData, setFormData, history, step, setStep, preLogin }) => {\r\n\r\n    \r\n    const { email, password, emailSave } = formData;\r\n\r\n    \r\n    const [present] = useIonAlert();\r\n\r\n    const handleChange = (e: any) => {\r\n        \r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const checkEmail = async (e: any) => {\r\n      \r\n      try {\r\n\r\n        e.preventDefault();\r\n\r\n        await preLogin(formData, present, setStep)\r\n\r\n\r\n      } catch (err: any) {\r\n        console.log(err.message)\r\n      }\r\n\r\n    }\r\n    \r\n  return (\r\n      <Fragment>\r\n            \r\n        <form onSubmit={(e: any) => checkEmail(e)}>\r\n          <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              <IonLabel>E-mail</IonLabel>\r\n              <IonInput value={email || ''} max=\"50\" name=\"email\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n          </IonToolbar>\r\n\r\n            <IonItem>\r\n\r\n              <IonLabel>Remember my E-mail</IonLabel>\r\n\r\n              <IonCheckbox checked={ formData?.emailSave } onIonChange={(e: any) => setFormData({ ...formData, emailSave: e.detail.checked }) } color=\"primary\" slot=\"start\"></IonCheckbox>\r\n              \r\n            </IonItem>\r\n          <IonToolbar mode=\"md\">\r\n            <IonButton disabled={!(email && email.includes('@') && email.includes('.') && !(new RegExp(\"\\\\\\\\\",\"\").test(email)))} type=\"submit\" size=\"small\" color=\"secondary\" slot=\"end\">Continue {\">\"}</IonButton>\r\n          </IonToolbar>\r\n          <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              <IonRouterLink onClick={() => history.push(\"/recover_email\")} class=\"spacing\">Forgot your E-mail?</IonRouterLink>\r\n            </IonItem>\r\n          </IonToolbar>\r\n        </form>\r\n        \r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { preLogin })(withRouter(EmailField));\r\n","\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonCard, IonItem, IonButton, IonInput, IonList, IonLabel, IonListHeader, IonCardHeader, IonCardContent, IonCardTitle, IonRouterLink, IonCheckbox, useIonAlert } from '@ionic/react';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { login } from '../../store/actions/auth';\r\n\r\n\r\nconst PasswordField: React.FC<RouteComponentProps | any> = ({ formData, setFormData, history, step, setStep, login, setAlert  }) => {\r\n\r\n    \r\n    const { email, password } = formData;\r\n\r\n    \r\n    const [present] = useIonAlert();\r\n\r\n    const handleChange = (e: any) => {\r\n        \r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        \r\n    }\r\n\r\n    const loginHandler = async (e: any) => {\r\n      try {\r\n        \r\n        e.preventDefault();\r\n\r\n        await login(formData, history, present);\r\n\r\n        await setFormData({});\r\n        await setStep(1);\r\n\r\n      } catch (err: any) {\r\n        \r\n        console.log(err.message)\r\n      }\r\n    }\r\n\r\n    \r\n  return (\r\n      <Fragment>\r\n            \r\n        <form onSubmit={(e: any) => loginHandler(e)}>\r\n          <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              <IonLabel>E-mail</IonLabel>\r\n              <IonInput value={email || ''} max=\"250\" name=\"email\" disabled></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Password</IonLabel>\r\n              <IonInput value={password || ''} max=\"250\" type=\"password\" name=\"password\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n          </IonToolbar>\r\n\r\n            <IonItem>\r\n\r\n              <IonLabel>Remember my E-mail</IonLabel>\r\n\r\n              <IonCheckbox checked={ formData?.emailSave } onIonChange={(e: any) => setFormData({ ...formData, emailSave: e.detail.checked }) } color=\"primary\" slot=\"start\"></IonCheckbox>\r\n              \r\n            </IonItem>\r\n          <IonToolbar mode=\"md\">\r\n            <IonButton disabled={!(password && email && email.includes('@') && email.includes('.') && !(new RegExp(\"\\\\\\\\\",\"\").test(email)) && !(new RegExp(\"\\\\\\\\\",\"\").test(password)))} type=\"submit\" size=\"small\" color=\"secondary\" slot=\"end\">Log on</IonButton>\r\n            <button style={{ display: 'none' }} disabled={!(password && email && email.includes('@') && email.includes('.') && !(new RegExp(\"\\\\\\\\\",\"\").test(email)) && !(new RegExp(\"\\\\\\\\\",\"\").test(password)))} type=\"submit\" color=\"secondary\" slot=\"end\">Log on</button>\r\n            \r\n          </IonToolbar>\r\n          <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              <IonRouterLink onClick={() => history.push(\"/recover_password\")} class=\"spacing\">Forgot your password?</IonRouterLink>\r\n            </IonItem>\r\n          </IonToolbar>\r\n        </form>\r\n\r\n        \r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { login })(withRouter(PasswordField));\r\n","import { IonContent, IonPage, IonTitle, IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonCardTitle, IonAlert } from '@ionic/react';\r\nimport { useEffect, useState } from 'react';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport PageSubTitle from '../../components/PageSubTitle';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport EmailField from '../../components/login/EmailField';\r\nimport PasswordField from '../../components/login/PasswordField';\r\nimport { home } from 'ionicons/icons';\r\n\r\ntype LoginForm = {\r\n  email: string | null,\r\n  password: string | null,\r\n  emailSave?: boolean | null\r\n}\r\n\r\n\r\nconst Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n  const [formData, setFormData] = useState<LoginForm>({\r\n    email: localStorage.email || '',\r\n    password: '',\r\n    emailSave: localStorage.email ? true : false\r\n  })\r\n\r\nuseEffect(() => {\r\n\r\n  if (localStorage.email) {\r\n    \r\n    setFormData({ ...formData, email: localStorage.email, emailSave: true })\r\n\r\n  }\r\n  return () => {\r\n    setFormData({\r\n      email: '',\r\n      password: '',\r\n      emailSave: false\r\n    })\r\n  }\r\n}, [localStorage.email])\r\n\r\nconst [step, setStep] = useState(1)\r\n\r\nconst { email, password } = formData;\r\n\r\n/* const handleSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n} */\r\n\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Log on\", path: '/logon', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n      \r\n      <IonContent fullscreen>\r\n\r\n      <PageSubTitle subTitles={subTitles} />\r\n\r\n      <IonList>\r\n\r\n          \r\n\r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }} color=\"dark\">Log on to Online Platform</IonTitle>\r\n          </IonListHeader>\r\n\r\n        <IonCard>\r\n\r\n\r\n\r\n          <IonCardHeader>\r\n            <IonTitle color=\"dark\">Online Platform</IonTitle>\r\n          </IonCardHeader>\r\n          <IonCardContent>\r\n\r\n            \r\n          <IonList>\r\n\r\n            {\r\n              !step || step === 1 && <EmailField formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n            }\r\n            {\r\n              step === 2 && <PasswordField formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n            }\r\n            \r\n            \r\n          </IonList>\r\n          \r\n              \r\n            \r\n\r\n          </IonCardContent>\r\n        </IonCard>\r\n\r\n        <IonCard>\r\n          <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">Register to Online Platform</IonCardTitle>\r\n\r\n          </IonCardHeader>\r\n          <IonCardContent>\r\n              \r\n            <IonItem>\r\n              Manage your virtual money online with our secure Online Platform service.\r\n\r\n            </IonItem>\r\n                \r\n            <IonToolbar mode=\"md\">\r\n              <IonButton onClick={() => history.push('/register')} type=\"button\" size=\"small\" color=\"secondary\" slot=\"end\">Register now {\">\"}</IonButton>\r\n            </IonToolbar>\r\n\r\n          </IonCardContent>\r\n        </IonCard>\r\n\r\n      </IonList>\r\n    </IonContent>\r\n\r\n  </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import { IonContent, IonPage, IonTitle, IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonText, IonCardTitle, IonCardSubtitle, IonAvatar } from '@ionic/react';\r\nimport { useState } from 'react';\r\nimport PageHeader from '../../../components/PageHeader';\r\nimport PageSubTitle from '../../../components/PageSubTitle';\r\n\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { checkmark, home } from 'ionicons/icons';\r\n\r\ntype RegisterForm = {\r\n  email: string | null,\r\n  password: string | null\r\n}\r\n\r\n\r\nconst Register: React.FC <RouteComponentProps> = ({ history }) => {\r\n\r\n  const [formData, setFormData] = useState<RegisterForm>({\r\n    email: null,\r\n    password: null\r\n})\r\nconst { email, password } = formData;\r\n\r\nconst handleTyping = (e: { target: HTMLInputElement }) => {\r\n    \r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n}\r\nconst handleSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    \r\n}\r\n\r\n\r\n    const subTitles: any[] = [\r\n      {\r\n        text: \"Home\", path: '/', icon: home\r\n      }, \r\n      {\r\n        text: \"Register\", path: '/register', icon: '', \r\n      \r\n      }\r\n    ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n      \r\n      <IonContent fullscreen>\r\n\r\n      <PageSubTitle subTitles={subTitles} />\r\n\r\n      <IonList>\r\n\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }} color=\"dark\">Register to digital platform</IonTitle>\r\n          </IonListHeader>\r\n\r\n          <IonCard>\r\n            <IonCardHeader>\r\n\r\n              <IonCardTitle mode=\"md\">\r\n                How to register to Mobile {\"&\"} Online Platform\r\n              </IonCardTitle>\r\n              <IonCardSubtitle mode={\"md\"}>\r\n                Before you begin, you'll need:\r\n              </IonCardSubtitle>\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonList>\r\n\r\n                \r\n                <IonCard>\r\n                  <IonItem>\r\n                    <IonAvatar slot=\"start\">\r\n                      <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                      <IonText className=\"ion-text-wrap\">\r\n                        Your formal email address for the current account *.\r\n                      </IonText>\r\n                    </IonLabel>\r\n                  </IonItem>\r\n                </IonCard>\r\n\r\n                <IonCard>\r\n                  <IonItem>\r\n                    \r\n                    <IonAvatar slot=\"start\">\r\n                      <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                    <IonText className=\"ion-text-wrap\">\r\n                      Password at least 8 characters long.\r\n                    </IonText>\r\n                    </IonLabel>\r\n                  </IonItem>\r\n                  <IonItem>\r\n\r\n                    <IonText>\r\n                      * You will receive an email with your Digital Secure Key. For more information, please visit our <IonRouterLink onClick={() => history.push(\"/security_center\")}>Security Centre</IonRouterLink>.\r\n                    </IonText>\r\n                  </IonItem>\r\n\r\n                </IonCard>\r\n\r\n\r\n\r\n              </IonList>\r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n          <IonCard>\r\n          \r\n          <IonCardHeader>\r\n            \r\n            <IonCardTitle mode=\"md\">\r\n              Continue registration\r\n\r\n            </IonCardTitle>\r\n            <IonCardSubtitle mode={\"md\"}>\r\n              To continue the registration process online, click the button below.\r\n\r\n            </IonCardSubtitle>\r\n\r\n          </IonCardHeader>\r\n\r\n          <IonCardContent>\r\n            \r\n            <IonToolbar mode=\"md\">\r\n              <IonButton  onClick={() => history.push('/register/gsa')} type=\"button\" size=\"default\" color=\"primary\" slot=\"end\">\r\n                Register to Online Platform\r\n              </IonButton>\r\n            </IonToolbar>\r\n\r\n\r\n            \r\n          </IonCardContent>\r\n          </IonCard>  \r\n          <IonCard>\r\n            \r\n            <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n              More information\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n\r\n            <IonCardContent>\r\n            <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              \r\n                <IonRouterLink onClick={() => history.push('/register/gsa')} class=\"spacing\">Setting up your account</IonRouterLink>\r\n              \r\n            </IonItem>\r\n            <IonItem>\r\n              \r\n                <IonRouterLink onClick={() => history.push('/recover_email')} class=\"spacing\">I've forgotten my email address</IonRouterLink>\r\n              \r\n            </IonItem>\r\n            <IonItem>\r\n              \r\n                <IonRouterLink onClick={() => history.push('/recover_password')} class=\"spacing\">I've forgotten my password</IonRouterLink>\r\n              \r\n            </IonItem>\r\n            <IonItem>\r\n              \r\n                <IonRouterLink onClick={() => history.push('/terms_and_conditions')} class=\"spacing\">Terms and conditions</IonRouterLink>\r\n              \r\n            </IonItem>\r\n            </IonToolbar>\r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n      </IonList>\r\n    </IonContent>\r\n\r\n  </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(Register);\r\n","\r\nimport { IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonText, IonCardTitle, IonCardSubtitle, IonAvatar } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { checkmark } from 'ionicons/icons';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface TermsAndConditionsUI {\r\n    formData: any,\r\n    setFormData: any,\r\n    history: any\r\n}\r\n\r\nconst TermsContent: React.FC<TermsAndConditionsUI | any> = ({}) => {\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n        \r\n        <IonCard>\r\n        \r\n        <IonCardHeader>\r\n        \r\n            <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                Terms {\"&\"} Conditions\r\n\r\n            </IonCardTitle>\r\n\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n        <IonList>\r\n        <IonItem>\r\n        <IonText>\r\n            Welcome to NiVest!\r\n            These terms and conditions outline the rules and regulations for the use of NiVest.\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            By accessing this Application we assume you accept these terms and conditions. Do not continue to use NiVest App if you do not agree to take all of the terms and conditions stated on this page.\r\n\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: “Client”, “User“, “You” and “Your” refers to you, the person log on this Application and compliant to the NiVest's terms and conditions. “NiVest“, “The Company”, “Ourselves”, “We”, “Our” and “Us”, refers to our Company. “Party”, “Parties”, or “Us”, refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client's needs in respect of provision of the Company's stated services, in accordance with and subject to, prevailing law of Google. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.\r\n\r\n\r\n        </IonText>\r\n        </IonItem>\r\n\r\n        </IonList>\r\n        </IonCardContent>\r\n        </IonCard>\r\n\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Cookies\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonList>\r\n        <IonItem>\r\n        <IonText>\r\n            We employ the use of cookies. By accessing NiVest App, you agreed to use cookies in agreement with the NiVest's Privacy Policy.\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            Most interactive Applications use cookies to let us retrieve the your uploaded content details for each visit. Cookies are used by our Application to enable the functionality of certain areas to make it easier for people visiting our Application. Some of our affiliate/advertising partners may also use cookies.\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n            You must not:\r\n\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                Republish material from NiVest App\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                Sell, rent or sub-license material from NiVest App\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                Reproduce, duplicate or copy material from NiVest App\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                Redistribute content from NiVest Service\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            \r\n            This Agreement shall begin on the date hereof.\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            Parts of this Application offer an opportunity for users to post and exchange opinions and information in certain areas of the Application. NiVest does not filter, edit, publish or review your uploaded content content prior to their presence on the Application. your uploaded content content do not reflect the views and opinions of NiVest, its agents and/or affiliates. your uploaded content content reflect the views and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, NiVest shall not be liable for the your uploaded content content or for any liability, damages or expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the your uploaded content content on this Application.\r\n\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            NiVest reserves the right to monitor all Comments and to remove any Comments which can be considered inappropriate, offensive or causes breach of these Terms and Conditions.\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n        <IonText>\r\n            You warrant and represent that:\r\n\r\n\r\n        </IonText>\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                You are entitled to post the Comments on our Application and have all necessary licenses and consents to do so;\r\n\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                The Comments do not invade any intellectual property right, including without limitation copyright, patent or trademark of any third party;\r\n\r\n\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which is an invasion of privacy\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        <IonItem>\r\n            \r\n            <IonAvatar slot=\"start\">\r\n                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n            </IonAvatar>\r\n            <IonLabel>\r\n            <IonText className=\"ion-text-wrap\">\r\n                The Comments will not be used to solicit or promote business or custom or present commercial activities or unlawful activity.\r\n\r\n\r\n\r\n\r\n            </IonText>\r\n            </IonLabel>\r\n\r\n\r\n        </IonItem>\r\n        \r\n        <IonItem>\r\n            \r\n            You hereby grant NiVest a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce and edit any of your Comments in any and all forms, formats or media.\r\n\r\n\r\n\r\n\r\n        </IonItem>\r\n        </IonList>\r\n        </IonCardContent>\r\n            \r\n        </IonCard>\r\n        \r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Hyperlinking to our Content\r\n\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonList>\r\n            <IonItem>\r\n                <IonText>\r\n                    The following organizations may link to our Application without prior written approval:\r\n\r\n                </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    Government agencies;\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    Search engines;\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    News organizations;\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    Online directory distributors may link to our Application in the same manner as they hyperlink to the Applications of other listed businesses; and\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and charity fundraising groups which may not hyperlink to our Web site.\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n            <IonText>\r\n                These organizations may link to our home page, to publications or to other Application information so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products and/or services; and (c) fits within the context of the linking party's site.\r\n\r\n            </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n            <IonText>\r\n                We may consider and approve other link requests from the following types of organizations:\r\n\r\n\r\n            </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    commonly-known consumer and/or business information sources;\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    NiVest community sites;\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    associations or other groups representing charities;\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    online directory distributors;\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    internet portals;\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    accounting, law and consulting firms; and\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    educational institutions and trade associations.\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n            <IonText>\r\n                We will approve link requests from these organizations if we decide that: (a) the link would not make us look unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative records with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of NiVest; and (d) the link is in the context of general resource information.\r\n\r\n            </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n            <IonText>\r\n                These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and (c) fits within the context of the linking party's site.\r\n\r\n\r\n            </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n            <IonText>\r\n                If you are one of the organizations listed in paragraph 2 above and are interested in linking to our Application, you must inform us by sending an e-mail to NiVest. Please include your name, your organization name, contact information as well as the URL of your site, a list of any URLs from which you intend to link to our Application, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.\r\n\r\n            </IonText>\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    By use of our corporate name; or\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    By use of the uniform resource locator being linked to; or\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    By use of any other description of our Application being linked to that makes sense within the context and format of content on the linking party's site.\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n                No use of NiVest's logo or other artwork will be allowed for linking absent a trademark license agreement.\r\n\r\n\r\n            </IonItem>\r\n            </IonList>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                iFrames\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonItem>\r\n            <IonText>\r\n                Without prior approval and written permission, you may not create frames around our Webpages that alter in any way the visual presentation or appearance of our Application.\r\n\r\n            </IonText>\r\n            </IonItem>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Content Liability\r\n\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonItem>\r\n            <IonText>\r\n                We shall not be hold responsible for any content that appears on your Application. You agree to protect and defend us against all claims that is rising on your Application. No link(s) should appear on any Application that may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other violation of, any third party rights.\r\n\r\n\r\n            </IonText>\r\n            </IonItem>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Reservation of Rights\r\n\r\n\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonItem>\r\n            <IonText>\r\n                We reserve the right to request that you remove all links or any particular link to our Application. You approve to immediately remove all links to our Application upon request. We also reserve the right to amen these terms and conditions and it's linking policy at any time. By continuously linking to our Application, you agree to be bound to and follow these linking terms and conditions.\r\n\r\n\r\n            </IonText>\r\n            </IonItem>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Removal of links from our Application\r\n\r\n\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonList>\r\n                <IonItem>\r\n                <IonText>\r\n                    If you find any link on our Application that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.\r\n\r\n\r\n                </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                <IonText>\r\n                    We do not ensure that the information on this Application is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the Application remains available or that the material on the Application is kept up to date.\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonItem>\r\n            </IonList>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n        <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Disclaimer\r\n\r\n\r\n            </IonCardTitle>\r\n        </IonCardHeader>\r\n\r\n        <IonCardContent>\r\n            <IonList>\r\n                <IonItem>\r\n                <IonText>\r\n                    If you find any link on our Application that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.\r\n\r\n\r\n                </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                <IonText>\r\n                    We do not ensure that the information on this Application is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the Application remains available or that the material on the Application is kept up to date.\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                <IonText>\r\n                    To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions relating to our Application and the use of this Application. Nothing in this disclaimer will:\r\n\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    limit or exclude our or your liability for death or personal injury;\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n                </IonItem>\r\n                <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    limit or exclude our or your liability for fraud or fraudulent misrepresentation;\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n                </IonItem>\r\n                <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    limit any of our or your liabilities in any way that is not permitted under applicable law; or\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n                </IonItem>\r\n                <IonItem>\r\n                \r\n                <IonAvatar slot=\"start\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                </IonAvatar>\r\n                <IonLabel>\r\n                <IonText className=\"ion-text-wrap\">\r\n                    exclude any of our or your liabilities that may not be excluded under applicable law.\r\n\r\n\r\n\r\n                </IonText>\r\n                </IonLabel>\r\n\r\n\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonText>\r\n                    The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are subject to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including liabilities arising in contract, in tort and for breach of statutory duty.\r\n\r\n                    </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonText>\r\n                    As long as the Application and the information and services on the Application are provided free of charge, we will not be liable for any loss or damage of any nature.\r\n                    </IonText>\r\n\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonText>\r\n                    Your funds in this application do not represent real money. Your virtual finances are strictly simulated.\r\n                    </IonText>\r\n                    \r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonText>\r\n                    You use this application for free of charge without providing any financial information.\r\n                    </IonText>\r\n                    \r\n                </IonItem>\r\n                \r\n            </IonList>\r\n        </IonCardContent>\r\n        </IonCard>\r\n\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(TermsContent);\r\n","\r\nimport { IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonText, IonCardTitle, IonCardSubtitle, IonAvatar } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { checkmark } from 'ionicons/icons';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport TermsContent from '../TermsContent';\r\n\r\ninterface TermsAndConditionsUI {\r\n    formData: any,\r\n    setFormData: any,\r\n    history: any\r\n}\r\n\r\nconst TermsAndConditions: React.FC<TermsAndConditionsUI | any> = ({ formData, setFormData, history, step, setStep }) => {\r\n\r\n    const { termsAndConditions, accountType } = formData;\r\n\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n        \r\n        <TermsContent />\r\n\r\n        <IonCard>\r\n        <IonItem>\r\n        <IonCheckbox onClick={ () => setFormData({ ...formData, termsAndConditions: !termsAndConditions }) } slot=\"start\"></IonCheckbox>\r\n        <IonLabel className=\"ion-text-wrap\">\r\n            I accept the terms of use of the digital in online and mobile platform\r\n        </IonLabel>\r\n        </IonItem>\r\n        <IonItem>\r\n            <div className=\"ion-items-center\">\r\n            <IonButton disabled={!(accountType && termsAndConditions)} onClick={() => setStep(3)} type=\"button\" size=\"default\" color=\"primary\">\r\n                Continue\r\n            </IonButton>\r\n            </div>\r\n        </IonItem>\r\n        </IonCard>\r\n\r\n\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(TermsAndConditions);\r\n","\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonCard, IonItem, IonButton, IonInput, IonList, IonLabel, IonListHeader, IonCardHeader, IonCardContent, IonCardTitle, useIonAlert } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { preRegister } from '../../store/actions/auth';\r\n\r\n\r\nconst CreateAccount: React.FC<RouteComponentProps | any> = ({ formData, setFormData, history, step, setStep, preRegister }) => {\r\n\r\n    \r\n    const { termsAndConditions, email, password, passwordConfirmation, twoFactor, accountType} = formData;\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    \r\n    const [present] = useIonAlert();\r\n    \r\n    const checkEmail = async (e: any) => {\r\n      \r\n        try {\r\n  \r\n          e.preventDefault();\r\n  \r\n          await preRegister(formData, present, setStep)\r\n  \r\n  \r\n        } catch (err: any) {\r\n          console.log(err.message)\r\n        }\r\n  \r\n      }\r\n\r\n  return (\r\n      <Fragment>\r\n            \r\n            <IonCard>\r\n                <IonCardHeader>\r\n                    <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                        Create account\r\n                    </IonCardTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                <form onSubmit={(e: any) => checkEmail(e)}>\r\n                    <IonItem>\r\n                        <IonLabel slot=\"start\">\r\n                            E-mail address\r\n                        </IonLabel>\r\n\r\n                        <IonInput value={email || ''} max=\"50\" name=\"email\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel slot=\"start\">\r\n                            Your password\r\n                        </IonLabel>\r\n                        <IonInput value={password || ''} max=\"250\" type=\"password\" name=\"password\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel slot=\"start\">\r\n                            Confirm password\r\n                        </IonLabel>\r\n                        <IonInput value={passwordConfirmation || ''} max=\"250\" type=\"password\" name=\"passwordConfirmation\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <div className=\"ion-items-center\">\r\n                        <IonButton disabled={!(accountType && termsAndConditions && email && password && passwordConfirmation && password === passwordConfirmation && email.includes('@') && email.includes('.') && !(new RegExp(\"\\\\\\\\\",\"\").test(email)) && !(new RegExp(\"\\\\\\\\\",\"\").test(password)))} type=\"submit\" size=\"default\" color=\"primary\">\r\n                            Continue\r\n                        </IonButton>\r\n                        </div>\r\n                    </IonItem>\r\n                </form>\r\n                </IonCardContent>\r\n            </IonCard>\r\n\r\n        \r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { preRegister })(withRouter(CreateAccount));\r\n","\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonCard, IonButton, IonItem, IonCardHeader, IonCardTitle, IonCardContent, IonLabel, IonInput, IonText, IonBadge, IonAvatar, IonAlert, useIonAlert } from '@ionic/react';\r\nimport { checkmark, close } from 'ionicons/icons';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { register } from '../../store/actions/auth';\r\nimport { setAlert } from '../../store/actions/alert';\r\n\r\nconst Confirmation: React.FC<RouteComponentProps | any> = ({ formData, setFormData, history, step, setStep, register, setAlert }) => {\r\n\r\n\r\n    const { termsAndConditions, email, password, passwordConfirmation, twoFactor, accountType} = formData;\r\n\r\n    const [present] = useIonAlert();\r\n    \r\n    const registerHandler = async(data: any) => {\r\n        try {\r\n  \r\n          await register(data, history, present);\r\n  \r\n\r\n\r\n        } catch (err: any) {\r\n            \r\n            console.log(err.message)\r\n\r\n        }\r\n    }\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n        <IonCard>\r\n            <IonCardHeader>\r\n                <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                    Confirm your details\r\n                </IonCardTitle>\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n                <IonItem>\r\n                    <IonLabel slot=\"start\">\r\n                        E-mail account\r\n                    </IonLabel>\r\n                    <IonText className=\"ion-items-center\">\r\n                        {email || \"N/A\"}\r\n                    </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonLabel slot=\"start\">\r\n                        Your password\r\n                    </IonLabel>\r\n                    <IonText className=\"ion-items-center\">\r\n                        {password.split('').map(() => 'x') || \"N/A\"}\r\n                    </IonText>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonLabel className=\"ion-text-wrap\">\r\n                        I accept the terms of use of the digital in online and mobile platform\r\n                    </IonLabel>\r\n                    {\r\n                        termsAndConditions ? <Fragment>\r\n                            <IonAvatar slot=\"start\">\r\n                                <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                            </IonAvatar>\r\n                        </Fragment> : <Fragment>\r\n                            <IonAvatar slot=\"start\">\r\n                                <IonIcon size=\"large\" color=\"danger\" icon={close}></IonIcon>\r\n                            </IonAvatar>\r\n                        </Fragment>\r\n                    }\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <div className=\"ion-items-center\">\r\n                    <IonButton disabled={!(accountType && termsAndConditions && email && password && passwordConfirmation)} onClick={() => registerHandler(formData)} type=\"button\" size=\"default\" color=\"primary\">\r\n                        Register\r\n                    </IonButton>\r\n                    </div>\r\n                </IonItem>\r\n            \r\n            </IonCardContent>\r\n        </IonCard>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { register, setAlert })(withRouter(Confirmation));\r\n","import { IonHeader, IonToolbar, IonTitle, IonIcon, IonCard, IonItem, IonButton, IonInput, IonList, IonLabel, IonListHeader, IonCardHeader, IonCardContent, IonCardTitle, IonCardSubtitle, IonCheckbox } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst AccountSelection: React.FC<RouteComponentProps | any> = ({ formData, setFormData, history, step, setStep }) => {\r\n\r\n    const { termsAndConditions, email, password, passwordConfirmation, twoFactor, accountType } = formData;\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            <IonCard>\r\n                <IonCardHeader>\r\n                    <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                        Account selection\r\n\r\n                    </IonCardTitle>\r\n                    <IonCardSubtitle className=\"ion-items-center\" mode={\"md\"}>\r\n                        Select the type of account\r\n\r\n                    </IonCardSubtitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <IonItem>\r\n                        <IonLabel>\r\n                            Account for free\r\n                        </IonLabel>\r\n\r\n                        <IonCheckbox onClick={ () => setFormData({ ...formData, accountType: accountType ? \"\" : \"Account for free\" }) } slot=\"start\"></IonCheckbox>\r\n\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <div className=\"ion-items-center\">\r\n                        <IonButton disabled={!accountType} onClick={() => setStep(2)} type=\"button\" size=\"default\" color=\"primary\">\r\n                            Continue\r\n                        </IonButton>\r\n                        </div>\r\n                    </IonItem>\r\n                </IonCardContent>\r\n            </IonCard>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default withRouter(AccountSelection);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface AlertState {\r\n    alert: { alerts: { id: string, message: string, type: string }[] }\r\n}\r\n\r\ninterface AlertProperties {\r\n    alert: { alerts: { id: string, message: string, type: string }[] }\r\n}\r\n\r\nconst Alert = ({ alert: { alerts } }: AlertProperties): any => \r\n    \r\n    \r\n    alerts !== null && alerts.length > 0 && <div className=\"alert\">\r\n    {\r\n        alerts.map(element => (\r\n            <div key={element.id} className={`alert-message alert-${element.type}`}>\r\n                {element.message}\r\n            </div>))\r\n    }\r\n    </div>\r\n    \r\n    \r\nconst mapStateToProps = (state: AlertState) => ({\r\n    alert: state.alert\r\n})\r\nexport default connect(mapStateToProps)(Alert);","import { IonContent, IonPage, IonTitle, IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonText, IonCardTitle, IonCardSubtitle, IonAvatar } from '@ionic/react';\r\nimport { useState } from 'react';\r\nimport PageHeader from '../../../components/PageHeader';\r\nimport PageSubTitle from '../../../components/PageSubTitle';\r\n\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport TermsAndConditions from '../../../components/register/TermsAndConditions';\r\nimport CreateAccount from '../../../components/register/CreateAccount';\r\nimport Confirmation from '../../../components/register/Confirmation';\r\nimport AccountSelection from '../../../components/register/AccountSelection';\r\nimport Alert from '../../../components/Alert';\r\nimport { connect } from 'react-redux';\r\nimport { home } from 'ionicons/icons';\r\n\r\n\r\n\r\nconst GSA: React.FC <RouteComponentProps> = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        termsAndConditions: false,\r\n        email: '',\r\n        password: '',\r\n        passwordConfirmation: '',\r\n        twoFactor: false\r\n    });\r\n    const [step, setStep] = useState(1)\r\n\r\n    const { termsAndConditions, email, password, passwordConfirmation, twoFactor} = formData;\r\n\r\n    const isCurrentPage = (s: number) => {\r\n      return s === step ? true : false;\r\n    }\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Register\", path: '/register', icon: '', \r\n    \r\n    }, \r\n    {\r\n      text: \"General Services Administration\", path: '/register/gsa', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n      \r\n      <IonContent fullscreen>\r\n\r\n      <PageSubTitle subTitles={subTitles} />\r\n\r\n      <Alert />\r\n\r\n      <IonItem>\r\n      </IonItem>\r\n      <IonList>\r\n        <IonItem style={ isCurrentPage(1) ?{ borderLeft: '5px solid lightblue' } : { }}>\r\n          <IonLabel>\r\n            Account selection {\">\"}\r\n          </IonLabel>\r\n        </IonItem>\r\n        <IonItem style={ isCurrentPage(2) ?{ borderLeft: '5px solid lightblue' } : { }}>\r\n          <IonLabel>\r\n            Terms {\"&\"} Conditions {\">\"}\r\n          </IonLabel>    \r\n        </IonItem>\r\n        <IonItem style={ isCurrentPage(3) ?{ borderLeft: '5px solid lightblue' } : { }}>\r\n          <IonLabel>\r\n            Create account details {\">\"}\r\n          </IonLabel>\r\n        </IonItem>\r\n        <IonItem style={ isCurrentPage(4) ?{ borderLeft: '5px solid lightblue' } : { }}>\r\n          <IonLabel>\r\n            Confirmation {\">\"}\r\n          </IonLabel>\r\n        </IonItem>\r\n      </IonList>\r\n      <IonList>\r\n\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }} color=\"dark\">General Services Administration</IonTitle>\r\n          </IonListHeader>\r\n\r\n        {\r\n            !step || step === 1 && <AccountSelection formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n        }\r\n        {\r\n            step === 2 && <TermsAndConditions formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n        }\r\n        {\r\n            step === 3 && <CreateAccount formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n        }\r\n        {\r\n            step === 4 && <Confirmation formData={formData} setFormData={setFormData} step={step} setStep={setStep} />\r\n        }\r\n          \r\n                  \r\n\r\n      </IonList>\r\n    </IonContent>\r\n\r\n  </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  alert: state.alert,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {  })(withRouter(GSA));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonItemDivider, IonCardSubtitle, IonGrid, IonRow, IonCol } from '@ionic/react';\r\nimport { card, checkmark, close, home, informationCircleOutline } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\n\r\nconst SecurityCenter: React.FC<any> = ({ tsx, history }) => {\r\n\r\n  const [loadingData, setLoadingData] = useState(false)\r\n\r\n  const [arry, setArry] = useState<any[]>([])\r\n\r\n  const [isScanning, setIsScanning] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setArry(tsx.tsxs?.slice()?.sort((a: any, b: any) => a?.tsx_id - b?.tsx_id))\r\n  }, [])\r\n\r\n  \r\n\r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Security center\", path: '/security_center', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n              Security Center\r\n\r\n            </IonTitle>\r\n          </IonListHeader>\r\n\r\n          \r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle>\r\n                Whether you’ve been the victim of fraud or are looking to learn how to protect yourself, this page outlines key information you should know and what we do to keep you safe and secure online.\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              \r\n                <IonItem>\r\n                    <IonAvatar slot=\"start\">\r\n                      <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                      <IonText className=\"ion-text-wrap\">\r\n                        Report fraud\r\n                      </IonText>\r\n                      <IonItemDivider className=\"ion-text-wrap\">\r\n                        You should contact us immediately if you suspect fraud on your account.\r\n\r\n                      </IonItemDivider>\r\n                    </IonLabel>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonAvatar slot=\"start\">\r\n                      <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                      <IonText className=\"ion-text-wrap\">\r\n                        How to protect yourself\r\n                      </IonText>\r\n                      <IonItemDivider className=\"ion-text-wrap\">\r\n                        Find out what steps you can take to keep yourself safe when investing online.\r\n\r\n                      </IonItemDivider>\r\n                    </IonLabel>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonAvatar slot=\"start\">\r\n                      <IonIcon size=\"large\" color=\"secondary\" icon={checkmark}></IonIcon>\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                      <IonText className=\"ion-text-wrap\">\r\n                        How we protect you\r\n                      </IonText>\r\n                      <IonItemDivider className=\"ion-text-wrap\">\r\n                        When you invest online with NiVest, you're protected by our global security network and by advanced security technology.\r\n\r\n                      </IonItemDivider>\r\n                    </IonLabel>\r\n                </IonItem>\r\n                \r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n          \r\n          <IonCard>\r\n\r\n            <IonCardHeader>\r\n              <IonCardTitle>\r\n                Manual Scanning\r\n              </IonCardTitle>\r\n\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                You manually check if the protection mechanism detects inconsistencies in the list of current transactions.\r\n              </IonItem>\r\n\r\n              <IonItem>\r\n                <IonButton slot=\"end\" size=\"default\" onClick={() => setIsScanning(!isScanning)}>Manual scanning</IonButton>\r\n              </IonItem>\r\n\r\n            </IonCardContent>\r\n\r\n          </IonCard>\r\n\r\n          {\r\n            isScanning ? <Fragment>\r\n\r\n                <IonCard>\r\n\r\n                <IonCardHeader>\r\n                  <IonCardTitle className=\"ion-items-center\">\r\n                    Protection check\r\n                  </IonCardTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n\r\n                  <IonGrid>\r\n\r\n                    <IonRow>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        ID\r\n                      </IonCol>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        <span>Previous</span><span>Hash</span>\r\n                      </IonCol>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        <span>Current</span><span>Hash</span>\r\n                      </IonCol>\r\n                      <IonCol className=\"ion-items-center\">\r\n                        Correct\r\n                      </IonCol>\r\n                    </IonRow>\r\n                    {\r\n                      arry?.length ? arry?.map((element: any, index: number) => <IonRow className=\"inner-items-active\" key={index} onClick={() => history.push(`/transactions/${element.tsx_id}`)}>\r\n                        <IonCol className=\"ion-items-center\">{element?.tsx_id}</IonCol>\r\n                        <IonCol className=\"ion-items-center\"><IonIcon color=\"secondary\" size=\"small\" icon={informationCircleOutline}></IonIcon></IonCol>\r\n                        <IonCol className=\"ion-items-center\"><IonIcon color=\"secondary\" size=\"small\" icon={informationCircleOutline}></IonIcon></IonCol>\r\n                        <IonCol className=\"ion-items-center\">{index ? ((element.previous_hash !== element.current_hash) && (element.previous_hash === arry[index - 1].current_hash) ) ? <IonIcon icon={checkmark} color='success' size=\"large\"></IonIcon> : <IonIcon icon={close} color='danger' size=\"large\"></IonIcon> : <IonIcon icon={checkmark} color='success' size=\"large\"></IonIcon>}</IonCol>\r\n                      </IonRow>) : <IonRow>\r\n                        <IonCol>\r\n                          <NotFound message=\"No available transactions\" />\r\n                        </IonCol>\r\n                      </IonRow>\r\n                    }\r\n\r\n                  </IonGrid>\r\n\r\n                </IonCardContent>\r\n\r\n\r\n                </IonCard>\r\n\r\n            </Fragment> : false\r\n          }\r\n\r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle>\r\n                Report fraud\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                It’s important to report suspected fraud as soon as possible to limit the unauthorised transactions and to minimise the impact on both you and your credit record. \r\n\r\n              </IonItem>\r\n              <IonItem>\r\n                Whether you’ve been the victim of fraud or are looking to learn how to protect yourself, this page outlines key information you should know and what we do to keep you safe and secure online.\r\n\r\n              </IonItem>\r\n              \r\n              \r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle>\r\n                Protect yourself from fraud\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                It’s important to report suspected fraud as soon as possible to limit the unauthorised transactions and to minimise the impact on both you and your credit record. \r\n\r\n\r\n\r\n              </IonItem>\r\n              <IonItem>\r\n                Whether you’ve been the victim of fraud or are looking to learn how to protect yourself, this page outlines key information you should know and what we do to keep you safe and secure online.\r\n\r\n              </IonItem>\r\n              \r\n              \r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle>\r\n                How we protect you\r\n\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonItem>\r\n                It’s important to report suspected fraud as soon as possible to limit the unauthorised transactions and to minimise the impact on both you and your credit record. \r\n\r\n\r\n\r\n              </IonItem>\r\n              <IonItem>\r\n                Whether you’ve been the victim of fraud or are looking to learn how to protect yourself, this page outlines key information you should know and what we do to keep you safe and secure online.\r\n\r\n              </IonItem>\r\n              \r\n              \r\n            </IonCardContent>\r\n          </IonCard>\r\n\r\n      </IonList>\r\n        \r\n      </IonContent>\r\n\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\r\n  tsx: state.tsx\r\n\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(SecurityCenter));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonItemDivider, IonInput } from '@ionic/react';\r\nimport { home } from 'ionicons/icons';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport PageSubTitle from '../../components/PageSubTitle';\r\nimport { updateEmail, verifySecret } from '../../store/actions/auth';\r\n\r\nconst RecoverEmail: React.FC <any> = ({ verifySecret, history, updateEmail }) => {\r\n\r\n\r\n  const [formData, setFormData] = useState<any>({\r\n    secret: '',\r\n    password: '',\r\n    email: '',\r\n    emailConfirmation: ''\r\n  })\r\n\r\n\r\n  const handleChange = (e: any) => {\r\n    return setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  \r\n  const [ step, setStep ] = useState<any>(0);\r\n\r\n    \r\n  const handleVerify = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      if (!formData?.secret || !formData?.password) {\r\n        return false;\r\n      }\r\n\r\n      verifySecret(formData, setStep);\r\n      \r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      if (!formData?.secret || !formData?.password) {\r\n        return false;\r\n      }\r\n\r\n      updateEmail(formData, history)\r\n      \r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Recover e-mail\", path: '/recover_email', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Forgot your e-mail? \r\n\r\n            </IonTitle>\r\n          </IonListHeader>\r\n          \r\n          <IonCard>\r\n            <IonCardHeader>\r\n            <IonCardTitle mode=\"md\">\r\n                Recover e-mail\r\n\r\n            </IonCardTitle>\r\n            </IonCardHeader>\r\n            {\r\n              step === 0 && <IonCardContent>\r\n                      \r\n              <IonItem>\r\n                Provide your private key and account password below.\r\n              </IonItem>\r\n              <form onSubmit={(e: any) => handleVerify(e)}>\r\n                <IonItem>\r\n                    <IonLabel>\r\n                      Private key\r\n                    </IonLabel>\r\n                    <IonInput name=\"secret\" slot=\"end\" value={ formData.secret || '' } onIonChange={(e: any)=> handleChange(e)}></IonInput>\r\n                </IonItem>\r\n                <IonItem>\r\n                    <IonLabel>\r\n                      Password\r\n                    </IonLabel>\r\n                    <IonInput name=\"password\" type=\"password\" slot=\"end\" value={ formData.password || '' } onIonChange={(e: any)=> handleChange(e)}></IonInput>\r\n                </IonItem>\r\n                <IonItem>\r\n                  <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(formData.secret) }>Verify</IonButton>\r\n                </IonItem>\r\n              </form>\r\n                \r\n                \r\n            </IonCardContent>\r\n            }\r\n            {\r\n              step === 1 && <IonCardContent>\r\n                      \r\n                <IonItem>\r\n                  What is your new email address?\r\n                </IonItem>\r\n                <form onSubmit={(e: any) => handleSubmit(e)}>\r\n                  <IonItem>\r\n                      <IonLabel>\r\n                        Email\r\n                      </IonLabel>\r\n                      <IonInput name=\"email\" slot=\"end\" value={ formData.email || '' } onIonChange={(e: any)=> handleChange(e)}></IonInput>\r\n                  </IonItem>\r\n                  <IonItem>\r\n                      <IonLabel>\r\n                        Email repeat\r\n                      </IonLabel>\r\n                      <IonInput name=\"emailConfirmation\" slot=\"end\" value={ formData.emailConfirmation || '' } onIonChange={(e: any)=> handleChange(e)}></IonInput>\r\n                  </IonItem>\r\n                  <IonItem>\r\n                    <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(formData.secret) }>Verify</IonButton>\r\n                  </IonItem>\r\n                </form>\r\n                  \r\n                  \r\n              </IonCardContent>\r\n            }\r\n            \r\n          </IonCard>\r\n          \r\n      </IonList>\r\n        \r\n      </IonContent>\r\n\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { verifySecret, updateEmail })(withRouter(RecoverEmail));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonItemDivider, IonInput, IonButtons } from '@ionic/react';\r\nimport { home } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport PageSubTitle from '../../components/PageSubTitle';\r\nimport { preRecovery, setForgotCredentials, updateCredentials } from '../../store/actions/auth';\r\n\r\nconst RecoverPassword: React.FC <any> = ({ auth, setForgotCredentials, updateCredentials, preRecovery, history }) => {\r\n\r\n  const [formDataOne, setFormDataOne] = useState<any>({\r\n    code: '',\r\n    email: ''\r\n  })\r\n\r\n  const [formDataTwo, setFormDataTwo] = useState<any>({\r\n    code: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: ''\r\n  })\r\n\r\n  const [ step, setStep ] = useState<any>(0);\r\n\r\n  useEffect(() => {\r\n\r\n    if (auth?.preLogin?.email) {\r\n      setFormDataTwo({ ...formDataTwo, email: auth?.preLogin?.email })\r\n\r\n      setForgotCredentials({ email: auth?.preLogin?.email })\r\n    }\r\n\r\n    return () => {\r\n      setFormDataTwo({\r\n        code: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirmation: ''\r\n      })\r\n    }\r\n\r\n  }, [])\r\n  \r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      if (!formDataOne?.email) {\r\n        return false;\r\n      }\r\n\r\n      setForgotCredentials({ email: formDataOne?.email })\r\n\r\n      \r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n  \r\n  const handleVerify = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      if (!formDataTwo?.email || !formDataTwo?.code) {\r\n        return false;\r\n      }\r\n\r\n      preRecovery(formDataTwo, setStep);\r\n\r\n      \r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n  \r\n  const handleUpdate = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      \r\n      if (!formDataTwo?.email || !formDataTwo?.code || !formDataTwo?.password || !formDataTwo?.passwordConfirmation) {\r\n        return false;\r\n      }\r\n\r\n      updateCredentials(formDataTwo, history)\r\n      \r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  const handleChangeOne = (e: any) => {\r\n    return setFormDataOne({...formDataOne, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const handleChangeTwo = (e: any) => {\r\n    return setFormDataTwo({...formDataTwo, [e.target.name]: e.target.value})\r\n  }\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Recover password\", path: '/recover_password', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitle={subTitles} />\r\n        \r\n      <IonList>\r\n          \r\n          <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n              Forgot your password? \r\n\r\n            </IonTitle>\r\n          </IonListHeader>\r\n          \r\n          {\r\n            step === 0 && <Fragment>\r\n\r\n              {\r\n                auth?.preLogin?.email ? false : <Fragment>\r\n\r\n                  <IonCard>\r\n                    <IonCardHeader>\r\n                      <IonCardTitle mode=\"md\">\r\n                        Recover password\r\n\r\n                      </IonCardTitle>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                      \r\n                        <IonItem>\r\n                          We will send a recovery code to the email provided it belongs to an account. Type the code in the next step to update your password.\r\n                        </IonItem>\r\n                        <form onSubmit={(e: any) => handleSubmit(e)}>\r\n                          <IonItem>\r\n                              <IonLabel>\r\n                                Email\r\n                              </IonLabel>\r\n                              <IonInput name=\"email\" slot=\"end\" value={ formDataOne.email || '' } onIonChange={(e: any)=> handleChangeOne(e)}></IonInput>\r\n                          </IonItem>\r\n                          <IonItem>\r\n                            <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(formDataOne.email) }>Send</IonButton>\r\n                          </IonItem>\r\n                        </form>\r\n                        \r\n                        \r\n                    </IonCardContent>\r\n                  </IonCard>\r\n\r\n\r\n                </Fragment>\r\n              }\r\n              \r\n              {/* <IonAccordionGroup>\r\n                <IonAccordion value=\"Verify the code\">\r\n                  <IonItem slot=\"header\">\r\n\r\n                  </IonItem>\r\n                </IonAccordion>\r\n              </IonAccordionGroup> */}\r\n\r\n              <IonCard>\r\n                <IonCardHeader>\r\n                  <IonCardTitle mode=\"md\">\r\n                    Verify the code\r\n                  </IonCardTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <form onSubmit={(e: any) => handleVerify(e)}>\r\n                      <IonItem>\r\n                          <IonLabel>\r\n                            Email\r\n                          </IonLabel>\r\n                          <IonInput name=\"email\" value={ formDataTwo.email || '' } onIonChange={(e: any)=> handleChangeTwo(e)} slot=\"end\"></IonInput>\r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonLabel>\r\n                          Code\r\n                        </IonLabel>\r\n                        <IonInput name=\"code\" value={ formDataTwo.code || '' } onIonChange={(e: any)=> handleChangeTwo(e)} slot=\"end\"></IonInput>\r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(formDataTwo.code && formDataTwo.email) }>\r\n                          Submit\r\n                        </IonButton>\r\n                      </IonItem>\r\n                    </form>\r\n                </IonCardContent>\r\n                \r\n              </IonCard>\r\n\r\n            </Fragment>\r\n          }\r\n\r\n          {\r\n            step === 1 && <Fragment>\r\n\r\n              <IonCard>\r\n                \r\n                <IonCardContent>\r\n                <form onSubmit={(e: any) => handleUpdate(e)}>\r\n                  <IonItem>\r\n                    <IonLabel>\r\n                      New password\r\n                    </IonLabel>\r\n                    <IonInput value={ formDataTwo.password || '' } name=\"password\" slot=\"end\" onIonChange={(e: any)=> handleChangeTwo(e)}></IonInput>\r\n                  </IonItem>\r\n                  <IonItem>\r\n                    <IonLabel>\r\n                      Confirm password\r\n                    </IonLabel>\r\n                    <IonInput value={ formDataTwo.passwordConfirmation || '' } name=\"passwordConfirmation\" slot=\"end\" onIonChange={(e: any)=> handleChangeTwo(e)}></IonInput>\r\n                  </IonItem>\r\n                  <IonItem>\r\n                    <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(formDataTwo.email && formDataTwo.password && formDataTwo.passwordConfirmation) }>\r\n                      Submit\r\n                    </IonButton>\r\n                  </IonItem>\r\n                </form>\r\n                </IonCardContent>\r\n                \r\n              </IonCard>\r\n\r\n            </Fragment>\r\n          }\r\n          \r\n\r\n          \r\n          \r\n      </IonList>\r\n        \r\n      </IonContent>\r\n\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { setForgotCredentials, updateCredentials, preRecovery })(withRouter(RecoverPassword));\r\n","\r\nimport { IonAvatar, IonBadge, IonIcon, IonItem, IonText } from '@ionic/react';\r\nimport { addCircleOutline, addOutline, businessOutline, people, peopleOutline, trendingDown, trendingUp } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst MyTsxListElement: React.FC<any> = ({ tsx, auth, history }) => {\r\n\r\n  const [isUp, setIsUp] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    if (tsx?.from_id === auth?.user?.user_id) {\r\n      setIsUp(false)\r\n    } else {\r\n      setIsUp(true)\r\n    }\r\n  }, [auth.user])\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        tsx.to_project_id !== null ? <Fragment>\r\n          <IonItem style={{ position: 'relative' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            <IonText style={{ position: 'absolute', top: '-3.5px', right: 0, fontSize: '13px' }}>\r\n              {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n            </IonText>\r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n            <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"large\" color=\"secondary\"></IonIcon>\r\n            </IonAvatar>\r\n            <IonText style={{ textAlign: 'left' }}>\r\n              {tsx.projectname}\r\n            </IonText>\r\n            <IonBadge slot=\"end\" >{tsx.amount}</IonBadge>\r\n          </IonItem>\r\n        </Fragment> : <Fragment>\r\n\r\n          <IonItem style={{ position: 'relative' }} onClick={()=> history.push(`/transactions/${tsx.tsx_id}`)}>\r\n            <IonText style={{ position: 'absolute', top: '-3.5px', right: 0, fontSize: '13px' }}>\r\n              {moment(tsx.created_on).format('DD-MM-YYYY')}\r\n            </IonText>\r\n            <IonAvatar slot=\"start\" style={{ position: 'relative' }}>\r\n            <IonIcon icon={tsx.to_project_id !== null ? businessOutline : people} size=\"large\" color=\"secondary\"></IonIcon>\r\n            </IonAvatar>\r\n            <IonText style={{ textAlign: 'left' }}>\r\n              {tsx.name} \r\n              \r\n              \r\n            </IonText>\r\n            <IonBadge slot=\"end\" >{tsx.amount}</IonBadge>\r\n          </IonItem>\r\n\r\n        </Fragment>\r\n      }\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(MyTsxListElement));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { checkmark, home, information, informationCircleOutline } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport GlobalTsxListElement from '../components/tsx/GlobalTsxListElement';\r\nimport getMonthlyArry from '../utils/getMonthlyArry';\r\n\r\nconst Transactions: React.FC<any> = ({ tsx }) => {\r\n\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Global transactions\", path: '/transactions', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }} className=\"no-padding\">\r\n                Global transactions\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <IonCard>\r\n            <IonCardContent>\r\n              <IonList>\r\n                {\r\n                  tsx.loading ? <Loader /> : tsx?.tsxs?.length > 0 ? Object.values(getMonthlyArry(tsx?.tsxs, 'DD-MM-YYYY')).map((elem: any, index: number) => <Fragment key={index}><IonList className=\"no-padding\"><IonListHeader className=\"no-padding ion-items-center\">{moment(elem[0].created_on).format('DD-MM-YYYY') === moment().format('DD-MM-YYYY') ? \"Today\" : moment(elem[0].created_on).format('DD-MM-YYYY')}</IonListHeader>{elem.map((element: any, index: any) => <GlobalTsxListElement key={element?.tsx_id || index} tsx={element} index={index} />)}</IonList></Fragment>) : \r\n                    <NotFound message=\"No available transactions.\" />\r\n                }\r\n              </IonList>\r\n            </IonCardContent>\r\n        </IonCard>\r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, { })(withRouter(Transactions));\r\n","\r\nimport { IonCard, IonCardContent, IonCardHeader, IonItem, IonList, IonTitle } from '@ionic/react';\r\n\r\n\r\nconst PlatformOverwiev: React.FC<any> = ({ }) => {\r\n\r\n\r\n  return (\r\n    <IonCard>\r\n        <IonCardHeader>\r\n            \r\n        <IonTitle style={{ textAlign: 'center' }}>\r\n            Platform overview\r\n\r\n        </IonTitle>\r\n\r\n        </IonCardHeader>\r\n        <IonCardContent>\r\n            <IonList>\r\n                <IonItem>\r\n                    Total Supply:\r\n                </IonItem>\r\n                <IonItem>\r\n                    Investors:\r\n                </IonItem>\r\n                <IonItem>\r\n                    Transactions:\r\n                </IonItem>\r\n\r\n\r\n            </IonList>\r\n        </IonCardContent>\r\n    </IonCard>\r\n  );\r\n};\r\n\r\nexport default PlatformOverwiev;\r\n\r\n\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { checkmark, home } from 'ionicons/icons';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport PlatformOverwiev from '../components/PlatformOverwiev';\r\n\r\nconst Statistics: React.FC = () => {\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Statistics\", path: '/statistics', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Statistics\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <PlatformOverwiev />\r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","export const Tsx_Create_Success = 'Tsx_Created_Success';\r\nexport const Invest_Create_Success = 'Invest_Create_Success';\r\nexport const Tsx_Create_Fail = 'Tsx_Create_Fail';\r\nexport const Invest_Create_Fail = 'Invest_Create_Fail';\r\nexport const Get_Balance_Success = 'Get_Balance_Success';\r\nexport const Get_Wallets_Success = 'Get_Wallets_Success';\r\nexport const Get_Balance_Fail = 'Get_Balance_Fail';\r\nexport const Get_Wallets_Fail = 'Get_Wallets_Fail';\r\nexport const Get_Tsxs_Success = 'Get_Tsxs_Success';\r\nexport const Get_Tsxs_Fail = 'Get_Tsxs_Fail';\r\nexport const Get_My_Tsxs_Success = 'Get_My_Tsxs_Success';\r\nexport const Get_My_Investments_Success = 'Get_My_Investments_Success';\r\nexport const Get_My_Tsxs_Fail = 'Get_My_Tsxs_Fail';\r\nexport const Get_My_Investments_Fail = 'Get_My_Investments_Fail';\r\nexport const Get_Total_Funds_Success = 'Get_Total_Funds_Success';\r\nexport const Get_Total_Funds_Fail = 'Get_Total_Funds_Fail';\r\nexport const Get_YieldPA_Success = 'Get_Total_Funds_Fail';\r\nexport const Get_YieldPA_Fail = 'Get_Total_Funds_Fail';\r\nexport const Tsx_Loading = 'Tsx_Loading';\r\nexport const Account_Loading = 'Account_Loading';\r\nexport const Get_Tsx_Success = 'Get_Tsx_Success';\r\nexport const Get_Tsx_Fail = 'Get_Tsx_Fail';\r\nexport const Update_Main_Wallet_Success = 'Update_Main_Wallet_Success';\r\nexport const Update_Main_Wallet_Fail = 'Update_Main_Wallet_Fail';","\r\n\r\nclass ValidatingMethods {\r\n\r\n\r\n    getValidTsxs = async (tsxs: any[]) => {\r\n\r\n        const dataset: any[] = await tsxs.length ? tsxs?.slice()?.sort((a: any, b: any) => a?.tsx_id - b?.tsx_id) : [];\r\n        \r\n        let arry: any[] = [];\r\n\r\n        if (dataset?.length) {\r\n            \r\n            for await ( let [i, element] of dataset?.entries() ) {\r\n\r\n                const previous_object = await dataset[i - 1]?.current_hash?.toString()\r\n                const current_object = await element?.previous_hash?.toString()\r\n\r\n                const previous_saved = await arry[arry?.length - 1]?.current_hash;\r\n\r\n                if ((element.previous_hash === previous_saved) || ((element?.previous_hash !== element?.current_hash) && ( i ? current_object === previous_object : true ))) {\r\n\r\n                    \r\n                    arry = [...arry, element]\r\n\r\n                }\r\n\r\n            }\r\n            \r\n            return arry?.slice()?.sort((a: any, b: any) => b?.tsx_id - a?.tsx_id); // dataset?.filter((element: any, index: number) => (element.to_project_id !== undefined) && (element.previous_hash !== element.current_hash) && ( index ? element?.previous_hash?.toString() === dataset?.[index - 1]?.current_hash?.toString() : true ))\r\n\r\n        } else {\r\n\r\n            return [];\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    \r\n}\r\nexport default ValidatingMethods;","import { Dispatch } from 'redux';\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"../alert\";\r\nimport { Tsx_Create_Success, Invest_Create_Success, Tsx_Create_Fail, Invest_Create_Fail, Get_Balance_Success, Get_Balance_Fail, Get_Tsxs_Success, Get_Tsxs_Fail, Get_My_Tsxs_Success, Get_Total_Funds_Success, Get_YieldPA_Success, Get_Total_Funds_Fail, Get_YieldPA_Fail, Get_My_Tsxs_Fail, Tsx_Loading, Get_My_Investments_Fail, Get_Tsx_Success, Get_Tsx_Fail, Get_Wallets_Fail, Get_Wallets_Success, Update_Main_Wallet_Success, Update_Main_Wallet_Fail, Account_Loading } from './types';\r\nimport { Loading_Auth, User_Update, User_Update_Fail } from '../auth/types';\r\n\r\nimport ValidatingMethods from '../../../utils/ValidatingMethods';\r\nimport { URL } from '../../../utils/constants';\r\n\r\nconst validatingMethods = new ValidatingMethods;\r\n\r\nexport const newTsx = (formData: any, history: any, present: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Tsx_Loading });\r\n\r\n        const res: any = await axios.post(URL + '/api/tsx', formData);\r\n        console.log(res.data)\r\n        dispatch({ type: Tsx_Create_Success, payload: res.data })\r\n        \r\n        dispatch(setAlert(res?.data?.message, 'success'))\r\n\r\n        history.push('/')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Tsx_Create_Fail });\r\n        dispatch(setAlert(err.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const newInvest = (id: number, formData: any, history: any, present: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Tsx_Loading });\r\n\r\n        const res: any = await axios.post(URL + `/api/projects/${id}`, formData);\r\n        console.log(res.data)\r\n        dispatch({ type: Tsx_Create_Success, payload: res.data })\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        history.push('/')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Invest_Create_Fail });\r\n        //dispatch(setAlert(err.response.data.message, 'danger'))\r\n        \r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\nexport const getTsx = (id: number) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        await dispatch({ type: Tsx_Loading });\r\n\r\n        const res: any = await axios.get(URL + `/api/tsx/${id}`);\r\n        \r\n\r\n        await dispatch({ type: Get_Tsx_Success, payload: res?.data?.tsx })\r\n        \r\n        //dispatch(setAlert(res.data.message, 'success'))\r\n        return res?.data?.tsx;\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Get_Tsx_Fail });\r\n\r\n        //dispatch(setAlert(err.message, 'danger'))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateMainWallet = (e: any) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        await dispatch({ type: Loading_Auth });\r\n\r\n        const res: any = await axios.put(URL + '/api/auth/main_wallet', { main_wallet: e.target.value })\r\n        \r\n\r\n        await dispatch({ type: User_Update, payload: res?.data })\r\n        \r\n        //dispatch(setAlert(res.data.message, 'success'))\r\n        return e.target.value\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: User_Update_Fail });\r\n\r\n        //dispatch(setAlert(err.message, 'danger'))\r\n\r\n    }\r\n}\r\n\r\nexport const getBalance = (user: any = null) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Tsx_Loading });\r\n        dispatch({ type: Account_Loading });\r\n        \r\n        \r\n        const res: any = await axios.get(URL + '/api/tsx');\r\n        \r\n        let balance = 0;\r\n\r\n        let wallets: any[] = user?.wallets?.length ? user?.wallets?.map((element: any) => ({ balance: 0, currency: element, out: 0, in: 0 })) : []\r\n\r\n        const isMatch = wallets.length ? await wallets?.filter((element: any) => element.currency === user.main_wallet)[0] : null;\r\n\r\n        if (!isMatch && user?.main_wallet) {\r\n            \r\n            wallets.unshift({ balance: 0, currency: user?.main_wallet, out: 0, in: 0 })\r\n\r\n        } else if (isMatch && user?.main_wallet) {\r\n            wallets = wallets.reduce((acc: any, element: any) => {\r\n                if (element.currency === user.main_wallet) {\r\n                  return [element, ...acc];\r\n                }\r\n                return [...acc, element];\r\n              }, []);\r\n        }\r\n\r\n        const tsxs: any[] = await validatingMethods.getValidTsxs(res.data || [])\r\n        \r\n        const myTransactions = user ? tsxs.filter((element: any) => (element?.from_id?.toString() === user?.user_id?.toString()) || (element?.to_user_id?.toString() === user?.user_id?.toString())) : []\r\n        let myTotalFunds = 0\r\n        let myYieldPA = 0\r\n        \r\n        console.log(tsxs)\r\n            \r\n        for (const transaction of tsxs) {\r\n            \r\n            if (user && transaction?.from_id?.toString() === user?.user_id?.toString()) {\r\n                //{...element, balance: (element?.balance || 0) - transaction.amount, currency: transaction.currency, out: transaction.amount}\r\n                balance -= transaction.amount;\r\n                myTotalFunds += transaction.amount;\r\n                wallets = (!!wallets.length ? wallets.map((element: any) => element?.currency?.toString() === transaction?.currency?.toString() ? {...element, balance: element?.balance - transaction.amount, currency: transaction.currency, out: element.out + transaction.amount, in: (element.in || 0) } : element ) : [...wallets, { balance: 0 - transaction.amount, currency: transaction.currency, out: transaction.amount, in: 0}])\r\n\r\n            }\r\n            if (user && transaction?.to_user_id && transaction?.to_user_id?.toString() === user?.user_id?.toString()) {\r\n                \r\n                balance += transaction.amount;\r\n                myYieldPA += transaction.amount;\r\n                wallets = !!wallets.length ? wallets.map((element: any) => element?.currency?.toString() === transaction?.currency?.toString() ? {...element, balance: element?.balance + transaction.amount, in: element.in + transaction.amount, currency: transaction.currency, out: (element.out || 0) } : element ) : [...wallets, { balance: transaction.amount, currency: transaction.currency, out: 0, in: transaction.amount}]\r\n\r\n            }\r\n            \r\n        }\r\n        \r\n        dispatch({ type: Get_Balance_Success, payload: balance || 0 })\r\n        dispatch({ type: Get_Wallets_Success, payload: wallets || [] })\r\n        dispatch({ type: Get_Tsxs_Success, payload: tsxs || [] })\r\n        dispatch({ type: Get_My_Tsxs_Success, payload: myTransactions || [] })\r\n        dispatch({ type: Get_Total_Funds_Success, payload: myTotalFunds || 0})\r\n        dispatch({ type: Get_YieldPA_Success, payload: myYieldPA || 0 })\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Get_Balance_Fail });\r\n        dispatch({ type: Get_Wallets_Fail });\r\n        dispatch({ type: Get_Tsxs_Fail });\r\n        dispatch({ type: Get_My_Tsxs_Fail });\r\n        dispatch({ type: Get_Total_Funds_Fail });\r\n        dispatch({ type: Get_YieldPA_Fail });\r\n        dispatch({ type: Get_My_Investments_Fail });\r\n\r\n        dispatch(setAlert(err.message, 'danger'))\r\n\r\n    }\r\n}\r\nexport const clearTsx = () => async(dispatch: Dispatch<any>) => {\r\n    await dispatch({ type: Tsx_Loading });\r\n    await dispatch({ type: Get_Tsx_Fail });\r\n\r\n}\r\nexport const clearTsxs = () => async(dispatch: Dispatch<any>) => {\r\n    await dispatch({ type: Tsx_Loading });\r\n    await dispatch({ type: Get_Tsxs_Fail });\r\n    await dispatch({ type: Get_My_Tsxs_Fail });\r\n\r\n}","export const Get_Projects_Success = 'Get_Projects_Success';\r\nexport const Get_Open_Projects_Success = 'Get_Open_Projects_Success';\r\nexport const Get_Closed_Projects_Success = 'Get_Closed_Projects_Success';\r\nexport const Project_Create_Success = 'Project_Create_Success';\r\nexport const Get_Under_Consideration_Projects_Success = 'Get_Under_Consideration_Projects_Success';\r\nexport const Get_Project_Success = 'Get_Project_Success';\r\nexport const Project_Update_Success = 'Project_Update_Success';\r\nexport const Get_Projects_Fail = 'Get_Projects_Fail';\r\nexport const Get_Open_Projects_Fail = 'Get_Open_Projects_Fail';\r\nexport const Get_Closed_Projects_Fail = 'Get_Closed_Projects_Fail';\r\nexport const Project_Create_Fail = 'Project_Create_Fail';\r\nexport const Get_Under_Consideration_Projects_Fail = 'Get_Under_Consideration_Projects_Fail';\r\nexport const Get_Project_Fail = 'Get_Project_Fail';\r\nexport const Project_Update_Fail = 'Project_Update_Fail';\r\nexport const Project_Delete_Success = 'Project_Delete_Success';\r\nexport const Project_Delete_Fail = 'Project_Delete_Fail';\r\nexport const Project_Loading = 'Project_Loading';","import { Dispatch } from 'redux';\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"../alert\";\r\nimport { Project_Create_Success, Project_Create_Fail, Get_Projects_Success, Get_Open_Projects_Success, Get_Under_Consideration_Projects_Success, Get_Closed_Projects_Success, Get_Project_Success, Get_Project_Fail, Get_Projects_Fail, Get_Open_Projects_Fail, Get_Under_Consideration_Projects_Fail, Get_Closed_Projects_Fail, Project_Loading, Project_Update_Success, Project_Update_Fail, Project_Delete_Success, Project_Delete_Fail } from './types';\r\nimport { Account_Loading, Get_My_Investments_Fail, Get_My_Investments_Success } from '../tsx/types';\r\nimport { URL } from '../../../utils/constants';\r\nimport ValidatingMethods from '../../../utils/ValidatingMethods';\r\n\r\nconst validatingMethods = new ValidatingMethods;\r\n\r\nexport const newProject = (formData: any, history: any, present: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Project_Loading });\r\n\r\n        const res: any = await axios.post(URL + '/api/projects', formData);\r\n        \r\n        dispatch({ type: Project_Create_Success, payload: res.data })\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        history.push(`/projects/${res?.data?.project?.project_id}`);\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Project_Create_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\nexport const updateProject = (formData: any, present: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Project_Loading });\r\n\r\n        const res: any = await axios.put(URL + `/api/projects/${formData.project_id}`, formData);\r\n        \r\n        dispatch({ type: Project_Update_Success, payload: res.data.project })\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Project_Update_Fail });\r\n        dispatch(setAlert(err.response.data.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteProject = (id: any, present: any, history: any) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Project_Loading });\r\n\r\n        const res: any = await axios.delete(URL + `/api/projects/${id}`);\r\n        \r\n        dispatch({ type: Project_Delete_Success, payload: id })\r\n\r\n        history.push('/projects');\r\n        \r\n        dispatch(setAlert(res.data.message, 'success'))\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Project_Delete_Fail });\r\n        dispatch(setAlert(err?.response?.data?.message, 'danger'))\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Error message',\r\n            message: err?.response?.data?.message || err?.message,\r\n            buttons: [\r\n              { text: 'CLOSE', handler: () => console.log('ok pressed') },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport const getProjects = (user: any = null) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch({ type: Project_Loading });\r\n        \r\n        const res: any = await axios.get(URL + '/api/projects');\r\n        const resTsx: any = await axios.get(URL + '/api/tsx');\r\n        \r\n        let projects = await res.data.projects.slice().map((element: any) => ({...element, listofinvestors: []}))\r\n        \r\n        let tsxs: any[] = await validatingMethods.getValidTsxs(resTsx?.data || []);\r\n        \r\n        const project_tsxs = await tsxs.filter((element: any) => ((element?.to_project_id !== undefined) && (element?.to_project_id !== null)));\r\n        \r\n        //let tsxs = resTsx.data.filter((element: any) => element.to_project_id !== undefined)\r\n        \r\n        for (const transaction of project_tsxs) {\r\n            \r\n            projects = await projects.map((element: any) => element.project_id === transaction.to_project_id ? {...element, volumeinvested: element.volumeinvested + transaction.amount, listofinvestors: [...element.listofinvestors, { user_id: transaction?.from_id, amount: transaction?.amount }] } : element)\r\n            \r\n        }\r\n        console.log(projects)\r\n        const openProjects = await projects.filter((element: any) => element.status.toString() === \"OPEN\")\r\n        const underconsideration = await projects.filter((element: any) => element.status?.toString() === \"UNDER_CONSIDERATION\")\r\n        const closedProjects = await projects.filter((element: any) => (element.status !== \"OPEN\" && element.status !== \"UNDER_CONSIDERATION\"))\r\n        \r\n        const myInvestments = user ? await projects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem?.user_id === user?.user_id)[0]) : [];\r\n        \r\n        dispatch({ type: Get_Projects_Success, payload: projects })\r\n        dispatch({ type: Get_Open_Projects_Success, payload: openProjects })\r\n        dispatch({ type: Get_Under_Consideration_Projects_Success, payload: underconsideration })\r\n        dispatch({ type: Get_Closed_Projects_Success, payload: closedProjects })\r\n        dispatch({ type: Get_My_Investments_Success, payload: myInvestments || [] })\r\n\r\n        dispatch(setAlert(res.data.message, 'success'))\r\n\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Get_Projects_Fail });\r\n        dispatch({ type: Get_Open_Projects_Fail });\r\n        dispatch({ type: Get_Closed_Projects_Fail });\r\n        dispatch({ type: Get_My_Investments_Fail });\r\n\r\n        dispatch(setAlert(err.message, 'danger'))\r\n\r\n    }\r\n}\r\n\r\nexport const getProject = (id: number) => async(dispatch: Dispatch<any>) => {\r\n    try {\r\n        await dispatch({ type: Project_Loading });\r\n\r\n        const res: any = await axios.get(URL + `/api/projects/${id}`);\r\n        const resTsx: any = await axios.get(URL + '/api/tsx');\r\n\r\n        let tsxs = await validatingMethods.getValidTsxs(resTsx.data || []);\r\n\r\n        const project_tsxs = await tsxs.filter((element: any) => ((element?.to_project_id !== undefined) && (element?.to_project_id !== null)));\r\n\r\n\r\n        const investedValues: any = await project_tsxs?.filter((element: any) => (element?.to_project_id?.toString() === id?.toString()) )?.map((element: any)=> element?.amount || 0)\r\n        \r\n        const volumeinvested: number = investedValues.length ? investedValues?.reduce((a: number, b: number) => a + b) : 0\r\n        \r\n        const projectData = {...res?.data?.project, volumeinvested }\r\n        \r\n        //console.log(projectData)\r\n        await dispatch({ type: Get_Project_Success, payload: projectData })\r\n        \r\n        //await dispatch(setAlert(res.data.message, 'success'))\r\n        return projectData\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: Get_Project_Fail });\r\n\r\n        dispatch(setAlert(err.message, 'danger'))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const clearProject = () => async(dispatch: Dispatch<any>) => {\r\n    await dispatch({ type: Project_Loading });\r\n    dispatch({ type: Get_Project_Fail });\r\n    \r\n    return { success: true }\r\n}\r\nexport const clearProjects = () => async(dispatch: Dispatch<any>) => {\r\n    await dispatch({ type: Project_Loading });\r\n    dispatch({ type: Get_Projects_Fail });\r\n    dispatch({ type: Get_My_Investments_Fail });\r\n    dispatch({ type: Get_Under_Consideration_Projects_Fail });\r\n    dispatch({ type: Get_Open_Projects_Fail });\r\n    dispatch({ type: Get_Closed_Projects_Fail });\r\n\r\n    return { success: true }\r\n}","\r\nimport { IonContent, IonHeader, IonItem, IonMenu, IonList, IonTitle, IonToolbar, IonFooter, IonText } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { logout } from '../store/actions/auth';\r\nimport Approval from './Approval';\r\n\r\n\r\nconst Menu: React.FC<any> = ({ history, logout, auth, location }) => {\r\n\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <IonMenu side=\"start\" menuId=\"first\" contentId=\"output\">\r\n        <IonHeader mode=\"md\">\r\n          <IonToolbar color=\"primary\" mode=\"md\">\r\n              <IonTitle>NiVest Menu</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n          <IonList>\r\n            {\r\n              auth.isAuthenticated ? <Fragment>\r\n                <IonItem onClick={()=> history.push('/')}>\r\n                  <IonText color={path === '/' ? 'success' : 'primary'}>\r\n                    Overview\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/wallets')}>\r\n                  <IonText color={path === '/wallets' ? 'success' : ''}>\r\n                    My wallets\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/projects')}>\r\n                  <IonText color={path === '/projects' ? 'success' : ''}>\r\n                    Projects\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/transactions')}>\r\n                  <IonText color={path === '/transactions' ? 'success' : ''}>\r\n                    Transactions\r\n                  </IonText>\r\n                </IonItem>\r\n                {/* <IonItem onClick={()=> history.push('/currency_exchange')}>Currency exchange</IonItem> */}\r\n                <IonItem onClick={()=> history.push('/security_center')}>\r\n                  <IonText color={path === '/security_center' ? 'success' : ''}>\r\n                    Security Center\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/settings')}>\r\n                  \r\n                  {\r\n                    (!auth?.user?.wallets?.length && auth?.user?.approved) ? \r\n                      <IonText color={path === '/settings' ? 'success' : 'warning'}>\r\n                        Settings (create a new wallet)\r\n                      </IonText> :\r\n                      <IonText color={path === '/settings' ? 'success' : ''}>\r\n                        Settings\r\n                      </IonText>\r\n                  }\r\n                  \r\n                </IonItem>\r\n                <IonItem onClick={()=> logout(history)}>\r\n                  <IonText>\r\n                    Logout\r\n                  </IonText>\r\n                </IonItem>\r\n                \r\n                {\r\n                  !auth?.user?.approved && <Approval />\r\n                }\r\n              </Fragment> : <Fragment>\r\n                <IonItem onClick={()=> history.push('/')}>\r\n                  <IonText color={path === '/home' ? 'success' : ''}>\r\n                    Dashboard\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/logon')}>\r\n                  <IonText color={path === '/logon' ? 'success' : 'primary'}>\r\n                    Log on\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/register')}>\r\n                  <IonText color={path === '/register' ? 'success' : ''}>\r\n                    Register\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/security_center')}>\r\n                  <IonText color={path === '/security_center' ? 'success' : ''}>\r\n                    Security Center\r\n                  </IonText>\r\n                </IonItem>\r\n                <IonItem onClick={()=> history.push('/projects')}>\r\n                  <IonText color={path === '/projects' ? 'success' : ''}>\r\n                    Project Opportunities\r\n                  </IonText>\r\n                </IonItem>\r\n              </Fragment>\r\n            }\r\n              \r\n          </IonList>\r\n        </IonContent>\r\n\r\n        <IonFooter className=\"ion-items-center\">\r\n          <IonItem onClick={()=> history.push('/terms_and_conditions')}>\r\n            <IonText color=\"secondary\">\r\n              Terms {\"&\"} Conditions\r\n            </IonText>\r\n          </IonItem>\r\n        </IonFooter>\r\n  </IonMenu>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { logout })(withRouter(Menu));\r\n","\r\nimport { IonHeader, IonToolbar, IonTitle, IonIcon, IonItem, IonFooter } from '@ionic/react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\n\r\nconst FooterLoggedOut: React.FC<RouteComponentProps> = ({ history }) => {\r\n  return (\r\n      <IonFooter style={{ postion: 'static'}}>\r\n        <IonItem className=\"ion-items-center inner-items-active\">\r\n          <span onClick={() => history.push(\"/\")}>NiVest</span>\r\n          \r\n        </IonItem>\r\n      </IonFooter>\r\n  );\r\n};\r\n\r\nexport default withRouter(FooterLoggedOut);\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonText } from '@ionic/react';\r\nimport { alert, alertCircleOutline, home, informationCircleOutline } from 'ionicons/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport Balance from '../components/Balance';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport FooterLoggedOut from '../components/footer/FooterLoggedOut';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { logout } from '../store/actions/auth';\r\n\r\nconst PageNotFound: React.FC<RouteComponentProps | any> = ({ history, logout, isAuthenticated }) => {\r\n\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"404 page not found\", path: '/', icon: '', \r\n    }\r\n  ]\r\n\r\n  return (\r\n        <IonPage>\r\n            <PageHeader />\r\n            \r\n\r\n            <IonContent fullscreen>\r\n\r\n            <PageSubTitle subTitles={subTitles} />\r\n\r\n\r\n            <IonItem>\r\n                \r\n                <IonTitle className=\"ion-text-center\">\r\n                    <IonIcon size=\"large\" color=\"secondary\" icon={alertCircleOutline}></IonIcon>\r\n                </IonTitle>\r\n            </IonItem>\r\n            <IonItem>\r\n                \r\n                <IonTitle className=\"ion-text-center\">\r\n                    Page not found\r\n                </IonTitle>\r\n            </IonItem>\r\n            \r\n            <IonItem>\r\n                <div className=\"ion-items-center\">\r\n                <IonButton onClick={() => history.push('/')}>Go to dashboard</IonButton>\r\n                </div>\r\n            </IonItem>\r\n            </IonContent>\r\n            {\r\n                isAuthenticated ? <FooterLoggedIn /> : <FooterLoggedOut />\r\n            }\r\n\r\n        </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { logout })(withRouter(PageNotFound));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonBadge } from '@ionic/react';\r\nimport { checkmark, home, informationCircleOutline } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateTransfer from '../components/form/CreateTransfer';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport MyTsxListElement from '../components/tsx/MyTsxListElement';\r\nimport { clearTsxs, getBalance } from '../store/actions/tsx';\r\nimport getMonthlyArry from '../utils/getMonthlyArry';\r\n\r\nconst Transactions: React.FC<any> = ({ account }) => {\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n\r\n    return () => {\r\n      clearTsxs()\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"My transactions\", path: '/my_transactions', icon: '', \r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }} className=\"no-padding\">\r\n                  Recent transactions\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <IonCard>\r\n            <IonCardContent>\r\n            <IonList>\r\n            {\r\n              account?.tsxs?.length > 0 ? Object.values(getMonthlyArry(account?.tsxs, 'DD-MM-YYYY')).map((elem: any, index: number) => <Fragment key={index}><IonList className=\"no-padding\"><IonListHeader className=\"no-padding ion-items-center\">{moment(elem[0].created_on).format('DD-MM-YYYY') === moment().format('DD-MM-YYYY') ? \"Today\" : moment(elem[0].created_on).format('DD-MM-YYYY')}</IonListHeader>{elem.map((element: any, index: any) => <MyTsxListElement key={element?.tsx_id} tsx={element} index={index} />)}</IonList></Fragment> ) :\r\n              <NotFound message=\"No available transactions.\" />\r\n            }\r\n            </IonList>\r\n            </IonCardContent>\r\n        </IonCard>\r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  account: state.account\r\n})\r\nexport default connect(mapStateToProps, {  })(withRouter(Transactions));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { businessOutline, card, checkmark, home } from 'ionicons/icons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport PlatformOverwiev from '../components/PlatformOverwiev';\r\n\r\nconst Store: React.FC<any> = ({ history }) => {\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Store\", path: '/store', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Store\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n        <IonCard>\r\n          <IonCardContent>\r\n            <IonItem className=\"inner-items-active\" onClick={() => history.push('/projects')}>\r\n              <IonIcon slot=\"start\" icon={businessOutline} color=\"primary\"></IonIcon>\r\n              <IonText>Projects</IonText>\r\n            </IonItem>\r\n            <IonItem className=\"inner-items-active\" onClick={() => history.push('/transactions')}>\r\n              <IonIcon slot=\"start\" icon={card}></IonIcon>\r\n              <IonText>Transactions</IonText>\r\n            </IonItem>\r\n          </IonCardContent>\r\n        </IonCard>\r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default withRouter(Store);\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { checkmark, home } from 'ionicons/icons';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\n\r\nconst Profile: React.FC = () => {\r\n\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Profile\", path: '/profile', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Profile\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        \r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","\r\nimport { IonItem, IonText } from '@ionic/react';\r\n\r\n\r\nconst AccountRow: React.FC<any> = ({ doSearch, setDoSearch, formData, setFormData, element, index }) => {\r\n\r\n  const pickOne = () => {\r\n    \r\n    setFormData({ ...formData, to: element.public_key })\r\n    setDoSearch(false)\r\n  }\r\n\r\n  return (\r\n    <IonItem className=\"inner-text-active\" onClick={() => pickOne()}>\r\n      <IonText>\r\n        {index + 1}. {element.email} - {element.public_key || 'N/A'}\r\n      </IonText>\r\n    </IonItem>\r\n  );\r\n};\r\n\r\nexport default AccountRow;\r\n","\r\nimport { IonButton, IonInput, IonItem, IonLabel, IonList, IonSearchbar, IonText, useIonAlert, IonToolbar, IonCard, IonCardHeader, IonCardContent, IonAlert, IonVirtualScroll, IonRouterLink, IonSelect, IonSelectOption } from '@ionic/react';\r\nimport moment from 'moment';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loadUsers } from '../../store/actions/auth';\r\nimport { getTsx, newTsx } from '../../store/actions/tsx';\r\nimport AccountRow from '../lists/AccountRow';\r\nimport Loader from '../Loader';\r\nimport NotFound from '../NotFound';\r\n\r\n\r\nconst CreateTransfer: React.FC<any> = React.memo(({ newTsx, history, user, users, tsx, loadUsers, prevTsx = null }) => {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    loadUsers()\r\n    \r\n  }, [])\r\n\r\n  const [doSearch, setDoSearch] = useState(false)\r\n  \r\n  const [formData, setFormData] = useState({\r\n    tsx_id: '',\r\n    to: '',\r\n    amount: '',\r\n    accounting_date: moment().format('YYYY-MM-DD'),\r\n    public_key: '',\r\n    description: '',\r\n    currency: ''\r\n  })\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    if (prevTsx && tsx?.tsx) {\r\n\r\n      setFormData({...formData, ...prevTsx, to: prevTsx.public_key, accounting_date: moment().format('YYYY-MM-DD')})\r\n\r\n    }\r\n\r\n    return () => {\r\n      \r\n      setFormData({\r\n        tsx_id: '',\r\n        to: '',\r\n        amount: '',\r\n        accounting_date: moment().format('YYYY-MM-DD'),\r\n        public_key: '',\r\n        description: '',\r\n        currency: ''\r\n      })\r\n\r\n    }\r\n    \r\n  }, [prevTsx, tsx.loading, formData?.tsx_id])\r\n\r\n\r\n  const [present] = useIonAlert();\r\n\r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n\r\n      e.preventDefault();\r\n\r\n      await newTsx(formData, history, present)\r\n\r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (e: any) => {\r\n    return setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  if (tsx.loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e: any) => handleSubmit(e)}>\r\n        \r\n      {\r\n        doSearch ? <Fragment>\r\n          \r\n          <IonCard>\r\n            <IonCardHeader>\r\n              <IonToolbar mode=\"md\">\r\n                <IonSearchbar></IonSearchbar>\r\n              </IonToolbar>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n              <IonList>\r\n                <IonCard>\r\n                  <IonCardContent>\r\n                    \r\n                    <IonList>\r\n                      {\r\n                        users?.length ? users?.map((element: any, index: number) => <AccountRow key={index} element={element} index={index} doSearch={doSearch} setDoSearch={setDoSearch} formData={formData} setFormData={setFormData} />) : <NotFound message=\"User not found\" />\r\n                      }\r\n                    </IonList>\r\n                  </IonCardContent>\r\n                </IonCard>\r\n\r\n                <IonItem>\r\n                  <IonButton type=\"button\" slot=\"end\" onClick={()=> setDoSearch(false)}>Cancel</IonButton>\r\n                </IonItem>\r\n              </IonList>\r\n            </IonCardContent>\r\n            \r\n          </IonCard>\r\n        </Fragment> : <Fragment>\r\n\r\n\r\n            <IonItem>\r\n              <IonLabel>From</IonLabel>\r\n              <IonText slot=\"end\">{user?.accountType || \"You\"}</IonText>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>To</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"to\" value={formData.to || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Description</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"description\" value={formData.description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Amount</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"amount\" value={formData.amount || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>   \r\n            <IonItem>\r\n              <IonLabel>Currency</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"currency\" value={formData.currency || \"\"} onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>            \r\n            <IonItem>\r\n              <IonLabel>date</IonLabel>\r\n              <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"accounting_date\" value={moment(formData.accounting_date).format('YYYY-MM-DD') || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonButton slot=\"end\" type=\"submit\">Confirm</IonButton>\r\n            </IonItem>\r\n            \r\n        <IonItem>\r\n          <IonRouterLink onClick={() => setDoSearch(true)}>\r\n            Forgot the recipient account?\r\n          </IonRouterLink>\r\n        </IonItem>\r\n          \r\n        </Fragment>\r\n      }\r\n    </form>\r\n        \r\n  );\r\n});\r\nconst mapStateToProps = (state: any) => ({\r\n  users: state.users.users,\r\n  user: state.auth.user,\r\n  tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, {newTsx, loadUsers, getTsx})(withRouter(CreateTransfer));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonGrid, IonCol, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonRow } from '@ionic/react';\r\nimport { connect } from 'react-redux';\r\nimport { alert, arrowForward, businessOutline, checkmark, home, people } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateProject from '../components/form/CreateProject';\r\nimport CreateTransfer from '../components/form/CreateTransfer';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { clearProjects, getProjects } from '../store/actions/project';\r\nimport GlobalProjectListElement from '../components/project/GlobalProjectListElement';\r\nimport Approval from '../components/Approval';\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst ChooseTransaction: React.FC<any> = ({ location, project, getProjects, auth }) => {\r\n\r\n  const [ selectView, setSelectView ] = useState<any>({\r\n    investment: 0,\r\n    transfer: 0\r\n  });\r\n\r\n  const { investment, transfer } = selectView;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getProjects(auth.user)\r\n\r\n    return () => {\r\n      \r\n      setSelectView({\r\n        investment: 0,\r\n        transfer: 0\r\n      })\r\n    }\r\n    \r\n  }, [location.pathname])\r\n\r\n\r\n  const investTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Choose transaction\", path: '/new_transaction', icon: '', \r\n    \r\n      action: () => setSelectView({\r\n        investment: 0,\r\n        transfer: 0\r\n      })\r\n    },\r\n    {\r\n      text: \"Investments\", path: '/new_transaction', icon: '', \r\n    \r\n      action: () => setSelectView({\r\n        investment: 1,\r\n        transfer: 0\r\n      })\r\n    }\r\n  ]\r\n\r\n  const transferTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Choose transaction\", path: '/new_transaction', icon: '', \r\n    \r\n      action: () => setSelectView({\r\n        investment: 0,\r\n        transfer: 0\r\n      })\r\n    },\r\n    {\r\n      text: \"New transfer\", path: '/new_transaction', icon: '', \r\n    \r\n      action: () => setSelectView({\r\n        investment: 0,\r\n        transfer: 1\r\n      })\r\n    }\r\n  ]\r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Choose transaction\", path: '/new_transaction', icon: '', \r\n    \r\n      action: () => setSelectView({\r\n        investment: 0,\r\n        transfer: 0\r\n      })\r\n    }\r\n  ]\r\n  \r\n  \r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n        \r\n        \r\n\r\n        {\r\n          investment || transfer ? <Fragment>\r\n\r\n            {\r\n              !!investment &&\r\n              \r\n              <Fragment>\r\n                {\r\n                  investment === 1 && <Fragment>\r\n                    <PageSubTitle subTitles={investTitles} />\r\n\r\n                    <IonList>\r\n                      <IonListHeader>\r\n                        <IonTitle style={{ textAlign: 'center' }}>\r\n                            Currently open projects\r\n\r\n                        </IonTitle>\r\n                      </IonListHeader>\r\n                      <IonCard>\r\n                        <IonCardContent>\r\n                          {\r\n                            project.openProjects.length ? project.openProjects.map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : <NotFound message=\"No available projects.\" />\r\n                          }\r\n                        </IonCardContent>\r\n                      </IonCard>\r\n                    </IonList>\r\n\r\n                  </Fragment>\r\n                }\r\n                \r\n              </Fragment>\r\n\r\n              \r\n            }\r\n            {\r\n              !!transfer && <Fragment>\r\n                <PageSubTitle subTitles={transferTitles} />\r\n                <IonList>\r\n                  <IonListHeader>\r\n                    <IonTitle style={{ textAlign: 'center' }}>\r\n                        New transfer\r\n\r\n                    </IonTitle>\r\n                  </IonListHeader>\r\n                  <IonCard>\r\n                    <IonCardContent>\r\n                      <CreateTransfer />\r\n                    </IonCardContent>\r\n                  </IonCard>\r\n                </IonList>\r\n              </Fragment>\r\n            }\r\n            \r\n          </Fragment> : <Fragment>\r\n\r\n            <PageSubTitle subTitles={subTitles} />\r\n            <IonList>\r\n              <IonListHeader>\r\n                <IonTitle style={{ textAlign: 'center' }}>\r\n                    New transaction\r\n\r\n                </IonTitle>\r\n              </IonListHeader>\r\n              {\r\n                auth?.user?.approved ? <Fragment>\r\n                  \r\n                  \r\n                  <IonCard>\r\n                    <IonCardContent>\r\n                      <IonItem onClick={()=> setSelectView({ investment: 1 })}>\r\n\r\n                      <IonIcon icon={businessOutline} slot=\"start\" color=\"primary\"></IonIcon>\r\n                      <IonText>\r\n                        Invest\r\n                      </IonText>\r\n\r\n                      </IonItem>\r\n                      <IonItem onClick={()=> setSelectView({ transfer: 1 })}>\r\n\r\n                      <IonIcon icon={people} slot=\"start\" ></IonIcon>\r\n                      <IonText>\r\n                        Transfer to the recipient\r\n                      </IonText>\r\n\r\n                      </IonItem>\r\n                    </IonCardContent>\r\n                  </IonCard>\r\n                    \r\n                  \r\n                </Fragment> : <Fragment>\r\n                  <Approval />\r\n                </Fragment>\r\n              }\r\n              \r\n                \r\n              \r\n            </IonList>\r\n          </Fragment>\r\n        }\r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  project: state.project,\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getProjects })(withRouter(ChooseTransaction));\r\n","\r\nimport { IonButton, IonInput, IonItem, IonLabel, IonList, IonSearchbar, IonText, useIonAlert, IonToolbar, IonCard, IonCardHeader, IonCardContent, IonAlert, IonVirtualScroll, IonRouterLink, IonSelect, IonSelectOption } from '@ionic/react';\r\nimport moment from 'moment';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { clearTsx, getTsx, newInvest } from '../../store/actions/tsx';\r\nimport Loader from '../Loader';\r\n\r\n\r\nconst CreateInvestment: React.FC<any> = React.memo(({ newInvest, history, user, project, tsx, prevTsx = null, getTsx, clearTsx, match }) => {\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    project_id: '',\r\n    amount: '',\r\n    accounting_date: moment().format('YYYY-MM-DD'),\r\n    public_key: '',\r\n    description: '',\r\n    currency: '',\r\n    projectname: ''\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (prevTsx) {\r\n\r\n      setFormData({...formData, ...prevTsx, description: 'Investment', accounting_date: moment().format('YYYY-MM-DD')})\r\n\r\n    }\r\n\r\n    return () => {\r\n      \r\n      setFormData({\r\n        project_id: '',\r\n        amount: '',\r\n        accounting_date: moment().format('YYYY-MM-DD'),\r\n        public_key: '',\r\n        description: '',\r\n        currency: '',\r\n        projectname: ''\r\n      })\r\n\r\n    }\r\n\r\n  }, [prevTsx, tsx.loading, project.loading, formData?.project_id])\r\n  \r\n  const [present] = useIonAlert();\r\n\r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n\r\n      e.preventDefault();\r\n      \r\n\r\n      if (tsx?.tsx?.to_project_id) {\r\n\r\n        await newInvest(tsx.tsx.to_project_id, formData, history, present)\r\n\r\n      } else {\r\n\r\n        await newInvest(project.project.project_id, formData, history, present)\r\n\r\n      }\r\n\r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n\r\n    }\r\n\r\n  }\r\n  const handleChange = (e: any) => {\r\n    return setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  if (tsx.loading || project.loading) {\r\n    return <Loader />\r\n  }\r\n  return (\r\n    <IonItem>    \r\n        <form onSubmit={(e: any) => handleSubmit(e)}>\r\n            \r\n            <IonItem>\r\n              <IonLabel>From</IonLabel>\r\n              <IonText slot=\"end\">{user?.accountType || \"You\"}</IonText>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel slot=\"start\">Project</IonLabel>\r\n              <IonText>{formData?.projectname ? formData?.projectname || \"N/A\" : \"N/A\" }</IonText>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Description</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"description\" value={formData?.description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Amount</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"amount\" value={formData?.amount || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>   \r\n            <IonItem>\r\n              <IonLabel>Currency</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"currency\" value={formData.currency || \"\"} onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>            \r\n            <IonItem>\r\n              <IonLabel>date</IonLabel>\r\n              <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"accounting_date\" value={moment(formData.accounting_date).format('YYYY-MM-DD') || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonButton slot=\"end\" type=\"submit\">Confirm</IonButton>\r\n            </IonItem>\r\n        \r\n        </form>\r\n        \r\n        \r\n    </IonItem>\r\n  );\r\n});\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.auth.user,\r\n  project: state.project,\r\n  tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, {newInvest, getTsx, clearTsx})(withRouter(CreateInvestment));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonCardSubtitle, IonGrid, IonCol, IonRow, IonBadge, IonProgressBar, IonImg, IonInput, IonSelect, IonSelectOption, IonSlides, IonSlide, useIonAlert, IonTextarea } from '@ionic/react';\r\nimport { cardOutline, checkmark, home, informationCircleOutline, lockClosedOutline, stopwatchOutline } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Flag from 'react-world-flags';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateInvestment from '../components/form/CreateInvestment';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { clearProject, deleteProject, getProject, updateProject } from '../store/actions/project';\r\nimport { ISO_COUNTRY_CODES } from '../utils/constants';\r\n\r\nconst Project: React.FC<any> = ({ project, match, getProject, auth, updateProject, history, deleteProject, tsx }) => {\r\n    \r\n        \r\n    const [formData, setFormData] = useState<any>({\r\n        startdate: '',\r\n        closedate: '',\r\n        projectname: '',\r\n        country: '',\r\n        yieldpa: '',\r\n        volumetotal: '',\r\n        minimuminvestment: '',\r\n        description: '',\r\n        currency: '',\r\n        status: '',\r\n        typeofproperty: '',\r\n        typeofinvestment: '',\r\n        project: '',\r\n        image: '',\r\n        investors: []\r\n    });\r\n\r\n\r\n        \r\n    const [present] = useIonAlert();\r\n\r\n    const handleSubmit = async(e: any) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            await updateProject(formData, present)\r\n\r\n        } catch (err: any) {\r\n\r\n            console.log(err.message)\r\n        \r\n        }\r\n\r\n    }\r\n    const handleChange = (e: any) => {\r\n        if (e.target.name === 'images') {\r\n            return setFormData({...formData, images: [e.target.value]})\r\n        }\r\n        return setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    \r\n    const [ loadingData, setLoadingData ] = useState(false)\r\n\r\n    const [ projectData, setProjectData ] = useState<any>({\r\n        startdate: '',\r\n        closedate: '',\r\n        projectname: '',\r\n        country: '',\r\n        yieldpa: '',\r\n        volumetotal: '',\r\n        minimuminvestment: '',\r\n        description: '',\r\n        currency: '',\r\n        status: '',\r\n        typeofproperty: '',\r\n        typeofinvestment: '',\r\n        project: '',\r\n        image: '',\r\n        investors: []\r\n    })\r\n    \r\n    const [ isOpen, setIsOpen ] = useState(false)\r\n\r\n    const getData = async () => {\r\n        if (match?.params?.project_id) {\r\n            const value = await getProject(match?.params?.project_id)\r\n            setProjectData(value)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        \r\n        getData()\r\n        \r\n        /* return () => {\r\n            console.log('clear project')\r\n            clearProject()\r\n        } */\r\n    }, [match?.params?.project_id, projectData?.project_id, tsx?.tsxs?.length])\r\n    \r\n\r\n    const [selectView, setSelectView] = useState<any>({\r\n        overview: true,\r\n        investments: false,\r\n        update: false\r\n    })\r\n    \r\n    const handleDefaultSrc = (e: any) => {\r\n        e.target.src = 'https://www.investopedia.com/thmb/FKP-u7NEKNODSvAkMo-9WUz0E_c=/2121x1193/smart/filters:no_upscale()/GettyImages-1169053915-76068125fc394f9691db9edaf7c76baf.jpg'\r\n    }\r\n\r\n      \r\n    const getCountryCode = (str: string) => {\r\n\r\n        return Object.keys(ISO_COUNTRY_CODES).filter(function(key) {return ISO_COUNTRY_CODES[key]?.toLowerCase()?.includes(str?.toLowerCase())})[0];\r\n        \r\n    }\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (project?.project) {\r\n    \r\n          setFormData({...formData, ...project?.project, startdate: moment().format('YYYY-MM-DD')})\r\n    \r\n        }\r\n    \r\n        return () => {\r\n          console.log('clear project from')\r\n          setFormData({\r\n            project_id: '',\r\n            amount: '',\r\n            accounting_date: moment().format('YYYY-MM-DD'),\r\n            public_key: '',\r\n            description: '',\r\n            currency: '',\r\n            projectname: '',\r\n            investors: []\r\n          })\r\n    \r\n        }\r\n    \r\n      }, [project?.project, project?.loading, formData?.project_id])\r\n\r\n\r\n      const displayDelete = () => {\r\n\r\n        present({\r\n            cssClass: 'error-message',\r\n            header: 'Confirmation',\r\n            message: 'Are you sure to delete this project?',\r\n            buttons: [\r\n              { text: 'Confirm', handler: async() => deleteProject(formData?.project_id, present, history) },\r\n            ],\r\n            onDidDismiss: () => console.log('did dismiss')\r\n        });\r\n\r\n      }\r\n\r\n\r\n      const subTitles: any[] = [\r\n        {\r\n          text: \"Home\", path: '/', icon: home\r\n        }, \r\n        {\r\n          text: \"Project page\", path: `/projects/${projectData?.project_id}`, icon: '', \r\n        \r\n        }\r\n      ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Project\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <IonItem>\r\n            <IonGrid>\r\n                <IonRow>\r\n                    <IonCol className=\"inner-text-active\" style={ selectView?.overview ? { textAlign: 'center', fontWeight: 'bold' } : { textAlign: 'center' }} onClick={() => setSelectView({ overview: true })}>\r\n                        <IonText>Overview</IonText>\r\n\r\n                    </IonCol>\r\n                    {\r\n                        project?.loading ? false : (auth?.user?.approved && (projectData?.status !== 'UNDER_CONSIDERATION')) ? \r\n                        <IonCol className=\"inner-text-active\" color=\"gray\" style={ selectView?.investments ? { textAlign: 'center', fontWeight: 'bold' } : { textAlign: 'center' }} onClick={() => setSelectView({ investments: true })}>\r\n                            <IonText>Investments</IonText>\r\n    \r\n                        </IonCol> : false\r\n                    }\r\n                    {\r\n                        project?.loading ? false : (auth?.user?.approved && (projectData?.owner_id === auth?.user?.user_id) && (projectData?.status === 'UNDER_CONSIDERATION')) ?\r\n                        <IonCol className=\"inner-text-active\" color=\"gray\" style={ selectView?.update ? { textAlign: 'center', fontWeight: 'bold' } : { textAlign: 'center' }} onClick={() => setSelectView({ update: true })}>\r\n                            <IonText>Update</IonText>\r\n\r\n                        </IonCol> : false\r\n                    }\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonItem>\r\n        {\r\n            project?.loading ? <Loader /> : projectData ? <Fragment>\r\n                \r\n                {\r\n                    selectView?.update && <Fragment>\r\n                        \r\n                            <IonCard>\r\n                                <IonCardContent>\r\n                                    \r\n                                    <IonList>\r\n                                        <IonItem>\r\n                                        <IonLabel>Project name</IonLabel>\r\n                                        <IonInput slot=\"end\" autocomplete={\"off\"} name=\"projectname\" value={formData.projectname || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                        <IonLabel>Country</IonLabel>\r\n                                        <IonInput slot=\"end\" autocomplete={\"off\"} name=\"country\" value={formData.country || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                                        </IonItem>\r\n\r\n                                        <IonItem>\r\n                                        <IonLabel>Image</IonLabel>\r\n                                        <IonInput type=\"text\" autocomplete={\"off\"} slot=\"end\" name=\"images\" value={formData?.images ? formData?.images[0] : \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                        \r\n                                        </IonItem>\r\n\r\n                                        <IonItem>\r\n                                        <IonLabel>Type of investment</IonLabel>\r\n                                        <IonSelect slot=\"end\" value={formData.typeofinvestment || ''} name=\"typeofinvestment\" onIonChange={(e: any) => handleChange(e)}>\r\n                                            {\r\n                                                ['EQUITY'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                            }\r\n                                        </IonSelect>\r\n                                        \r\n                                        </IonItem>   \r\n                                        <IonItem>\r\n                                        <IonLabel>Type of property</IonLabel>\r\n                                        <IonSelect slot=\"end\" value={formData.typeofproperty || ''} name=\"typeofproperty\" onIonChange={(e: any) => handleChange(e)}>\r\n                                            {\r\n                                                ['RESIDENTIAL', 'RETAIL', 'OFFICE', 'LAND', 'LOGISTICS', 'INDUSTRIAL'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                            }\r\n                                            \r\n                                        </IonSelect>\r\n                                    \r\n                                        </IonItem>    \r\n                                        <IonItem>\r\n                                        <IonLabel>Type of project</IonLabel>\r\n                                        <IonSelect slot=\"end\" value={formData.project || ''} name=\"project\" onIonChange={(e: any) => handleChange(e)}>\r\n                                            {\r\n                                                ['EXISTING', 'DEVELOPMENT'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                            }\r\n                                        </IonSelect>\r\n                                        \r\n                                        </IonItem>\r\n               \r\n                                        <IonItem>\r\n                                            <IonLabel>Yield per month</IonLabel>\r\n                                            <IonInput slot=\"end\" autocomplete={\"off\"} name=\"yieldpa\" value={formData.yieldpa || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonLabel>Volume total</IonLabel>\r\n                                            <IonInput slot=\"end\" autocomplete={\"off\"} name=\"volumetotal\" value={formData.volumetotal || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonLabel>Minimum investment</IonLabel>\r\n                                            <IonInput slot=\"end\" autocomplete={\"off\"} name=\"minimuminvestment\" value={formData.minimuminvestment || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                                        </IonItem>\r\n\r\n                                        \r\n                                        <IonItem>\r\n                                            <IonLabel>Currency</IonLabel>\r\n                                            <IonSelect slot=\"end\" value={formData.currency || ''} name=\"currency\" onIonChange={(e: any) => handleChange(e)}>\r\n                                                {\r\n                                                    ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                                }\r\n                                            </IonSelect>\r\n                                        \r\n                                        </IonItem>\r\n\r\n                                        \r\n                                        \r\n                                    </IonList>\r\n                                </IonCardContent>\r\n\r\n                            </IonCard>\r\n\r\n                            <IonCard>\r\n\r\n                                <IonCardContent>\r\n                                    <IonList>\r\n\r\n                                        \r\n                                        <IonItem>\r\n                                            <IonLabel>Short Description</IonLabel>\r\n                                            \r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonTextarea name=\"description\" value={formData.description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonTextarea>\r\n                                        \r\n                                        </IonItem>\r\n\r\n                                        <IonItem>\r\n                                            <IonLabel>Long Description</IonLabel>\r\n                                            \r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonTextarea name=\"long_description\" value={formData.long_description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonTextarea>\r\n                                        \r\n                                        </IonItem>\r\n                                        \r\n                                    </IonList>\r\n                                </IonCardContent>\r\n\r\n\r\n                            </IonCard>\r\n                            {\r\n                                formData.status !== \"UNDER_CONSIDERATION\" ?\r\n                                    <IonCard>\r\n\r\n                                        <IonCardContent>\r\n                                            <IonList>\r\n\r\n                                                            \r\n                                                <IonItem>\r\n                                                    <IonLabel>Start date</IonLabel>\r\n                                                    <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"startdate\" value={formData.startdate || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                                \r\n                                                </IonItem>\r\n\r\n                                                <IonItem>\r\n                                                    <IonLabel>Close date</IonLabel>\r\n                                                    <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"closedate\" value={formData.closedate || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                                \r\n                                                </IonItem>\r\n                                                \r\n                                            </IonList>\r\n                                        </IonCardContent>\r\n\r\n\r\n                                    </IonCard> : false\r\n                            }\r\n                            \r\n                            <IonCard>\r\n\r\n                                <IonCardContent>\r\n                                    <IonList>\r\n\r\n                                                     \r\n                                    <IonItem>\r\n                                        <IonLabel>Status</IonLabel>\r\n                                        <IonSelect slot=\"end\" name=\"status\" value={formData.status || \"\"} onIonChange={(e: any) => handleChange(e)}>\r\n                                            {\r\n                                                ['UNDER_CONSIDERATION', 'OPEN'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                            }\r\n                                        </IonSelect>\r\n                                        \r\n                                        </IonItem>\r\n                                        \r\n                                    </IonList>\r\n                                </IonCardContent>\r\n\r\n\r\n                            </IonCard>\r\n                            <IonCard>\r\n                                <IonCardContent>\r\n                                    <IonList>\r\n                                    \r\n                                        <IonItem>\r\n                                            <form onSubmit={(e: any) => handleSubmit(e)} className=\"ion-items-center\">\r\n                                                <IonButton type='submit' size=\"default\" slot=\"end\" /* onClick={()=> nextSlide()} */>Save changes</IonButton>\r\n                                            </form>\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <div className=\"ion-items-center\">\r\n                                            <IonButton type='submit' color=\"danger\" size=\"default\" slot=\"end\" onClick={()=> displayDelete()}>DELETE</IonButton>\r\n                                            </div>\r\n                                        </IonItem>\r\n                                    </IonList>\r\n                                </IonCardContent>\r\n\r\n\r\n                            </IonCard>\r\n\r\n                    </Fragment>\r\n                }\r\n                {\r\n                    selectView?.overview && <Fragment>\r\n\r\n                        <IonCard style={{ position: 'relative' }}>\r\n                                \r\n\r\n                            <IonCardHeader>\r\n                                \r\n                                <IonItem>\r\n                                    \r\n                                    <IonBadge className=\"no-padding\" color=\"light\" slot=\"end\" /* style={{ position: 'absolute', top: '10px', right: '10px', zIndex: 10 }} */>\r\n                                        <Flag code={getCountryCode(projectData?.country) || \"\"} height=\"30\" />\r\n                                    </IonBadge>\r\n                                    <IonAvatar slot=\"start\">\r\n                                        {/* <IonIcon size=\"large\" color=\"secondary\" icon={project.status === \"OPEN\" ? lockOpen : lockClosed}></IonIcon> */}\r\n                                        {\r\n                                            \r\n                                            projectData.status === \"UNDER_CONSIDERATION\" ? \r\n                                            <IonIcon size=\"large\" color=\"secondary\" icon={stopwatchOutline}></IonIcon>\r\n                                            : projectData.status !== \"OPEN\" ? <IonIcon size=\"large\" color=\"medium\" icon={lockClosedOutline}></IonIcon>\r\n                                            : <IonIcon size=\"large\" color=\"primary\" icon={cardOutline}></IonIcon>\r\n                                            \r\n                                        }\r\n                                    </IonAvatar>\r\n                                \r\n                                    <IonItem lines=\"none\">\r\n                                    <IonText>{projectData.status === \"UNDER_CONSIDERATION\" ? \"COMING SOON\" : projectData.status}</IonText>\r\n                                    </IonItem>\r\n                                </IonItem>\r\n                                <IonItem>\r\n                                    \r\n                                    <IonTitle className=\"no-padding\">\r\n                                        <div className=\"ion-text-wrap\" style={{ textAlign: 'left' }}>\r\n                                            {projectData.projectname}\r\n                                        </div>\r\n                                    </IonTitle>\r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText style={{ padding: '7.5px 0' }}>\r\n                                    {projectData.description}\r\n                                </IonText>\r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Volume total\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {projectData.volumetotal} {projectData.currency}\r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Yield\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {projectData.yieldpa}%\r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Term\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {\r\n                                    projectData.term ? <Fragment>{projectData.term} days</Fragment> : 'N/A'\r\n                                    }\r\n                                    \r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Type of property\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {\r\n                                    projectData.typeofproperty\r\n                                    }\r\n                                    \r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Type of investment\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {\r\n                                    projectData.typeofinvestment\r\n                                    }\r\n                                    \r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Minimum investment\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {projectData.minimuminvestment} {projectData.currency}\r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                <IonItem>\r\n                                <IonText>\r\n                                    Number of investors\r\n                                </IonText>\r\n                                <IonText slot=\"end\">\r\n                                    {project?.project?.investors?.length || 0}\r\n                                </IonText>\r\n                                    \r\n                                </IonItem>\r\n                                \r\n                                {\r\n                                projectData.status !== \"UNDER_CONSIDERATION\" && <Fragment>\r\n                                    <IonItem style={{ position: 'relative'}}>\r\n                                        <IonBadge style={{ position: 'absolute', top: '10px', left: 0, padding: 0, fontSize: '16px', fontWeight: 'normal', opacity: '1' }} color=\"none\"><IonText color=\"dark\">Invested: {projectData.volumeinvested} {projectData.currency} ({ (projectData.volumeinvested / projectData.volumetotal * 100).toFixed(3)} %)</IonText></IonBadge>\r\n                                        <IonProgressBar style={{ position: 'absolute', bottom: '12px', left: 0, padding: 0 }} value={projectData.volumeinvested / projectData.volumetotal * 100}></IonProgressBar>\r\n                                        \r\n                                    </IonItem>\r\n                                </Fragment>\r\n                                }\r\n                                \r\n                                \r\n                            </IonCardHeader>\r\n                            <IonCardContent>\r\n\r\n\r\n                            {\r\n                                projectData.images && <IonImg src={projectData.images ? projectData.images[0] : \"\" } onIonError={(e) => handleDefaultSrc(e)} alt=\"property\" />\r\n                            }\r\n\r\n                            \r\n                            </IonCardContent>\r\n\r\n                            </IonCard>\r\n\r\n                            {\r\n                                projectData.long_description ? <Fragment>\r\n\r\n                                    <IonCard>\r\n                                    <IonCardContent>\r\n\r\n                                        <IonItem>\r\n                                            <IonTitle className=\"no-padding\">\r\n                                                <div className=\"ion-items-center\">\r\n                                                    Project summary\r\n                                                </div>\r\n                                            </IonTitle>\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonText style={{ padding: '7.5px 0' }}>\r\n                                                {projectData.long_description}\r\n                                            </IonText>\r\n                                        </IonItem>\r\n\r\n                                    </IonCardContent>\r\n\r\n                                    </IonCard>\r\n\r\n                                </Fragment> : false\r\n                            }\r\n\r\n\r\n                    </Fragment>\r\n                }\r\n                \r\n                {\r\n                    ((auth?.user?.approved) && (project?.project?.status === \"OPEN\") && (project?.project?.owner_id?.toString() !== auth?.user?.user_id?.toString())) ? <Fragment>\r\n                        <IonItem onClick={() => setIsOpen(!isOpen)}>\r\n                        <IonIcon slot=\"start\" icon={cardOutline}></IonIcon>\r\n                        <IonRouterLink>\r\n                            Invest now\r\n                        </IonRouterLink>\r\n                        </IonItem>\r\n                    </Fragment> : false\r\n                }\r\n\r\n                {\r\n                    (isOpen && auth?.user?.approved) && ((project?.project?.status === \"OPEN\") && (project?.project?.owner_id !== auth?.user?.user_id)) ? <Fragment>\r\n                        \r\n                        <CreateInvestment prevTsx={projectData} />\r\n                        \r\n                    </Fragment> : false\r\n                }\r\n                \r\n\r\n            </Fragment> : <Fragment>\r\n                <NotFound message=\"Project not found.\" />\r\n            </Fragment>\r\n        }     \r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    project: state.project,\r\n    auth: state.auth,\r\n    tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, { getProject, updateProject, deleteProject })(withRouter(Project));\r\n","\r\nimport { IonButton, IonInput, IonItem, IonLabel, IonList, IonSearchbar, IonText, useIonAlert, IonToolbar, IonCard, IonCardHeader, IonCardContent, IonAlert, IonVirtualScroll, IonRouterLink, IonSelect, IonSelectOption } from '@ionic/react';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loadUsers } from '../../store/actions/auth';\r\nimport { newProject } from '../../store/actions/project';\r\nimport { newTsx } from '../../store/actions/tsx';\r\n\r\n\r\nconst CreateProject: React.FC<any> = ({ newProject, history, user }) => {\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    startdate: '',\r\n    closedate: '',\r\n    projectname: '',\r\n    country: '',\r\n    yieldpa: '',\r\n    volumetotal: '',\r\n    minimuminvestment: '',\r\n    description: '',\r\n    currency: '',\r\n    status: '',\r\n    typeofproperty: '',\r\n    typeofinvestment: '',\r\n    project: '',\r\n    image: '',\r\n  })\r\n  \r\n  const [present] = useIonAlert();\r\n\r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      await newProject(formData, history, present)\r\n      \r\n\r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n  const handleChange = (e: any) => {\r\n    return setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n  return (\r\n    <IonItem>    \r\n        <form onSubmit={(e: any) => handleSubmit(e)}>\r\n            \r\n            <IonItem>\r\n              <IonLabel>Host</IonLabel>\r\n              <IonText slot=\"end\">{user.accountType || \"You\"}</IonText>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Project name</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"projectname\" value={formData.projectname || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Country</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"country\" value={formData.country || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Yield per month</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"yieldpa\" value={formData.yieldpa || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Volume total</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"volumetotal\" value={formData.volumetotal || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Minimum investment</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"minimuminvestment\" value={formData.minimuminvestment || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Description</IonLabel>\r\n              <IonInput slot=\"end\" autocomplete={\"off\"} name=\"description\" value={formData.description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>            \r\n            <IonItem>\r\n              <IonLabel>Image</IonLabel>\r\n              <IonInput type=\"text\" autocomplete={\"off\"} slot=\"end\" name=\"image\" value={formData.image || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Status</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"status\" onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['UNDER_CONSIDERATION', 'OPEN'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonLabel>Type of investment</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"typeofinvestment\" onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['DEBT', 'EQUITY'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>   \r\n            <IonItem>\r\n              <IonLabel>Type of property</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"typeofproperty\" onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['RESIDENTIAL', 'RETAIL', 'OFFICE', 'LAND', 'LOGISTICS', 'INDUSTRIAL'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n         \r\n            </IonItem>    \r\n            <IonItem>\r\n              <IonLabel>Type of project</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"project\" onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['EXISTING', 'DEVELOPMENT'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>   \r\n            <IonItem>\r\n              <IonLabel>Currency</IonLabel>\r\n              <IonSelect slot=\"end\" name=\"currency\" onIonChange={(e: any) => handleChange(e)}>\r\n                {\r\n                  ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                }\r\n              </IonSelect>\r\n            \r\n            </IonItem>            \r\n            <IonItem>\r\n              <IonLabel>Start date</IonLabel>\r\n              <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"startdate\" value={formData.startdate || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>            \r\n            <IonItem>\r\n              <IonLabel>Close date</IonLabel>\r\n              <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"closedate\" value={formData.closedate || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n            \r\n            </IonItem>\r\n            <IonItem>\r\n              <IonButton slot=\"end\" type=\"submit\">Confirm</IonButton>\r\n            </IonItem>\r\n            \r\n        \r\n        </form>\r\n        \r\n    </IonItem>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.auth.user\r\n})\r\nexport default connect(mapStateToProps, { newProject })(withRouter(CreateProject));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonAccordionGroup, IonAccordion } from '@ionic/react';\r\nimport { checkmark, home, informationCircleOutline } from 'ionicons/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateTransfer from '../components/form/CreateTransfer';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport MyTsxListElement from '../components/tsx/MyTsxListElement';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { clearProjects, getProjects } from '../store/actions/project';\r\nimport GlobalProjectListElement from '../components/project/GlobalProjectListElement';\r\nimport CreateProject from '../components/form/CreateProject';\r\nimport NotFound from '../components/NotFound';\r\nimport { PROJECTS_PALETTE } from '../utils/constants';\r\n\r\nconst Projects: React.FC<any> = ({ project, getProjects, location, auth }) => {\r\n\r\n    useEffect(() => {\r\n        getProjects(auth.user)\r\n\r\n        /* return () => {\r\n            \r\n            clearProjects()\r\n        } */\r\n    }, [location.pathname, auth.user])\r\n\r\n    const [ step, setStep ] = useState<any>(0);\r\n\r\n    const [ showMore, setShowMore ] = useState({\r\n        underConsideration: false,\r\n        open: true,\r\n        closed: false\r\n    })\r\n    useEffect(() => {\r\n\r\n        const value = showMore;\r\n\r\n        if (!project.underConsiderationProjects.length) {\r\n            value.underConsideration = false\r\n        }\r\n        if (!project.openProjects.length) {\r\n            value.open = false\r\n        }\r\n        if (!project.closedProjects.length) {\r\n            value.closed = false\r\n        }\r\n\r\n        setShowMore({ ...showMore, ...value })\r\n\r\n        return () => {\r\n            setShowMore({\r\n                underConsideration: false,\r\n                open: true,\r\n                closed: false\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"All project\", path: '/projects', icon: '', \r\n    \r\n      action: () => setStep(0)\r\n    }\r\n  ]\r\n    \r\n  const newOneTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"All project\", path: '/projects', icon: '', \r\n    \r\n      action: () => setStep(0)\r\n    }, \r\n    {\r\n      text: \"New project\", path: '/projects', icon: '', \r\n    \r\n      action: () => setStep(1)\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n    {\r\n        step === 0 && <Fragment>\r\n\r\n      \r\n            <PageSubTitle subTitles={subTitles} />\r\n            \r\n            <IonList>\r\n                \r\n                <IonAccordionGroup>\r\n                    <IonList>\r\n                        <IonCard>\r\n                            <IonCardContent>\r\n                                <IonAccordion>\r\n                                    <IonItem slot=\"header\">\r\n                                        <IonLabel>\r\n                                            Under consideration ({project.underConsiderationProjects.length} {project.underConsiderationProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                        </IonLabel>\r\n                                    </IonItem>\r\n                                    <IonList slot=\"content\">\r\n\r\n                                    {\r\n                                        project.underConsiderationProjects.length > 0 ? project.underConsiderationProjects.map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                        <NotFound message=\"No available projects.\" />\r\n                                    }\r\n\r\n                                    </IonList>\r\n                                </IonAccordion>\r\n                                <IonAccordion>\r\n                                    <IonItem slot=\"header\">\r\n                                        <IonLabel>\r\n                                            Open to invest ({project.openProjects.length} {project.openProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                        </IonLabel>\r\n                                    </IonItem>\r\n                                    <IonList slot=\"content\">\r\n\r\n                                    {\r\n                                        project.openProjects.length > 0 ? project.openProjects.map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                        <NotFound message=\"No available projects.\" />\r\n                                    }\r\n\r\n                                    </IonList>\r\n                                </IonAccordion>\r\n                                <IonAccordion>\r\n                                    <IonItem slot=\"header\">\r\n                                        <IonLabel>\r\n                                            Closed ({project.closedProjects.length} {project.closedProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                        </IonLabel>\r\n                                    </IonItem>\r\n                                    <IonList slot=\"content\">\r\n\r\n                                    {\r\n                                        project.closedProjects.length > 0 ? project.closedProjects.map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                        <NotFound message=\"No available projects.\" />\r\n                                    }\r\n\r\n                                    </IonList>\r\n                                </IonAccordion>\r\n                            </IonCardContent>\r\n                        </IonCard>\r\n\r\n                    </IonList>\r\n                </IonAccordionGroup>\r\n            </IonList>\r\n\r\n            </Fragment>\r\n        }\r\n        {\r\n            step === 1 ? auth?.user?.approved ? <Fragment>\r\n            <PageSubTitle subTitles={newOneTitles} />\r\n            <IonList>\r\n                <IonListHeader>\r\n                <IonTitle style={{ textAlign: 'center' }}>\r\n                    New investment project\r\n                </IonTitle>\r\n                </IonListHeader>\r\n\r\n                <CreateProject />\r\n            </IonList>\r\n            </Fragment> : false : false\r\n        }\r\n      </IonContent>\r\n\r\n      {\r\n        auth?.isAuthenticated && <FooterLoggedIn />\r\n      }\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    project: state.project,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getProjects })(withRouter(Projects));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonLoading, IonSpinner } from '@ionic/react';\r\nimport { checkmark, home } from 'ionicons/icons';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport Loader from '../components/Loader';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\n\r\nconst Loading: React.FC = () => {\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    },\r\n    {\r\n      text: \"Loading...\", path: '/', icon: ''\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage id=\"output\">\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Loading...\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <Loader />\r\n        \r\n        \r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","\r\nimport { IonAvatar, IonBadge, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonIcon, IonItem, IonItemDivider, IonLabel, IonList, IonRouterLink, IonRow, IonText, IonTitle } from '@ionic/react';\r\nimport { add, addCircleOutline, addOutline, businessOutline, cardOutline, people, trendingDown, trendingUp } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateInvestment from './form/CreateInvestment';\r\nimport CreateTransfer from './form/CreateTransfer';\r\n\r\n\r\nconst TsxDetails: React.FC<any> = ({ tsx, from, auth, access = 'guest' }) => {\r\n\r\n  const [ isOpen, setIsOpen ] = useState(false)\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        access === 'user' ? <Fragment>\r\n            <IonCard>\r\n                <IonCardHeader>\r\n                    <IonTitle className=\"no-padding\">\r\n                        Transaction\r\n                    </IonTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <IonList className=\"no-padding\">\r\n                      <IonItem className=\"no-padding\">\r\n                          <IonLabel slot=\"start\">FROM</IonLabel>\r\n                            <IonText className=\"ion-wrap-text text-to-left\">{from?.name || \"N/A\"} </IonText>\r\n                          </IonItem>\r\n                          <IonItem className=\"no-padding\">\r\n                            <IonText style={{ wordBreak: 'break-all' }}>{from?.public_key || \"N/A\"}</IonText>\r\n\r\n                          </IonItem>\r\n\r\n                          <IonItem className=\"no-padding\">\r\n                            <IonLabel slot=\"start\">TO</IonLabel>\r\n                            <IonText className=\"ion-wrap-text text-to-left\">{tsx?.name || tsx?.projectname || \"N/A\"}</IonText>\r\n                          </IonItem>\r\n                          {\r\n                            tsx?.to_user_id && <Fragment>\r\n                              <IonItem className=\"no-padding\">\r\n                                <IonText style={{ wordBreak: 'break-all' }}>{tsx?.public_key || \"N/A\"}</IonText>\r\n\r\n                              </IonItem>\r\n                            </Fragment>\r\n                          }\r\n                      \r\n                      <IonItem className=\"no-padding\">\r\n                        <IonLabel slot=\"start\">AMOUNT</IonLabel>\r\n                        <IonText className=\"ion-wrap-text\">{tsx?.amount} {tsx?.currency}</IonText>\r\n                      </IonItem>\r\n                      {\r\n                        ((auth?.user?.user_id === tsx?.from_id) || (auth?.user?.user_id === tsx?.to_user_id)) ? <Fragment>\r\n                          <IonItem className=\"no-padding\">\r\n                            <IonLabel slot=\"start\">DESCRIPTION</IonLabel>\r\n                            <IonText className=\"ion-wrap-text\"></IonText>\r\n                          </IonItem>\r\n\r\n                          <IonItem className=\"no-padding ion-wrap-text\">\r\n                            <IonText className=\"ion-wrap-text\" style={{ wordBreak: 'break-all' }}>{tsx?.description || \"N/A\"}</IonText>\r\n\r\n                          </IonItem>\r\n\r\n\r\n                        </Fragment> : false\r\n                      }\r\n                      \r\n                      \r\n                    </IonList>\r\n                </IonCardContent>\r\n            </IonCard>\r\n            <IonCard>\r\n              <IonCardHeader>\r\n                <IonTitle className=\"no-padding\">\r\n                  Protection\r\n                </IonTitle>\r\n              </IonCardHeader>\r\n              <IonCardContent>\r\n                \r\n                  <IonItem className=\"no-padding\">\r\n                    <IonLabel slot=\"start\">HASH</IonLabel>\r\n                    <IonText className=\"ion-wrap-text\"></IonText>\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding ion-wrap-text\">\r\n                    <IonText className=\"ion-wrap-text\" style={{ wordBreak: 'break-all' }}>{tsx?.current_hash || \"N/A\"}</IonText>\r\n\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding\">\r\n                    <IonLabel slot=\"start\">PREVIOUS HASH</IonLabel>\r\n                    <IonText className=\"ion-wrap-text\"></IonText>\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding\">\r\n                      <IonText className=\"ion-wrap-text\" style={{ wordBreak: 'break-all' }}>{tsx?.previous_hash || \"N/A\"}</IonText>\r\n                  \r\n                  </IonItem>\r\n              </IonCardContent>\r\n            </IonCard>\r\n            {\r\n              ((tsx?.from_id === auth?.user?.user_id) && (auth?.user?.approved)) ? <Fragment>\r\n                \r\n                <IonCard>\r\n                  <IonCardContent>\r\n                    <IonItem className=\"inner-items-active\" onClick={() => setIsOpen(!isOpen)}>\r\n                      <IonIcon slot=\"start\" icon={cardOutline}></IonIcon>\r\n                      <IonRouterLink>\r\n                        New transaction\r\n                      </IonRouterLink>\r\n                    </IonItem>\r\n                    \r\n                  </IonCardContent>\r\n                </IonCard>\r\n              </Fragment> : false\r\n            }\r\n            \r\n            {\r\n              (isOpen && auth?.user?.approved) && (tsx?.from_id === auth?.user?.user_id) ? tsx?.to_project_id ? <IonCard><IonCardContent><CreateInvestment prevTsx={tsx} user={auth?.user} /></IonCardContent></IonCard> : <IonCard><IonCardContent><CreateTransfer prevTsx={tsx} user={auth?.user} /></IonCardContent></IonCard> : false\r\n            }\r\n        </Fragment> : <Fragment>\r\n            <IonCard>\r\n                <IonCardHeader>\r\n                    <IonTitle className=\"no-padding\">\r\n                        Transaction\r\n                    </IonTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <IonList className=\"no-padding\">\r\n                      \r\n                      <IonItem className=\"no-padding\">\r\n                        <IonLabel slot=\"start\">AMOUNT</IonLabel>\r\n                        <IonText className=\"ion-wrap-text\">{tsx.amount} {tsx.currency}</IonText>\r\n                      </IonItem>\r\n                      \r\n\r\n                    </IonList>\r\n                </IonCardContent>\r\n            </IonCard>\r\n            <IonCard>\r\n              <IonCardHeader>\r\n                <IonTitle className=\"no-padding\">\r\n                  Protection\r\n                </IonTitle>\r\n              </IonCardHeader>\r\n              <IonCardContent>\r\n                \r\n                  <IonItem className=\"no-padding\">\r\n                    <IonLabel slot=\"start\">HASH</IonLabel>\r\n                    <IonText className=\"ion-wrap-text\"></IonText>\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding\">\r\n                    <IonText style={{ wordBreak: 'break-all' }}>{tsx?.current_hash || \"N/A\"}</IonText>\r\n\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding\">\r\n                    <IonLabel slot=\"start\">PREVIOUS HASH</IonLabel>\r\n                    <IonText className=\"ion-wrap-text\"></IonText>\r\n                  </IonItem>\r\n                  <IonItem className=\"no-padding\">\r\n                    <IonText style={{ wordBreak: 'break-all' }}>{tsx?.previous_hash || \"N/A\"}</IonText>\r\n\r\n                  </IonItem>\r\n              </IonCardContent>\r\n            </IonCard>\r\n        </Fragment>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(TsxDetails));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { checkmark, home, informationCircleOutline } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateInvestment from '../components/form/CreateInvestment';\r\nimport CreateTransfer from '../components/form/CreateTransfer';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport TsxDetails from '../components/TsxDetails';\r\nimport { clearTsx, getTsx } from '../store/actions/tsx';\r\n\r\nconst Tsx: React.FC<any> = ({ tsx, match, getTsx, clearTsx, auth, users }) => {\r\n    const [ loadingData, setLoadingData ] = useState(false)\r\n\r\n    const [tsxData, setTsxData] = useState<any>(null)\r\n    const [isUp, setIsUp] = useState(false);\r\n\r\n    \r\n    const [ from, setFrom ] = useState<any>(null)\r\n\r\n\r\n    const getData = async () => {\r\n\r\n        if (match.params.tsx_id) {\r\n\r\n            const value = await getTsx(match.params.tsx_id)\r\n            setTsxData(value)\r\n            \r\n            if (value?.from_id) {\r\n\r\n                const userValue: any[] = users?.users?.filter((element: any) => element?.user_id === value?.from_id) || []\r\n\r\n                setFrom(userValue[0])\r\n\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    \r\n  useEffect(() => {\r\n\r\n    if (tsx?.from_id === auth?.user?.user_id) {\r\n      setIsUp(false)\r\n    } else {\r\n      setIsUp(true)\r\n    }\r\n\r\n    return () => {\r\n      setIsUp(false)\r\n    }\r\n  }, [auth.user, match.params.tsx_id])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        getData()\r\n\r\n        /* return () => {\r\n            console.log('clear')\r\n            clearTsx()\r\n        } */\r\n        \r\n    }, [match?.params?.tsx_id, tsxData?.tsx_id, tsx?.loading])\r\n\r\n    \r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Transaction page\", path: `/transactions/${tsxData?.tsx_id}`, icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Transaction # {tsx?.tsx?.tsx_id}\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n        {\r\n            tsx.loading || users.loading ? <Loader /> : tsxData ? <Fragment>\r\n                \r\n                {\r\n                    auth?.user ? tsxData.from_id === auth?.user?.user_id || tsxData.to_user_id === auth?.user?.user_id ? <Fragment>\r\n                        <TsxDetails access='user' tsx={tsxData} from={from} />\r\n                    </Fragment> : <Fragment>\r\n                        <TsxDetails access='guest' tsx={tsxData} from={from} />\r\n                    </Fragment> : false\r\n                }\r\n\r\n            </Fragment> : <NotFound message=\"Transaction not found.\" />\r\n\r\n        }      \r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    tsx: state.tsx,\r\n    auth: state.auth,\r\n    users: state.users,\r\n})\r\nexport default connect(mapStateToProps, { getTsx, clearTsx })(withRouter(Tsx));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonBadge, IonAccordionGroup, IonAccordion } from '@ionic/react';\r\nimport { checkmark, home, informationCircleOutline } from 'ionicons/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateTransfer from '../components/form/CreateTransfer';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { clearProjects, getProjects } from '../store/actions/project';\r\nimport GlobalProjectListElement from '../components/project/GlobalProjectListElement';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst Projects: React.FC<any> = ({ project, getProjects, location, auth, account }) => {\r\n\r\n    useEffect(() => {\r\n        getProjects(auth.user)\r\n\r\n        /* return () => {\r\n            console.log('clearr projects')\r\n            clearProjects()\r\n        } */\r\n    }, [location.pathname, auth.user])\r\n\r\n    const [ step, setStep ] = useState<any>(0);\r\n\r\n    const [ showMore, setShowMore ] = useState({\r\n        underConsideration: true,\r\n        open: true,\r\n        closed: true\r\n    })\r\n\r\n\r\n    const subTitles: any[] = [\r\n        {\r\n          text: \"Home\", path: '/', icon: home\r\n        }, \r\n        {\r\n          text: \"My investments\", path: '/my_investments', icon: '', \r\n        \r\n          action: () => setStep(0)\r\n        }\r\n    ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n    {\r\n        step === 0 && <Fragment>\r\n\r\n      \r\n            <PageSubTitle subTitles={subTitles} />\r\n        \r\n\r\n        \r\n            <IonList>\r\n\r\n                <IonListHeader>\r\n                    <IonTitle style={{ textAlign: 'center' }}>\r\n                        My investments\r\n\r\n                    </IonTitle>\r\n                </IonListHeader>\r\n\r\n                <IonCard>\r\n                    <IonCardContent>\r\n                        <IonList>\r\n                        \r\n                            \r\n                            {\r\n                                account.loading ? <Loader /> : account?.investments?.length === 0 ? <NotFound message=\"No available investments.\" /> :\r\n\r\n                                    <IonList>\r\n                                        \r\n                                    <IonAccordionGroup>\r\n                                        <IonList>\r\n                                            <IonCard>\r\n                                                <IonCardContent>\r\n                                                    {\r\n                                                        project.underConsiderationProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).length > 0 && <Fragment>\r\n                                                            \r\n                                                            <IonAccordion>\r\n                                                                <IonItem slot=\"header\">\r\n                                                                    <IonLabel>\r\n                                                                        Under consideration ({project.underConsiderationProjects.length} {project.underConsiderationProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                                                    </IonLabel>\r\n                                                                </IonItem>\r\n                                                                <IonList slot=\"content\">\r\n\r\n                                                                {\r\n                                                                    project.underConsiderationProjects.length > 0 ? project.underConsiderationProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                                                    <NotFound message=\"No available projects.\" />\r\n                                                                }\r\n\r\n                                                                </IonList>\r\n                                                            </IonAccordion>\r\n                                                        </Fragment>\r\n                                                    }\r\n                                                    {\r\n                                                        project.openProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).length > 0 && <Fragment>\r\n                                                            <IonAccordion>\r\n                                                                <IonItem slot=\"header\">\r\n                                                                    <IonLabel>\r\n                                                                        Open to invest ({project.openProjects.length} {project.openProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                                                    </IonLabel>\r\n                                                                </IonItem>\r\n                                                                <IonList slot=\"content\">\r\n\r\n                                                                {\r\n                                                                    project.openProjects.length > 0 ? project.openProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                                                    <NotFound message=\"No available projects.\" />\r\n                                                                }\r\n\r\n                                                                </IonList>\r\n                                                            </IonAccordion>\r\n                                                        </Fragment>\r\n                                                    }\r\n                                                    {\r\n                                                        project.closedProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).length > 0 && <Fragment>\r\n                                                            \r\n                                                            <IonAccordion>\r\n                                                                <IonItem slot=\"header\">\r\n                                                                    <IonLabel>\r\n                                                                        Closed ({project.closedProjects.length} {project.closedProjects.length === 1 ? \"project\" : \"projects\"})\r\n                                                                    </IonLabel>\r\n                                                                </IonItem>\r\n                                                                <IonList slot=\"content\">\r\n\r\n                                                                {\r\n                                                                    project.closedProjects.length > 0 ? project.closedProjects.filter((element: any) => !!element.listofinvestors.filter((elem: any) => elem.user_id === auth?.user?.user_id)[0]).map((element: any, index: any) => <GlobalProjectListElement key={element.project_id || index} project={element} index={index} />) : \r\n                                                                    <NotFound message=\"No available projects.\" />\r\n                                                                }\r\n\r\n                                                                </IonList>\r\n                                                            </IonAccordion>\r\n                                                        </Fragment>\r\n                                                    }\r\n                                                </IonCardContent>\r\n                                            </IonCard>\r\n\r\n                                        </IonList>\r\n                                    </IonAccordionGroup>\r\n                                </IonList>\r\n\r\n                            }\r\n\r\n\r\n                        </IonList>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n            </IonList>\r\n                    \r\n            </Fragment>\r\n        }\r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    project: state.project,\r\n    auth: state.auth,\r\n    account: state.account\r\n})\r\nexport default connect(mapStateToProps, { getProjects })(withRouter(Projects));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonCardSubtitle, IonGrid, IonCol, IonRow, IonSlides, IonSlide, IonInput, useIonAlert, IonSelect, IonSelectOption, IonButtons, IonTextarea } from '@ionic/react';\r\nimport { alert, checkmark, home } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Approval from '../components/Approval';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport CreateInvestment from '../components/form/CreateInvestment';\r\nimport CreateProject from '../components/form/CreateProject';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport PlatformOverwiev from '../components/PlatformOverwiev';\r\nimport GlobalProjectListElement from '../components/project/GlobalProjectListElement';\r\nimport { clearProject, getProject, newProject } from '../store/actions/project';\r\n\r\nconst NewProject: React.FC<any> = ({ auth, newProject, history }) => {\r\n    const [ loadingData, setLoadingData ] = useState(false)\r\n\r\n    const slides: any = useRef(null)\r\n    \r\n    const [formData, setFormData] = useState<any>({\r\n      startdate: '',\r\n      closedate: '',\r\n      projectname: '',\r\n      country: '',\r\n      yieldpa: '',\r\n      volumetotal: '',\r\n      minimuminvestment: '',\r\n      description: '',\r\n      currency: '',\r\n      status: '',\r\n      typeofproperty: '',\r\n      typeofinvestment: '',\r\n      project: '',\r\n      image: '',\r\n      images: []\r\n    });\r\n\r\n\r\n    \r\n  const [present] = useIonAlert();\r\n\r\n  const handleSubmit = async(e: any) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      await newProject(formData, history, present)\r\n      setFormData({\r\n        startdate: '',\r\n        closedate: '',\r\n        projectname: '',\r\n        country: '',\r\n        yieldpa: '',\r\n        volumetotal: '',\r\n        minimuminvestment: '',\r\n        description: '',\r\n        currency: '',\r\n        status: '',\r\n        typeofproperty: '',\r\n        typeofinvestment: '',\r\n        project: '',\r\n        image: '',\r\n        images: []\r\n      })\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slideTo(0)\r\n\r\n    } catch (err: any) {\r\n\r\n      console.log(err.message)\r\n      \r\n    }\r\n\r\n  }\r\n  const handleChange = (e: any) => {\r\n    if (e.target.name === 'images') {\r\n        return setFormData({...formData, images: [e.target.value]})\r\n    }\r\n    return setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n  \r\n\r\n  const prevSlide = async () => {\r\n\r\n    if (slides.current) {\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slidePrev()\r\n\r\n    }\r\n\r\n  }\r\n  const nextSlide = async () => {\r\n\r\n    if (slides.current) {\r\n\r\n      const swiper = await slides.current.getSwiper();\r\n      \r\n      swiper.slideNext()\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"New project\", path: '/new_project', icon: '', \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                New project\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        \r\n        <IonSlides ref={slides}>\r\n\r\n            <IonSlide>\r\n              <IonList>\r\n                <IonCard>\r\n                    <IonCardHeader>\r\n                      <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                        Submit your project\r\n                      </IonCardTitle>\r\n                    </IonCardHeader>\r\n\r\n                    <IonCardContent>\r\n\r\n                      \r\n                    <IonItem>\r\n                      <IonText>\r\n                        Provide details of the financing project. \r\n                      </IonText>\r\n                    </IonItem>\r\n                      \r\n                    <IonItem>\r\n                      <IonText>\r\n                        After submitting the project in the status under consideration, you can update further details and in the next step move the opportunity to the active status.                      \r\n                      </IonText>\r\n                    </IonItem>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n\r\n                <IonItem>\r\n                  <div className=\"ion-items-center\">\r\n                    <IonButton size=\"default\" slot=\"end\" onClick={()=> nextSlide()}>Let's get started</IonButton>\r\n                  </div>\r\n                </IonItem>\r\n              </IonList>\r\n            </IonSlide>\r\n\r\n              {\r\n                auth?.user?.approved ? <Fragment>\r\n                  <IonSlide>\r\n                  <IonList>\r\n                    <IonCard>\r\n\r\n                      <IonCardContent>\r\n\r\n                        <IonList>\r\n\r\n                        <IonItem>\r\n                          <IonLabel>Project name</IonLabel>\r\n                          <IonInput slot=\"end\" autocomplete={\"off\"} name=\"projectname\" value={formData.projectname || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                        </IonItem>\r\n                        <IonItem>\r\n                          <IonLabel>Country</IonLabel>\r\n                          <IonInput slot=\"end\" autocomplete={\"off\"} name=\"country\" value={formData.country || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                        </IonItem>\r\n\r\n                        <IonItem>\r\n                          <IonLabel>Image</IonLabel>\r\n                          <IonInput type=\"text\" autocomplete={\"off\"} slot=\"end\" name=\"images\" value={formData.images ? formData.images[0] : \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                        \r\n                        </IonItem>\r\n\r\n                        \r\n                        \r\n\r\n                        </IonList>\r\n\r\n                      </IonCardContent>\r\n\r\n                    </IonCard>\r\n                    <IonItem>\r\n                      <IonButtons>\r\n                      <IonButton size=\"default\" slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Cancel</IonButton>\r\n                      <IonButton size=\"default\" slot=\"end\" onClick={()=> nextSlide()}>Continue {'>'}</IonButton>\r\n                      </IonButtons>\r\n                    </IonItem>\r\n                  </IonList>\r\n                  </IonSlide>\r\n\r\n                  <IonSlide>\r\n                  <IonList style={{ width: '100%' }}>\r\n                    <IonCard>\r\n\r\n                      <IonCardContent>\r\n\r\n                        \r\n                      <IonItem>\r\n                        <IonLabel>Short Description</IonLabel>\r\n                        \r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonTextarea name=\"description\" value={formData.description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonTextarea>\r\n                        \r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonLabel>Long Description</IonLabel>\r\n                        \r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonTextarea name=\"long_description\" value={formData.long_description || \"\"} onIonChange={(e: any) => handleChange(e)}></IonTextarea>\r\n                        \r\n                      </IonItem>\r\n\r\n                      </IonCardContent>\r\n\r\n                    </IonCard>\r\n\r\n\r\n                    <IonItem>\r\n                      <IonButtons>\r\n                        <IonButton size=\"default\"  slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Go back</IonButton>\r\n                        <IonButton size=\"default\"  slot=\"end\" onClick={()=> nextSlide()}>Continue {'>'}</IonButton>\r\n                      </IonButtons>\r\n                    </IonItem>\r\n\r\n                    </IonList>\r\n                  </IonSlide>\r\n                  <IonSlide>\r\n                  <IonList style={{ width: '100%'}}>\r\n                    <IonCard >\r\n\r\n                      <IonCardContent>\r\n                        <IonList>\r\n                        <IonItem>\r\n                          <IonLabel>Status</IonLabel>\r\n                          <IonSelect slot=\"end\" name=\"status\" onIonChange={(e: any) => handleChange(e)}>\r\n                            {\r\n                              ['UNDER_CONSIDERATION'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                            }\r\n                          </IonSelect>\r\n                        \r\n                        </IonItem>\r\n\r\n                        <IonItem>\r\n                          <IonLabel>Type of investment</IonLabel>\r\n                          <IonSelect slot=\"end\" name=\"typeofinvestment\" onIonChange={(e: any) => handleChange(e)}>\r\n                            {\r\n                              ['EQUITY'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                            }\r\n                          </IonSelect>\r\n                        \r\n                        </IonItem>   \r\n                        <IonItem>\r\n                          <IonLabel>Type of property</IonLabel>\r\n                          <IonSelect slot=\"end\" name=\"typeofproperty\" onIonChange={(e: any) => handleChange(e)}>\r\n                            {\r\n                              ['RESIDENTIAL', 'RETAIL', 'OFFICE', 'LAND', 'LOGISTICS', 'INDUSTRIAL'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                            }\r\n                          </IonSelect>\r\n                    \r\n                        </IonItem>    \r\n                        <IonItem>\r\n                          <IonLabel>Type of project</IonLabel>\r\n                          <IonSelect slot=\"end\" name=\"project\" onIonChange={(e: any) => handleChange(e)}>\r\n                            {\r\n                              ['EXISTING', 'DEVELOPMENT'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                            }\r\n                          </IonSelect>\r\n                        \r\n                        </IonItem>\r\n                        </IonList>\r\n                      </IonCardContent>\r\n\r\n                    </IonCard>\r\n\r\n                        \r\n                    <IonItem>\r\n                      <IonButtons>\r\n                        <IonButton size=\"default\"  slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Go back</IonButton>\r\n                        <IonButton size=\"default\"  slot=\"end\" onClick={()=> nextSlide()}>Continue {'>'}</IonButton>\r\n                      </IonButtons>\r\n                    </IonItem>\r\n                  </IonList>\r\n                  </IonSlide>\r\n                  \r\n                  <IonSlide>\r\n                  <IonList>\r\n                    <IonCard>\r\n\r\n                      <IonCardContent>\r\n\r\n                      <IonItem>\r\n                        <IonLabel>Yield per month</IonLabel>\r\n                        <IonInput slot=\"end\" autocomplete={\"off\"} name=\"yieldpa\" value={formData.yieldpa || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonLabel>Volume total</IonLabel>\r\n                        <IonInput slot=\"end\" autocomplete={\"off\"} name=\"volumetotal\" value={formData.volumetotal || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                      </IonItem>\r\n                      <IonItem>\r\n                        <IonLabel>Minimum investment</IonLabel>\r\n                        <IonInput slot=\"end\" autocomplete={\"off\"} name=\"minimuminvestment\" value={formData.minimuminvestment || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n\r\n                      </IonItem>\r\n\r\n                      \r\n                      <IonItem>\r\n                        <IonLabel>Currency</IonLabel>\r\n                        <IonSelect slot=\"end\" name=\"currency\" onIonChange={(e: any) => handleChange(e)}>\r\n                          {\r\n                            ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                          }\r\n                        </IonSelect>\r\n                      \r\n                      </IonItem>\r\n\r\n                      </IonCardContent>\r\n\r\n                    </IonCard>\r\n                    \r\n                    \r\n                      <IonItem>\r\n                        <IonButtons>\r\n                          <IonButton size=\"default\"  slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Go back</IonButton>\r\n                          <IonButton size=\"default\"  slot=\"end\" onClick={()=> nextSlide()}>Continue {'>'}</IonButton>\r\n                        </IonButtons>\r\n                      </IonItem>\r\n                  </IonList>\r\n                  </IonSlide>\r\n                  \r\n                  {\r\n                    (formData?.status && formData?.status !== 'UNDER_CONSIDERATION') ? <Fragment>\r\n                        <IonSlide>\r\n                          <IonList>\r\n                            <IonCard>\r\n\r\n                              <IonCardContent>\r\n\r\n                                              \r\n                                <IonItem>\r\n                                  <IonLabel>Start date</IonLabel>\r\n                                  <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"startdate\" value={formData.startdate || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                \r\n                                </IonItem>            \r\n                                <IonItem>\r\n                                  <IonLabel>Close date</IonLabel>\r\n                                  <IonInput type=\"date\" autocomplete={\"off\"} slot=\"end\" name=\"closedate\" value={formData.closedate || moment().format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                \r\n                                </IonItem>\r\n\r\n                              </IonCardContent>\r\n\r\n                            </IonCard>\r\n                              \r\n                            <IonItem>\r\n                              <IonButtons>\r\n                                <IonButton size=\"default\"  slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Go back</IonButton>\r\n                                <IonButton size=\"default\"  slot=\"end\" onClick={()=> nextSlide()}>Continue {'>'}</IonButton>\r\n                              </IonButtons>\r\n                            </IonItem>\r\n                          </IonList>\r\n                        </IonSlide>\r\n                    </Fragment> : false\r\n                  }\r\n                                    \r\n                  <IonSlide>\r\n                  <IonList style={{ width: '100%'}}>\r\n                    <IonCard>\r\n                      <IonCardHeader>\r\n                        <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n                          Confirm\r\n                        </IonCardTitle>\r\n                      </IonCardHeader>\r\n                      <IonCardContent>\r\n                        \r\n                        <GlobalProjectListElement project={formData} isSample={true} />\r\n\r\n                      </IonCardContent>\r\n\r\n                    </IonCard>\r\n\r\n                    \r\n                      <IonItem>\r\n                        <form onSubmit={(e: any) => handleSubmit(e)}>\r\n                        <IonButtons>\r\n                          <IonButton size=\"default\" type=\"button\" slot=\"start\" color=\"secondary\" onClick={()=> prevSlide()}>Go back</IonButton>\r\n                          <IonButton size=\"default\" type=\"submit\" slot=\"end\" onClick={(e: any)=> handleSubmit(e)}>SUBMIT</IonButton>\r\n                        </IonButtons>\r\n                        </form>\r\n                      </IonItem>\r\n                  </IonList>\r\n                  </IonSlide>\r\n\r\n                </Fragment> : <Approval />\r\n              }\r\n\r\n              \r\n\r\n        </IonSlides>\r\n        \r\n        \r\n        \r\n    \r\n      </IonList>\r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getProject, newProject })(withRouter(NewProject));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonInput, IonCardSubtitle } from '@ionic/react';\r\nimport { checkmark, home, informationCircleOutline, star } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { codeUpdate, confirm } from '../store/actions/auth';\r\n\r\nconst ApprovePage: React.FC<any> = ({ auth, confirm, history, codeUpdate }) => {\r\n    const [ loadingData, setLoadingData ] = useState(false)\r\n\r\n\r\n    const [ formData, setFormData ] = useState<any>({\r\n      code: ''\r\n    })\r\n\r\n    const handleSubmit = async (e: any) => {\r\n      try {\r\n\r\n        e.preventDefault();\r\n\r\n        await confirm(formData, history)\r\n\r\n        \r\n      } catch (err: any) {\r\n        console.log(err.message)\r\n      }\r\n        \r\n    }\r\n    const handleRequest = async (e: any) => {\r\n      try {\r\n\r\n        e.preventDefault();\r\n\r\n        await codeUpdate()\r\n\r\n        \r\n      } catch (err: any) {\r\n        console.log(err.message)\r\n      }\r\n        \r\n    }\r\n\r\n    const subTitles: any[] = [\r\n        {text: \"Home\", path: '/', icon: home}, \r\n        {text: \"Approvement page\", path: '/account_approvement', icon: ''}\r\n    ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />\r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n        <IonCard>\r\n        <IonCardHeader>\r\n          <IonLabel className=\"ion-items-center\">\r\n            \r\n            <IonIcon icon={star} color=\"primary\" size=\"large\"></IonIcon>\r\n          </IonLabel>\r\n          <IonCardTitle className=\"ion-items-center\" color=\"primary\">\r\n            Approve your account\r\n          </IonCardTitle>\r\n          <IonCardSubtitle className=\"ion-items-center\">\r\n            Enter the 6-digit security key that you received at your e-mail address\r\n          </IonCardSubtitle>\r\n        </IonCardHeader>\r\n        <IonCardContent>\r\n      <form onSubmit={(e: any) => handleSubmit(e)}>\r\n        <IonItem>\r\n          <IonLabel slot=\"start\">\r\n            Digital Secure Key\r\n          </IonLabel>\r\n        \r\n        <IonInput style={{ letterSpacing: '3px', textAlign: 'center' }} name=\"code\" value={formData.code || ''} maxlength={6} onIonChange={(e: any) => setFormData({ ...formData, code: e.target.value })} placeholder=\"000000\"></IonInput>\r\n        \r\n        </IonItem>\r\n        <IonItem>\r\n        <IonButton slot=\"end\" disabled={!(formData?.code?.length === 6 && !isNaN(formData?.code))} type=\"submit\">Confirm</IonButton>\r\n        </IonItem>\r\n      </form>\r\n          <IonToolbar mode=\"md\">\r\n            <IonItem>\r\n              <IonRouterLink class=\"spacing\" onClick={(e: any) => handleRequest(e)}>Send me the Digital Secure Key again</IonRouterLink>\r\n            </IonItem>\r\n          </IonToolbar>\r\n        </IonCardContent>\r\n        </IonCard>\r\n        <IonCard>\r\n          <IonCardHeader>\r\n            <IonCardTitle className=\"ion-items-center\" mode=\"md\">\r\n              Don’t receive the verification email?\r\n            </IonCardTitle>\r\n          </IonCardHeader>\r\n          <IonCardContent>\r\n            <IonItem>\r\n              <IonIcon icon={informationCircleOutline} color=\"secondary\" slot=\"start\"></IonIcon>\r\n              <IonText>\r\n                Update your email address again, carefully checking the spelling and any special characters.\r\n              </IonText>\r\n\r\n            </IonItem>\r\n            <IonItem>\r\n              <IonIcon icon={informationCircleOutline} color=\"secondary\" slot=\"start\"></IonIcon>\r\n              <IonText>\r\n                Check your spam / junk folder.\r\n              </IonText>\r\n              \r\n            </IonItem>\r\n          </IonCardContent>\r\n        </IonCard>\r\n\r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { confirm, codeUpdate })(withRouter(ApprovePage));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonGrid, IonRow, IonCol, IonInput, IonSelect, IonSelectOption, IonButtons, IonImg, IonAccordion, IonAccordionGroup } from '@ionic/react';\r\nimport axios from 'axios';\r\nimport { checkmark, closeCircleOutline, home, lockClosed, lockOpen } from 'ionicons/icons';\r\nimport moment from 'moment';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport Approval from '../components/Approval';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { createWallet, loadUser, update, updateCredentials, updateIncome } from '../store/actions/auth';\r\nimport { getBalance, updateMainWallet } from '../store/actions/tsx';\r\n\r\n\r\nconst Settings: React.FC<RouteComponentProps | any> = ({ history, auth, account, updateMainWallet, update, createWallet, updateIncome, updateCredentials, location }) => {\r\n\r\n\r\n\r\n\r\n    const [ selected, setSelected ] = useState(0)\r\n\r\n\r\n    const [ openSecret, setOpenSecret ] = useState(false);\r\n\r\n    const [ openAvatarInput, setOpenAvatarInput ] = useState(false)\r\n\r\n    const [ formData, setFormData ] = useState<any>({\r\n        first_name: '',\r\n        last_name: '',\r\n        gender_title: 'None',\r\n        date_of_birth: '',\r\n        country: '',\r\n        email: ''\r\n    });\r\n\r\n    const [ avatarField, setAvatarField ] = useState({\r\n        avatar: ''\r\n    });\r\n\r\n    const [ mainWallet, setMainWallet ] = useState({\r\n        main_wallet: ''\r\n    })\r\n    const [ incomeValue, setIncomeValue ] = useState({\r\n        income: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (location?.state?.new_wallet) {\r\n            setSelected(1)\r\n        } else {\r\n            setSelected(0)\r\n        }\r\n    }, [location])\r\n\r\n    const updateAvatar = async (e: any) => {\r\n\r\n        try {\r\n            e.preventDefault();\r\n\r\n            await update(avatarField);\r\n\r\n            setOpenAvatarInput(false);\r\n\r\n        } catch (err: any) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handlePersonalData = async (e: any) => {\r\n        \r\n        try {\r\n            e.preventDefault()\r\n\r\n            await update(formData)\r\n\r\n        } catch (err: any) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const updateForm = async () => {\r\n        \r\n        setFormData({ ...formData, ...auth?.user })\r\n        setMainWallet({ ...mainWallet, main_wallet: auth?.user?.main_wallet })\r\n        setIncomeValue({ ...incomeValue, income: auth?.user?.income })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        updateForm()\r\n\r\n    }, [auth?.user, auth?.loading, selected, formData?.user_id])\r\n\r\n\r\n    const handleDefaultSrc = (e: any) => {\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOth66OC9IjxBJ2qqyFqbdzg19cZ1Bhbj4AWkruWZtygzopH9DUbV6vgrL7NlL_cOth6k&usqp=CAU'\r\n    }\r\n\r\n    const handleMainWallet = async (e: any) => {\r\n\r\n        try {\r\n            e.preventDefault();\r\n            if (e.target.value === auth.user.main_wallet) {\r\n                return console.log('Value is the same.')\r\n            }\r\n            await updateMainWallet(e)\r\n\r\n            setMainWallet({ main_wallet: e.target.value })\r\n\r\n\r\n        } catch (err: any) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n    const handleWallet = async (e: any) => {\r\n\r\n        try {\r\n            e.preventDefault();\r\n            if (auth?.user?.wallets?.indexOf(e.target.value) >= 0) {\r\n                return console.log('Value is the same.')\r\n            }\r\n            await createWallet({ wallet: e.target.value })\r\n\r\n\r\n        } catch (err: any) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n    const handleIncome = async (e: any) => {\r\n\r\n        try {\r\n            e.preventDefault();\r\n            if (auth?.user?.income?.toString() === e?.target?.value?.toString()) {\r\n                return console.log('Value is the same.')\r\n            }\r\n            await updateIncome({ income: e.target.value })\r\n\r\n\r\n        } catch (err: any) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    const [ passwordData, setPasswordData ] = useState({\r\n        password: '',\r\n        passwordConfirmation: ''\r\n    })\r\n\r\n\r\n    const handleChangePassword = (e: any) => {\r\n        setPasswordData({ ...passwordData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleUpdate = async (e: any) => {\r\n        try {\r\n            e.preventDefault();\r\n            \r\n            \r\n            if (!passwordData?.password || !passwordData?.passwordConfirmation) {\r\n              return false;\r\n            }\r\n      \r\n            await updateCredentials(passwordData, history)\r\n            \r\n          } catch (err: any) {\r\n      \r\n            console.log(err.message)\r\n            \r\n          }\r\n    }\r\n\r\n    \r\n  const subTitles: any[] = [\r\n    {\r\n      text: \"Home\", path: '/', icon: home\r\n    }, \r\n    {\r\n      text: \"Settings\", path: '/settings', icon: '', \r\n    \r\n    }\r\n  ]\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n\r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Settings\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        {\r\n          auth?.user?.approved === false && <Fragment>\r\n            <Approval />\r\n          </Fragment>\r\n        }\r\n\r\n        <IonList>\r\n            <IonCard>\r\n\r\n                <IonCardHeader>\r\n                        <IonItem>\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol className=\"ion-items-center inner-items-active\" style={ selected === 0 ? { fontWeight: 'bold' } : {} }>\r\n                                        <IonText onClick={() => setSelected(0)}>My profile</IonText>\r\n\r\n                                    </IonCol>\r\n                                    <IonCol className=\"ion-items-center inner-items-active\" style={ selected === 1 ? { fontWeight: 'bold' } : {} }>\r\n                                        <IonText onClick={() => setSelected(1)}>My wallet</IonText>\r\n                                                \r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n                        </IonItem>\r\n                </IonCardHeader>\r\n                <IonCardContent>\r\n                    <IonList>\r\n                        {\r\n                            auth?.loading ? <Loader /> : (selected === 0 || !selected) ? <Fragment>\r\n                                \r\n                                \r\n                                {\r\n                                    <IonItem><div className=\"ion-items-center\">\r\n                                        <IonImg onIonError={(e) => handleDefaultSrc(e)} src={auth?.user?.avatar ? auth?.user?.avatar : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOth66OC9IjxBJ2qqyFqbdzg19cZ1Bhbj4AWkruWZtygzopH9DUbV6vgrL7NlL_cOth6k&usqp=CAU\"} alt=\"avatar\" />\r\n                                    </div></IonItem>\r\n                                }\r\n\r\n                                <IonItem>\r\n                                    <div className=\"ion-items-center\">\r\n                                        {\r\n                                            openAvatarInput ? <Fragment>\r\n                                                <form onSubmit={(e: any) => updateAvatar(e)} style={{ width: '100%'}} autoComplete={\"off\"} >\r\n                                                <IonGrid>\r\n                                                    <IonRow>\r\n                                                        <IonCol className=\"ion-items-center\">\r\n                                                            Update your picture\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                    <IonRow>\r\n                                                        <IonCol className=\"ion-items-center\">\r\n                                                            <IonItem>\r\n                                                                <IonInput onIonChange={(e: any) => setAvatarField({ avatar: e.target.value})} placeholder=\"https://...\"></IonInput>\r\n                                                            </IonItem>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                    <IonRow>\r\n                                                        <IonCol className=\"ion-items-center\">\r\n                                                            <IonButton type=\"button\" color=\"secondary\" onClick={() => setOpenAvatarInput(false)} size=\"small\" style={{ width: '80%'}}>Cancel</IonButton>\r\n                                                        </IonCol>\r\n                                                        <IonCol className=\"ion-items-center\">\r\n                                                            <IonButton type=\"submit\" disabled={!(avatarField?.avatar)} size=\"small\" style={{ width: '80%'}}>Save</IonButton>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonGrid>\r\n                                                </form>\r\n                                                </Fragment> : <IonButton color=\"white\" onClick={() => setOpenAvatarInput(!openAvatarInput)}>\r\n                                                    <IonText color=\"dark\" >Update your picture</IonText>\r\n                                                </IonButton>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </IonItem>\r\n\r\n                                {\r\n                                    auth?.loading ? <Loader /> : <form onSubmit={(e: any) => handlePersonalData(e)}>\r\n                                    \r\n                                        <IonItem>\r\n                                            <IonLabel slot=\"start\">\r\n                                                First name\r\n                                            </IonLabel>\r\n                                            <IonInput value={formData.first_name || ''} autocomplete=\"off\" maxlength={250} type=\"text\" name=\"first_name\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonLabel slot=\"start\">\r\n                                                Last name\r\n                                            </IonLabel>\r\n                                            <IonInput value={formData.last_name || ''} maxlength={250} autocomplete={\"off\"} type=\"text\" name=\"last_name\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                                        </IonItem>   \r\n                                        <IonItem>\r\n                                        <IonLabel>Title</IonLabel>\r\n                                            <IonSelect slot=\"end\" name=\"gender_title\" value={formData.gender_title || ''} onIonChange={(e: any) => handleChange(e)}>\r\n                                                {\r\n                                                    ['None', 'Ms', 'Mr', 'Mx', 'Mrs', 'Miss'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                                }\r\n                                            </IonSelect>\r\n                                        \r\n                                        </IonItem>  \r\n                                        <IonItem>\r\n                                            <IonLabel slot=\"start\">\r\n                                                E-mail address\r\n                                            </IonLabel>\r\n\r\n                                            <IonInput value={formData.email || ''} autocomplete={\"off\"} maxlength={250} type=\"text\" name=\"email\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonLabel>Date of birth</IonLabel>\r\n                                            <IonInput type=\"date\" slot=\"end\" name=\"date_of_birth\" autocomplete={\"off\"} value={moment(formData.date_of_birth).format('YYYY-MM-DD') || \"\"} onIonChange={(e: any) => handleChange(e)}></IonInput>\r\n                                            \r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <IonLabel slot=\"start\">\r\n                                                Country\r\n                                            </IonLabel>\r\n\r\n                                            <IonInput value={formData.country || ''} autocomplete={\"off\"} maxlength={250} type=\"text\" name=\"country\" onIonChange={ (e: any) => handleChange(e)}></IonInput>\r\n                                        </IonItem>\r\n                                        <IonItem>\r\n                                            <div className=\"ion-items-center\">\r\n                                            <IonButton disabled={!(formData.email && formData.last_name && formData.gender_title && formData.country && formData.first_name && formData.date_of_birth && formData.email.includes('@') && formData.email.includes('.') && !(new RegExp(\"\\\\\\\\\",\"\").test(formData.email)) && !(new RegExp(\"\\\\\\\\\",\"\").test(formData.first_name)) && !(new RegExp(\"\\\\\\\\\",\"\").test(formData.last_name)))} type=\"submit\" size=\"default\" color=\"primary\">\r\n                                                Save changes\r\n                                            </IonButton>\r\n                                            </div>\r\n                                        </IonItem>\r\n                                    </form>\r\n                                }\r\n\r\n                                \r\n\r\n                            </Fragment> : selected === 1 ? <Fragment>\r\n                                <IonList>\r\n                                    <IonListHeader className=\"ion-items-center\">\r\n                                        <IonTitle className=\"no-padding\">\r\n                                            Pay accounts\r\n\r\n                                        </IonTitle>\r\n                                    </IonListHeader>\r\n                                    {\r\n                                        account.loading ? <Loader /> : account.wallets.length ? account.wallets.map((element: any, index: number) => <Fragment key={index}>\r\n                                            <IonItem style={{ fontSize: '16px' }}>\r\n                                                { element ? element.balance : 'N/A' } { element ? element.currency : 'N/A' }\r\n                                            </IonItem>\r\n                                        </Fragment>) : <NotFound message={\"No available wallets.\"} />\r\n                                    }\r\n                                </IonList>\r\n                                {\r\n                                    auth?.user?.approved ? <Fragment>\r\n                                        \r\n                                        {\r\n                                            auth?.user?.wallets?.length && \r\n                                            \r\n                                            <IonItem>\r\n                                                {\r\n                                                    mainWallet?.main_wallet ?\r\n                                                        <IonLabel>\r\n                                                            Primary\r\n                                                        </IonLabel> : \r\n                                                        <IonLabel color=\"warning\">\r\n                                                            Primary\r\n                                                        </IonLabel>\r\n                                                }\r\n                                                <IonSelect slot=\"end\" name=\"main_wallet\" value={mainWallet?.main_wallet || \"\"} onIonChange={(e: any) => handleMainWallet(e)}>\r\n                                                    {\r\n                                                        auth?.user?.wallets?.length ? auth?.user?.wallets?.map((element: any, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>) : <IonSelectOption value={''}>{''}</IonSelectOption>\r\n                                                    }\r\n                                                </IonSelect>\r\n                                            </IonItem>\r\n                                        }\r\n                                        {\r\n                                            auth?.user?.wallets?.length !== ['EUR', 'GBP', 'PLN', 'CZK'].length &&\r\n\r\n                                                <IonItem>\r\n                                                    {\r\n                                                        auth?.user?.wallets?.length ?\r\n                                                            <IonLabel>\r\n                                                                Create a new wallet\r\n                                                            </IonLabel> : \r\n                                                            <IonLabel color=\"warning\">\r\n                                                                Create a new wallet\r\n                                                            </IonLabel>\r\n                                                    }\r\n                                                    \r\n                                                    {\r\n                                                        <IonSelect slot=\"end\" name=\"wallet\" onIonChange={(e: any) => handleWallet(e)}>\r\n                                                            {\r\n                                                                ['EUR', 'GBP', 'PLN', 'CZK'].map((element: string, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                                            }\r\n                                                        </IonSelect>\r\n                                                    }\r\n                                                </IonItem>\r\n\r\n                                        }\r\n                                        {\r\n                                            mainWallet?.main_wallet && \r\n                                                <IonItem>\r\n                                                    {\r\n                                                        incomeValue?.income === null ?\r\n                                                        \r\n                                                            <IonLabel color=\"warning\">\r\n                                                                Daily income\r\n                                                            </IonLabel> : \r\n                                                            <IonLabel >\r\n                                                                Daily income\r\n                                                            </IonLabel>\r\n                                                    }\r\n                                                    {\r\n                                                        \r\n                                                        <IonSelect slot=\"end\" name=\"wallet\" value={ incomeValue?.income } onIonChange={(e: any) => handleIncome(e)}>\r\n                                                            {\r\n                                                                [0, 1000, 5000, 10000, 15000].map((element: number, index: number) => <IonSelectOption key={index} value={element}>{element}</IonSelectOption>)\r\n                                                            }\r\n                                                        </IonSelect>\r\n                                                    }\r\n                                                </IonItem>\r\n                                        }\r\n                                    </Fragment> : false\r\n                                }\r\n\r\n\r\n                                <IonList>\r\n                                    \r\n                                    <IonListHeader className=\"ion-items-center\">\r\n                                        <IonTitle className=\"no-padding\">\r\n                                            Protection\r\n\r\n                                        </IonTitle>\r\n                                    </IonListHeader>\r\n                                    <IonItem>\r\n                                        <IonIcon slot=\"start\" icon={lockOpen}></IonIcon>\r\n                                        <IonText>Public key (account number)</IonText>\r\n                                    </IonItem>\r\n                                    <IonItem>\r\n                                        <IonText style={{ wordBreak: 'break-all' }}>{auth?.user?.public_key || \"N/A\"}</IonText>\r\n                                    </IonItem>\r\n                                    <IonItem onClick={() => setOpenSecret(!openSecret)}>\r\n                                        <IonIcon slot=\"start\" icon={openSecret ? lockOpen : lockClosed}></IonIcon>\r\n                                        <IonText>Private key (signature number)</IonText>\r\n                                    </IonItem>\r\n                                    {\r\n                                        openSecret && <IonItem>\r\n                                            <IonText style={{ wordBreak: 'break-all' }}>{auth?.user?.private_key || \"N/A\"}</IonText>\r\n                                        </IonItem>\r\n                                    }\r\n                                    \r\n                                </IonList>\r\n\r\n\r\n                            </Fragment> : false\r\n                        }\r\n                        \r\n                    </IonList>\r\n\r\n                </IonCardContent>\r\n            </IonCard>\r\n            {\r\n                !auth?.loading && selected === 0 && <Fragment>\r\n\r\n                    <IonCard>\r\n                    <IonCardHeader>\r\n                        <IonCardTitle mode=\"md\">\r\n                        More information\r\n\r\n                        </IonCardTitle>\r\n                        </IonCardHeader>\r\n\r\n                        <IonCardContent>\r\n                        <IonToolbar mode=\"md\">\r\n                            <IonAccordionGroup>\r\n                                <IonCard>\r\n                                    <IonCardContent>\r\n                                        <IonAccordion>\r\n                                        <IonItem slot=\"header\">\r\n\r\n                                            <IonText>Change my password</IonText>\r\n                                        \r\n                                        </IonItem>\r\n                                        <IonItem slot=\"content\">\r\n                                        <form onSubmit={(e: any) => handleUpdate(e)}>\r\n                                            <IonItem>\r\n                                                <IonLabel>\r\n                                                New password\r\n                                                </IonLabel>\r\n                                                <IonInput type=\"password\" value={ passwordData.password || '' } name=\"password\" slot=\"end\" onIonChange={(e: any)=> handleChangePassword(e)}></IonInput>\r\n                                            </IonItem>\r\n                                            <IonItem>\r\n                                                <IonLabel>\r\n                                                Confirm password\r\n                                                </IonLabel>\r\n                                                <IonInput type=\"password\" value={ passwordData.passwordConfirmation || '' } name=\"passwordConfirmation\" slot=\"end\" onIonChange={(e: any)=> handleChangePassword(e)}></IonInput>\r\n                                            </IonItem>\r\n                                            <IonItem>\r\n                                                <IonButton type=\"submit\" slot=\"end\" size=\"default\" disabled={ !(passwordData.password && passwordData.passwordConfirmation) }>\r\n                                                Submit\r\n                                                </IonButton>\r\n                                            </IonItem>\r\n                                        </form>\r\n                                        </IonItem>\r\n                                        </IonAccordion>\r\n                                        \r\n                                        <IonAccordion>\r\n                                        <IonItem slot=\"header\" >\r\n                                        \r\n                                            <IonText color=\"danger\">Delete my account</IonText>\r\n                                        \r\n                                        </IonItem>\r\n\r\n                                        \r\n                                        <IonItem slot=\"content\">\r\n                                            This feature is coming soon. Please contact mikey.nivest@gmail.com\r\n                                        </IonItem>\r\n\r\n                                        </IonAccordion>\r\n                                    </IonCardContent>\r\n                                </IonCard>\r\n                            </IonAccordionGroup>\r\n                        </IonToolbar>\r\n                        </IonCardContent>\r\n                    \r\n                    </IonCard>\r\n                    \r\n                </Fragment>\r\n\r\n                    \r\n            }\r\n        </IonList>\r\n                \r\n        </IonList>\r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    auth: state.auth,\r\n    account: state.account\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateMainWallet, update, createWallet, updateIncome, updateCredentials })(withRouter(Settings));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider } from '@ionic/react';\r\nimport { checkmark } from 'ionicons/icons';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\n\r\nconst Wallets: React.FC<any> = ({ account, history }) => {\r\n\r\n  \r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitle={\"Home > Wallets\"} />\r\n        \r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                Wallets\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n        <IonList>\r\n            <IonListHeader>\r\n                <IonTitle className=\"no-padding\">\r\n                    Current wallets\r\n\r\n                </IonTitle>\r\n            </IonListHeader>\r\n            {\r\n                account.loading ? <Loader /> : account.wallets.length ? account.wallets.map((element: any, index: number) => <Fragment key={index}>\r\n                    <IonItem className=\"inner-text-active\" style={{ fontSize: '16px' }} onClick={() => history.push(`/wallets/${element.currency}`)}>\r\n                        <IonText>{ element ? element.balance : 'N/A' } { element ? element.currency : 'N/A' }</IonText>\r\n                    </IonItem>\r\n                </Fragment>) : <NotFound message={\"No available wallets.\"} />\r\n            }\r\n        </IonList>\r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  account: state.account\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(Wallets));\r\n","\r\nimport { IonContent, IonPage, IonHeader, IonToolbar, IonTitle, IonList, IonCard, IonCardHeader, IonCardContent, IonListHeader, IonCardTitle, IonItem, IonButton, IonIcon, IonAvatar, IonLabel, IonText, IonRouterLink, IonItemDivider, IonGrid, IonRow, IonCol } from '@ionic/react';\r\nimport { checkmark } from 'ionicons/icons';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\n\r\nconst Wallet: React.FC<any> = ({ account, match, tsx }) => {\r\n\r\n  const [walletDetails, setWalletDetails] = useState<any>({\r\n      balance: 0,\r\n      in: 0,\r\n      out: 0,\r\n      loading: true\r\n  });\r\n  const [loadingData, setLoadingData] = useState(false)\r\n\r\n    const getData = async () => {\r\n\r\n        const value = await account?.wallets?.filter((element: any) => element.currency === match?.params?.currency)[0]\r\n\r\n        await setWalletDetails(value || null)\r\n\r\n    }\r\n  useEffect(() => {\r\n\r\n    getData()\r\n    \r\n\r\n  }, [match?.params?.currency, tsx.loading])\r\n\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitle={\"Home > Wallets > Wallet\"} />\r\n        \r\n            \r\n\r\n      <IonList>\r\n\r\n        <IonListHeader>\r\n            <IonTitle style={{ textAlign: 'center' }}>\r\n                {match?.params?.currency || 'N/A'}\r\n\r\n            </IonTitle>\r\n        </IonListHeader>\r\n\r\n            {\r\n                tsx?.loading ? <Loader /> : match?.params?.currency ? <Fragment>\r\n\r\n                    <IonItem className=\"ion-items-center\">\r\n                    <IonGrid>\r\n                        <IonRow>\r\n                            <IonCol className=\"ion-items-center\">\r\n                                <IonText>TOTAL</IonText>\r\n                                <IonTitle className=\"no-padding\">\r\n                                    {walletDetails?.balance} {walletDetails?.currency}\r\n                                </IonTitle>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonGrid>\r\n                            <IonRow>\r\n                                <IonCol className=\"ion-items-center\">\r\n                                    <IonText>IN</IonText>\r\n                                <IonText>\r\n                                    {walletDetails?.in} {walletDetails?.currency}\r\n                                </IonText>\r\n                                </IonCol>\r\n                                <IonCol className=\"ion-items-center\">\r\n                                    <IonText>OUT</IonText>\r\n                                <IonText>\r\n                                   -{walletDetails?.out} {walletDetails?.currency}\r\n                                </IonText>\r\n                                </IonCol>\r\n\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                        \r\n                        \r\n                    </IonItem>\r\n\r\n\r\n\r\n\r\n                </Fragment> : <NotFound message={'No available wallet.'} />\r\n            }\r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      <FooterLoggedIn />\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n  account: state.account,\r\n  tsx: state.tsx\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(Wallet));\r\n","\r\nimport { IonHeader, IonToolbar, IonLabel, IonInput, IonItemDivider, IonButton, IonCard, IonCardContent, IonCardHeader, IonList, IonItem, IonListHeader, IonCheckbox, IonNav, IonIcon, IonRouterLink, IonText, IonCardTitle, IonCardSubtitle, IonAvatar, IonPage, IonContent, IonTitle } from '@ionic/react';\r\nimport { Fragment } from 'react';\r\nimport { checkmark, home } from 'ionicons/icons';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport TermsContent from '../components/TermsContent';\r\nimport PageHeader from '../components/PageHeader';\r\nimport PageSubTitle from '../components/PageSubTitle';\r\nimport { connect } from 'react-redux';\r\nimport FooterLoggedIn from '../components/footer/FooterLoggedIn';\r\n\r\n\r\nconst TermsAndConditions: React.FC<any> = ({ auth }) => {\r\n\r\n\r\n      \r\n    const subTitles: any[] = [\r\n        {\r\n            text: \"Home\", path: '/', icon: home\r\n        }, \r\n        {\r\n            text: `Terms ${\"&\"} Conditions`, path: '/terms_and_conditions', icon: '', \r\n        \r\n        }\r\n    ]\r\n\r\n\r\n  return (\r\n      <IonPage>\r\n\r\n      <PageHeader />     \r\n\r\n      <IonContent fullscreen>\r\n\r\n      \r\n      <PageSubTitle subTitles={subTitles} />\r\n        \r\n      <IonList>\r\n\r\n        \r\n        <TermsContent />\r\n        \r\n        \r\n      </IonList>\r\n        \r\n        \r\n      </IonContent>\r\n\r\n      {\r\n          auth?.isAuthenticated && <FooterLoggedIn />\r\n      }\r\n      \r\n    </IonPage>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {})(withRouter(TermsAndConditions));\r\n","import React from 'react';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonHeader, IonToolbar, IonTitle, IonPage, IonContent, IonCard, IonItem, IonButton  } from '@ionic/react';\nimport HomePageGuest from './pages/HomePageGuest';\nimport HomePageUser from './pages/HomePageUser';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/register/Register';\nimport { Fragment, useEffect, useState } from 'react';\nimport GSA from './pages/auth/register/GSA';\nimport SecurityCenter from './pages/SecurityCenter';\nimport RecoverEmail from './pages/auth/RecoverEmail';\nimport RecoverPassword from './pages/auth/RecoverPassword';\nimport { loadUser, loadUsers } from './store/actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport { connect } from 'react-redux';\nimport Transactions from './pages/Transactions';\nimport Statistics from './pages/Statistics';\nimport { getBalance } from './store/actions/tsx';\nimport { clearProjects, getProjects } from './store/actions/project';\nimport Menu from './components/Menu';\nimport PageHeader from './components/PageHeader';\nimport PageSubTitle from './components/PageSubTitle';\nimport PageNotFound from './pages/PageNotFound';\nimport MyTransactions from './pages/MyTransactions';\nimport Store from './pages/Store';\nimport Profile from './pages/Profile';\nimport ChooseTransaction from './pages/ChooseTransaction';\nimport Project from './pages/Project';\nimport Projects from './pages/Projects';\nimport Loading from './pages/Loading';\nimport Tsx from './pages/Tsx';\nimport MyInvestments from './pages/MyInvestments';\nimport NewProject from './pages/NewProject';\nimport ApprovePage from './pages/ApprovePage';\nimport Settings from './pages/Settings';\nimport Wallets from './pages/Wallets';\nimport Wallet from './pages/Wallet';\nimport { setupIonicReact } from '@ionic/react';\nimport TermsAndConditions from './pages/TermsAndConditions';\n\nconst App: React.FC<any> = ({ isAuthenticated, loadUser, auth, getBalance, location, history, getProjects, project, tsx, loadUsers, users }) => {\n\n\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n      loadUser();\n    }\n  }, [loadUser])\n  \n  useEffect(() => {\n    if (auth?.user?.user_id) {\n      getBalance(auth?.user)\n    } else {\n      getBalance()\n    }\n    \n  }, [auth?.user?.user_id, auth?.user?.wallets, tsx?.tsxs?.length])\n\n  useEffect(() => {\n    if (auth?.user?.user_id) {\n      getProjects(auth?.user)\n    } else {\n      getProjects()\n    }\n\n    /* return () => {\n      \n      console.log('clearr projects')\n      clearProjects()\n    } */\n    \n  }, [auth?.user, tsx?.tsxs?.length])\n  \n  useEffect(() => {\n    \n    loadUsers()\n\n    /* return () => {\n      \n      console.log('clearr projects')\n      clearProjects()\n    } */\n    \n  }, [auth?.user])\n\n  setupIonicReact({\n    mode: 'md'\n  });\n\n  return (\n  <IonApp>\n    \n    <Menu />\n        {\n          auth.loading ? <Fragment>\n            <Loading />\n          </Fragment> : users.loading ? <Fragment>\n            <Loading />\n          </Fragment> : isAuthenticated ? <Fragment>\n            <IonRouterOutlet id=\"output\">\n              <Route exact path=\"/\">\n                <HomePageUser />\n              </Route>\n              <Route exact path=\"/my_transactions\">\n                <MyTransactions />\n              </Route>\n              <Route exact path=\"/my_investments\">\n                <MyInvestments />\n              </Route>\n              <Route exact path=\"/transactions\">\n                <Transactions />\n              </Route>\n              <Route exact path=\"/transactions/:tsx_id\">\n                <Tsx />\n              </Route>\n              <Route exact path=\"/new_transaction\">\n                <ChooseTransaction />\n              </Route>\n              <Route exact path=\"/new_project\">\n                <NewProject />\n              </Route>\n              <Route exact path=\"/statistics\">\n                <Statistics />\n              </Route>\n              <Route exact path=\"/store\">\n                <Store />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route exact path=\"/projects/:project_id\">\n                <Project />\n              </Route>\n              <Route exact path=\"/projects\">\n                <Projects />\n              </Route>\n              <Route exact path=\"/settings\">\n                <Settings />\n              </Route>\n                \n              <Route exact path=\"/wallets\">\n                <Wallets />\n              </Route>\n              <Route exact path=\"/wallets/:currency\">\n                <Wallet />\n              </Route>\n              <Route exact path=\"/security_center\">\n                <SecurityCenter />\n              </Route>\n              <Route exact path=\"/terms_and_conditions\">\n                <TermsAndConditions />\n              </Route>\n              <Route exact path=\"/account_approvement\">\n                {\n                  auth?.user?.approved ? <PageNotFound /> : <ApprovePage />\n                }\n                \n              </Route>\n              <Route exact>\n                <PageNotFound />\n              </Route>\n\n              <Route\n                path=\"/home\"\n                render={() => <Redirect to=\"/\" />}\n                exact={true}\n              />\n              \n            </IonRouterOutlet>\n            \n          </Fragment> : <Fragment>\n            <IonRouterOutlet id=\"output\">\n              <Route exact path=\"/home\">\n                <HomePageGuest />\n              </Route>\n              <Route exact path=\"/security_center\">\n                <SecurityCenter />\n              </Route>\n              <Route exact path=\"/terms_and_conditions\">\n                <TermsAndConditions />\n              </Route>\n              <Route exact path=\"/recover_email\">\n                <RecoverEmail />\n              </Route>\n              <Route exact path=\"/recover_password\">\n                <RecoverPassword />\n              </Route>\n              <Route exact path=\"/logon\">\n                <Login />\n              </Route>\n              <Route exact path=\"/register\">\n                <Register />\n              </Route>\n              <Route exact path=\"/register/gsa\">\n                <GSA />\n              </Route>\n              <Route exact path=\"/transactions\">\n                <Transactions />\n              </Route>\n              <Route exact path=\"/transactions/:tsx_id\">\n                <Tsx />\n              </Route>\n              <Route exact path=\"/projects/:project_id\">\n                <Project />\n              </Route>\n              <Route exact path=\"/projects\">\n                <Projects />\n              </Route>\n\n              <Route exact>\n                <PageNotFound />\n              </Route>\n\n              \n              <Route\n                path=\"/\"\n                render={() => <Redirect to=\"/home\" />}\n                exact={true}\n              />\n\n            </IonRouterOutlet>\n          </Fragment>\n        }\n\n  </IonApp>\n  )};\nconst mapStateToProps = (state: any) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n  project: state.project, \n  tsx: state.tsx,\n  account: state.account,\n  users: state.users\n})\nexport default connect(mapStateToProps, { loadUser, getBalance, getProjects, clearProjects, loadUsers })(withRouter(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Set_Alert, Remove_Alert } from '../actions/alert/types'\r\n\r\n/* interface Alert {\r\n    id: string\r\n    message: string\r\n    type: string\r\n} */\r\ninterface AlertState {\r\n    alerts: any[]\r\n}\r\n\r\nexport const initialState = {\r\n    alerts: []\r\n};\r\n\r\nconst alert = (state: AlertState = initialState, action: any ): AlertState => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case Set_Alert:\r\n            return {...state, alerts: [...state.alerts, payload]}\r\n        case Remove_Alert:\r\n            return {...state, alerts: state.alerts.filter(element => element.id !== payload)}\r\n        default:\r\n            return state;\r\n    }   \r\n\r\n}\r\nexport default alert;","import { AuthType, Loading_Auth, Load_User, Login_Fail, Login_Success, Logout_User, Pre_Login_Fail, Pre_Login_Success, Register_Fail, Register_Success, UserType, User_Update, User_Update_Fail } from '../actions/auth/types'\r\n\r\n\r\nexport const initialState = {\r\n    user: {\r\n        name: null,\r\n        email: null,\r\n        password: null,\r\n        accountType: null,\r\n        avatar: null,\r\n        role: null,\r\n        two_factor: null,\r\n        currency: null\r\n    },\r\n    preLogin: {\r\n        email: null\r\n    },\r\n    loading: false,\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    errors: {}\r\n}\r\n\r\n\r\nconst auth = (state: AuthType = initialState, action: any) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case Loading_Auth:\r\n            return {...state, loading: true }\r\n        case Load_User:\r\n            return {...state, user: payload.user, isAuthenticated: true, loading: false }\r\n\r\n        case Register_Success:\r\n        case Login_Success:\r\n            localStorage.setItem('token', payload.token);\r\n            return {...state, user: payload.user, ...payload, isAuthenticated: true, loading: false }\r\n        \r\n        case Logout_User:\r\n        case Register_Fail:\r\n        case Login_Fail:\r\n            localStorage.removeItem('token');\r\n            return {...state, user: null, token: null, isAuthenticated: false, loading: false }    \r\n        \r\n        case User_Update:\r\n            return { ...state, user: payload?.user, loading: false }\r\n                \r\n        case User_Update_Fail:\r\n            return { ...state, loading: false }\r\n        \r\n        case Pre_Login_Success:\r\n            return { ...state, preLogin: { email: payload.email }, loading: false }\r\n\r\n        case Pre_Login_Fail:\r\n            return { ...state, preLogin: null, loading: false }\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default auth;","import { AuthType, Load_User, Load_Users_Fail, Load_Users_Success, Login_Fail, Login_Success, Logout_User, Register_Fail, Register_Success, UserType, User_Update } from '../actions/auth/types'\r\n\r\n\r\nexport const initialState = {\r\n    users: [],\r\n    loading: true,\r\n    errors: {}\r\n}\r\n\r\n\r\nconst users = (state: any = initialState, action: any) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        \r\n        case Load_Users_Success:\r\n            return {...state, users: payload.users || [], loading: false }\r\n\r\n        case Load_Users_Fail:\r\n            return {...state, users: [], loading: false }    \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default users;","import { Tsx_Create_Success, Tsx_Create_Fail, Get_Tsx_Success, Get_Tsx_Fail, Get_Tsxs_Success, Get_Tsxs_Fail, Tsx_Loading } from '../actions/tsx/types'\r\n\r\n\r\nexport const initialState = {\r\n    tsxs: [],\r\n    tsx: null,\r\n    loading: true,\r\n    errors: {}\r\n}\r\n\r\n\r\nconst tsx = (state: any = initialState, action: any) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n\r\n        case Get_Tsxs_Success:\r\n            return {...state, tsxs: payload, loading: false }        \r\n\r\n        case Get_Tsxs_Fail:\r\n            return {...state, tsxs: [], loading: false }\r\n\r\n        case Get_Tsx_Success:\r\n            return {...state, tsx: payload, loading: false }        \r\n\r\n        case Get_Tsx_Fail:\r\n            return {...state, tsx: null, loading: false }        \r\n    \r\n        case Tsx_Create_Success:\r\n            return {...state, tsxs: [ payload.tsx, ...state.tsxs ], loading: false }\r\n\r\n        case Tsx_Create_Fail:\r\n\r\n            return {...state, loading: false }\r\n\r\n        /* case Tsx_Loading:\r\n            return {...state, loading: true } */\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tsx;","import { Create_Wallet_Fail, Create_Wallet_Success } from '../actions/auth/types';\r\nimport { Get_Balance_Fail, Get_Balance_Success, Get_My_Investments_Success, Tsx_Create_Success, Get_My_Tsxs_Success, Get_My_Tsxs_Fail, Get_My_Investments_Fail, Get_Total_Funds_Success, Get_Total_Funds_Fail, Get_YieldPA_Success, Get_YieldPA_Fail, Account_Loading, Get_Wallets_Success, Get_Wallets_Fail, Update_Main_Wallet_Success, Update_Main_Wallet_Fail } from '../actions/tsx/types'\r\n\r\n\r\nexport const initialState = {\r\n    tsxs: [],\r\n    investments: [],\r\n    balance: 0,\r\n    wallets: [],\r\n    totalFunds: 0,\r\n    yieldPA: 0,\r\n    loading: true,\r\n    errors: {}\r\n}\r\n\r\n\r\nconst account = (state: any = initialState, action: any) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        \r\n        case Get_Balance_Success:\r\n            return {...state, balance: payload, loading: false }\r\n\r\n        case Get_Wallets_Success:\r\n            return {...state, wallets: payload, loading: false }\r\n\r\n        case Get_My_Tsxs_Success:\r\n            return {...state, tsxs: payload, loading: false }\r\n\r\n        case Get_My_Investments_Success:\r\n            return {...state, investments: payload, loading: false }\r\n\r\n        case Create_Wallet_Success:\r\n            return {...state, wallets: payload.wallets, loading: false }\r\n\r\n        case Create_Wallet_Fail:\r\n            return {...state, loading: false }\r\n\r\n\r\n        case Get_Total_Funds_Success:\r\n            return {...state, totalFunds: payload, loading: false }\r\n\r\n        case Get_YieldPA_Success:\r\n            return {...state, yieldPA: payload, loading: false }\r\n\r\n        case Get_YieldPA_Fail:\r\n            return {...state, yieldPA: 0, loading: false }\r\n\r\n\r\n        case Get_Total_Funds_Fail:\r\n            return {...state, totalFunds: 0, loading: false }\r\n\r\n        case Get_My_Tsxs_Fail:\r\n            return {...state, tsxs: [], loading: false }\r\n\r\n        case Get_My_Investments_Fail:\r\n            return {...state, investments: [], loading: false }\r\n\r\n        case Get_Balance_Fail:\r\n            return {...state, balance: 0, loading: false }\r\n\r\n        case Get_Wallets_Fail:\r\n            return {...state, wallets: [], loading: false }\r\n         \r\n        case Tsx_Create_Success:\r\n            return {...state, tsxs: [ payload.tsx, ...state.tsxs ], loading: false }\r\n         \r\n        case Account_Loading:\r\n            return {...state, loading: true }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default account;","import { Project_Create_Success, Project_Create_Fail, Get_Projects_Success, Get_Open_Projects_Success, Get_Under_Consideration_Projects_Success, Get_Closed_Projects_Success, Get_Projects_Fail, Get_Open_Projects_Fail, Get_Under_Consideration_Projects_Fail, Get_Closed_Projects_Fail, Get_Project_Success, Get_Project_Fail, Project_Loading, Project_Update_Success, Project_Update_Fail, Project_Delete_Success, Project_Delete_Fail } from '../actions/project/types'\r\n\r\n\r\nexport const initialState = {\r\n    projects: [],\r\n    openProjects: [],\r\n    underConsiderationProjects: [],\r\n    closedProjects: [],\r\n    project: null,\r\n    loading: true,\r\n    errors: {}\r\n}\r\n\r\n\r\nconst project = (state: any = initialState, action: any) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n\r\n        case Get_Projects_Success:\r\n            return {...state, projects: payload, loading: false }\r\n\r\n        case Get_Project_Success:\r\n            return {...state, project: payload, loading: false }\r\n        \r\n        case Get_Open_Projects_Success:\r\n            return {...state, openProjects: payload, loading: false }\r\n        \r\n        case Get_Under_Consideration_Projects_Success:\r\n            return {...state, underConsiderationProjects: payload, loading: false }\r\n\r\n        case Get_Closed_Projects_Success:\r\n            return {...state, closedProjects: payload, loading: false }\r\n\r\n        case Project_Update_Success:\r\n            return {...state, project: payload, loading: false }\r\n\r\n        case Project_Delete_Success:\r\n            return {...state, project: null, projects: state.projects.filter((element: any) => element?.project_id?.toString() !== payload?.toString()), underConsiderationProjects: state.underConsiderationProjects.filter((element: any) => element?.project_id?.toString() !== payload?.toString()) , loading: false }\r\n\r\n        case Project_Delete_Fail:\r\n            return {...state, loading: false }\r\n\r\n        case Project_Create_Success:\r\n            return {...state, projects: [...state.projects, payload.project], openProjects: payload.project.status === \"OPEN\" ? [...state.openProjects, payload.project] : state.openProjects, closedProjects: payload.project.status !== \"OPEN\" ? [...state.closedProjects, payload.project] : state.closedProjects, loading: false }\r\n\r\n        case Get_Projects_Fail:\r\n            return {...state, projects: [], loading: false }\r\n\r\n        case Project_Update_Fail:\r\n            return {...state, loading: false }\r\n\r\n        case Get_Project_Fail:\r\n            return {...state, project: null, loading: false }\r\n\r\n        case Get_Open_Projects_Fail:\r\n            return {...state, openProjects: [], loading: false }\r\n\r\n        case Get_Closed_Projects_Fail:\r\n            return {...state, closedProjects: [], loading: false }\r\n\r\n        case Get_Under_Consideration_Projects_Fail:\r\n            return {...state, underConsiderationProjects: [], loading: false }\r\n\r\n        case Project_Create_Fail:\r\n            return {...state, projects: [], openProjects: [], closedProjects: [], loading: false }\r\n\r\n        case Project_Loading:\r\n            return {...state, loading: true }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default project;","import { combineReducers } from 'redux';\r\n\r\n\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport users from './users';\r\nimport tsx from './tsx';\r\nimport account from './account';\r\nimport project from './project';\r\n\r\nconst rootReducer = combineReducers({\r\n    alert,\r\n    auth,\r\n    users,\r\n    tsx,\r\n    account,\r\n    project\r\n})\r\n\r\nexport default rootReducer;","\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState: any = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nexport type RootStore = ReturnType<typeof rootReducer>\r\n\r\nconst store =  createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))    \r\n);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { IonReactRouter} from '@ionic/react-router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <IonReactRouter>\n        <App />\n      </IonReactRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 78;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 79;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t126,\n\t\t13\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 80;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}